(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-47302bde"],{"00a5":function(t,n,e){"use strict";var r=e("e48b");n["a"]=function(t){return"string"===typeof t?new r["a"]([[document.querySelector(t)]],[document.documentElement]):new r["a"]([[t]],r["c"])}},"0165":function(t,n,e){"use strict";e.d(n,"c",(function(){return i})),e.d(n,"a",(function(){return h}));var r={},i=null;if("undefined"!==typeof document){var a=document.documentElement;"onmouseenter"in a||(r={mouseenter:"mouseover",mouseleave:"mouseout"})}function c(t,n,e){return t=u(t,n,e),function(n){var e=n.relatedTarget;e&&(e===this||8&e.compareDocumentPosition(this))||t.call(this,n)}}function u(t,n,e){return function(r){var a=i;i=r;try{t.call(this,this.__data__,n,e)}finally{i=a}}}function f(t){return t.trim().split(/^|\s+/).map((function(t){var n="",e=t.indexOf(".");return e>=0&&(n=t.slice(e+1),t=t.slice(0,e)),{type:t,name:n}}))}function o(t){return function(){var n=this.__on;if(n){for(var e,r=0,i=-1,a=n.length;r<a;++r)e=n[r],t.type&&e.type!==t.type||e.name!==t.name?n[++i]=e:this.removeEventListener(e.type,e.listener,e.capture);++i?n.length=i:delete this.__on}}}function s(t,n,e){var i=r.hasOwnProperty(t.type)?c:u;return function(r,a,c){var u,f=this.__on,o=i(n,a,c);if(f)for(var s=0,h=f.length;s<h;++s)if((u=f[s]).type===t.type&&u.name===t.name)return this.removeEventListener(u.type,u.listener,u.capture),this.addEventListener(u.type,u.listener=o,u.capture=e),void(u.value=n);this.addEventListener(t.type,o,e),u={type:t.type,name:t.name,value:n,listener:o,capture:e},f?f.push(u):this.__on=[u]}}function h(t,n,e,r){var a=i;t.sourceEvent=i,i=t;try{return n.apply(e,r)}finally{i=a}}n["b"]=function(t,n,e){var r,i,a=f(t+""),c=a.length;if(!(arguments.length<2)){for(u=n?s:o,null==e&&(e=!1),r=0;r<c;++r)this.each(u(a[r],n,e));return this}var u=this.node().__on;if(u)for(var h,l=0,d=u.length;l<d;++l)for(r=0,h=u[l];r<c;++r)if((i=a[r]).type===h.type&&i.name===h.name)return h.value}},"06f7":function(t,n,e){"use strict";var r=e("166a"),i=Object(r["g"])(),a=Math.PI/3,c=2*Math.PI/3;n["a"]=function(t){var n;return t=(.5-t)*Math.PI,i.r=255*(n=Math.sin(t))*n,i.g=255*(n=Math.sin(t+a))*n,i.b=255*(n=Math.sin(t+c))*n,i+""}},"0803":function(t,n,e){"use strict";var r=e("0986"),i=.8908130915292852,a=Math.sin(r["j"]/10)/Math.sin(7*r["j"]/10),c=Math.sin(r["m"]/10)*a,u=-Math.cos(r["m"]/10)*a;n["a"]={draw:function(t,n){var e=Math.sqrt(n*i),a=c*e,f=u*e;t.moveTo(0,-e),t.lineTo(a,f);for(var o=1;o<5;++o){var s=r["m"]*o/5,h=Math.cos(s),l=Math.sin(s);t.lineTo(l*e,-h*e),t.lineTo(h*a-l*f,l*a+h*f)}t.closePath()}}},"0830":function(t,n,e){"use strict";var r=e("14f3"),i=e("ec83");n["a"]=function(t,n,e,a,c){(1&t.depth?i["a"]:r["a"])(t,n,e,a,c)}},"092b":function(t,n,e){"use strict";function r(){return 0}e.d(n,"a",(function(){return r})),n["b"]=function(t){return function(){return t}}},"0986":function(t,n,e){"use strict";e.d(n,"a",(function(){return r})),e.d(n,"d",(function(){return i})),e.d(n,"e",(function(){return a})),e.d(n,"h",(function(){return c})),e.d(n,"i",(function(){return u})),e.d(n,"k",(function(){return f})),e.d(n,"l",(function(){return o})),e.d(n,"f",(function(){return s})),e.d(n,"j",(function(){return h})),e.d(n,"g",(function(){return l})),e.d(n,"m",(function(){return d})),e.d(n,"b",(function(){return b})),e.d(n,"c",(function(){return p}));var r=Math.abs,i=Math.atan2,a=Math.cos,c=Math.max,u=Math.min,f=Math.sin,o=Math.sqrt,s=1e-12,h=Math.PI,l=h/2,d=2*h;function b(t){return t>1?0:t<-1?h:Math.acos(t)}function p(t){return t>=1?l:t<=-1?-l:Math.asin(t)}},"09b8":function(t,n,e){"use strict";e.d(n,"b",(function(){return i})),e.d(n,"a",(function(){return a}));var r=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function i(t){if(!(n=r.exec(t)))throw new Error("invalid format: "+t);var n;return new a({fill:n[1],align:n[2],sign:n[3],symbol:n[4],zero:n[5],width:n[6],comma:n[7],precision:n[8]&&n[8].slice(1),trim:n[9],type:n[10]})}function a(t){this.fill=void 0===t.fill?" ":t.fill+"",this.align=void 0===t.align?">":t.align+"",this.sign=void 0===t.sign?"-":t.sign+"",this.symbol=void 0===t.symbol?"":t.symbol+"",this.zero=!!t.zero,this.width=void 0===t.width?void 0:+t.width,this.comma=!!t.comma,this.precision=void 0===t.precision?void 0:+t.precision,this.trim=!!t.trim,this.type=void 0===t.type?"":t.type+""}i.prototype=a.prototype,a.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(void 0===this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(void 0===this.precision?"":"."+Math.max(0,0|this.precision))+(this.trim?"~":"")+this.type}},"0a4a":function(t,n,e){"use strict";e.d(n,"a",(function(){return r})),e.d(n,"b",(function(){return o})),e.d(n,"c",(function(){return d})),e.d(n,"d",(function(){return w})),e.d(n,"e",(function(){return m})),e.d(n,"f",(function(){return x})),e.d(n,"g",(function(){return M})),e.d(n,"h",(function(){return j}));var r=function(t,n){var e;function r(){var r,i,a=e.length,c=0,u=0;for(r=0;r<a;++r)i=e[r],c+=i.x,u+=i.y;for(c=c/a-t,u=u/a-n,r=0;r<a;++r)i=e[r],i.x-=c,i.y-=u}return null==t&&(t=0),null==n&&(n=0),r.initialize=function(t){e=t},r.x=function(n){return arguments.length?(t=+n,r):t},r.y=function(t){return arguments.length?(n=+t,r):n},r},i=function(t){return function(){return t}},a=function(){return 1e-6*(Math.random()-.5)},c=e("cfa1");function u(t){return t.x+t.vx}function f(t){return t.y+t.vy}var o=function(t){var n,e,r=1,o=1;function s(){for(var t,i,s,l,d,b,p,_=n.length,v=0;v<o;++v)for(i=Object(c["a"])(n,u,f).visitAfter(h),t=0;t<_;++t)s=n[t],b=e[s.index],p=b*b,l=s.x+s.vx,d=s.y+s.vy,i.visit(g);function g(t,n,e,i,c){var u=t.data,f=t.r,o=b+f;if(!u)return n>l+o||i<l-o||e>d+o||c<d-o;if(u.index>s.index){var h=l-u.x-u.vx,_=d-u.y-u.vy,v=h*h+_*_;v<o*o&&(0===h&&(h=a(),v+=h*h),0===_&&(_=a(),v+=_*_),v=(o-(v=Math.sqrt(v)))/v*r,s.vx+=(h*=v)*(o=(f*=f)/(p+f)),s.vy+=(_*=v)*o,u.vx-=h*(o=1-o),u.vy-=_*o)}}}function h(t){if(t.data)return t.r=e[t.data.index];for(var n=t.r=0;n<4;++n)t[n]&&t[n].r>t.r&&(t.r=t[n].r)}function l(){if(n){var r,i,a=n.length;for(e=new Array(a),r=0;r<a;++r)i=n[r],e[i.index]=+t(i,r,n)}}return"function"!==typeof t&&(t=i(null==t?1:+t)),s.initialize=function(t){n=t,l()},s.iterations=function(t){return arguments.length?(o=+t,s):o},s.strength=function(t){return arguments.length?(r=+t,s):r},s.radius=function(n){return arguments.length?(t="function"===typeof n?n:i(+n),l(),s):t},s},s=e("6f04");function h(t){return t.index}function l(t,n){var e=t.get(n);if(!e)throw new Error("missing: "+n);return e}var d=function(t){var n,e,r,c,u,f=h,o=p,d=i(30),b=1;function p(t){return 1/Math.min(c[t.source.index],c[t.target.index])}function _(r){for(var i=0,c=t.length;i<b;++i)for(var f,o,s,h,l,d,p,_=0;_<c;++_)f=t[_],o=f.source,s=f.target,h=s.x+s.vx-o.x-o.vx||a(),l=s.y+s.vy-o.y-o.vy||a(),d=Math.sqrt(h*h+l*l),d=(d-e[_])/d*r*n[_],h*=d,l*=d,s.vx-=h*(p=u[_]),s.vy-=l*p,o.vx+=h*(p=1-p),o.vy+=l*p}function v(){if(r){var i,a,o=r.length,h=t.length,d=Object(s["c"])(r,f);for(i=0,c=new Array(o);i<h;++i)a=t[i],a.index=i,"object"!==typeof a.source&&(a.source=l(d,a.source)),"object"!==typeof a.target&&(a.target=l(d,a.target)),c[a.source.index]=(c[a.source.index]||0)+1,c[a.target.index]=(c[a.target.index]||0)+1;for(i=0,u=new Array(h);i<h;++i)a=t[i],u[i]=c[a.source.index]/(c[a.source.index]+c[a.target.index]);n=new Array(h),g(),e=new Array(h),y()}}function g(){if(r)for(var e=0,i=t.length;e<i;++e)n[e]=+o(t[e],e,t)}function y(){if(r)for(var n=0,i=t.length;n<i;++n)e[n]=+d(t[n],n,t)}return null==t&&(t=[]),_.initialize=function(t){r=t,v()},_.links=function(n){return arguments.length?(t=n,v(),_):t},_.id=function(t){return arguments.length?(f=t,_):f},_.iterations=function(t){return arguments.length?(b=+t,_):b},_.strength=function(t){return arguments.length?(o="function"===typeof t?t:i(+t),g(),_):o},_.distance=function(t){return arguments.length?(d="function"===typeof t?t:i(+t),y(),_):d},_},b=e("c68f"),p=e("74f4");function _(t){return t.x}function v(t){return t.y}var g=10,y=Math.PI*(3-Math.sqrt(5)),x=function(t){var n,e=1,r=.001,i=1-Math.pow(r,1/300),a=0,c=.6,u=Object(s["c"])(),f=Object(p["c"])(h),o=Object(b["a"])("tick","end");function h(){l(),o.call("tick",n),e<r&&(f.stop(),o.call("end",n))}function l(r){var f,o,s=t.length;void 0===r&&(r=1);for(var h=0;h<r;++h)for(e+=(a-e)*i,u.each((function(t){t(e)})),f=0;f<s;++f)o=t[f],null==o.fx?o.x+=o.vx*=c:(o.x=o.fx,o.vx=0),null==o.fy?o.y+=o.vy*=c:(o.y=o.fy,o.vy=0);return n}function d(){for(var n,e=0,r=t.length;e<r;++e){if(n=t[e],n.index=e,null!=n.fx&&(n.x=n.fx),null!=n.fy&&(n.y=n.fy),isNaN(n.x)||isNaN(n.y)){var i=g*Math.sqrt(e),a=e*y;n.x=i*Math.cos(a),n.y=i*Math.sin(a)}(isNaN(n.vx)||isNaN(n.vy))&&(n.vx=n.vy=0)}}function _(n){return n.initialize&&n.initialize(t),n}return null==t&&(t=[]),d(),n={tick:l,restart:function(){return f.restart(h),n},stop:function(){return f.stop(),n},nodes:function(e){return arguments.length?(t=e,d(),u.each(_),n):t},alpha:function(t){return arguments.length?(e=+t,n):e},alphaMin:function(t){return arguments.length?(r=+t,n):r},alphaDecay:function(t){return arguments.length?(i=+t,n):+i},alphaTarget:function(t){return arguments.length?(a=+t,n):a},velocityDecay:function(t){return arguments.length?(c=1-t,n):1-c},force:function(t,e){return arguments.length>1?(null==e?u.remove(t):u.set(t,_(e)),n):u.get(t)},find:function(n,e,r){var i,a,c,u,f,o=0,s=t.length;for(null==r?r=1/0:r*=r,o=0;o<s;++o)u=t[o],i=n-u.x,a=e-u.y,c=i*i+a*a,c<r&&(f=u,r=c);return f},on:function(t,e){return arguments.length>1?(o.on(t,e),n):o.on(t)}}},w=function(){var t,n,e,r,u=i(-30),f=1,o=1/0,s=.81;function h(r){var i,a=t.length,u=Object(c["a"])(t,_,v).visitAfter(d);for(e=r,i=0;i<a;++i)n=t[i],u.visit(b)}function l(){if(t){var n,e,i=t.length;for(r=new Array(i),n=0;n<i;++n)e=t[n],r[e.index]=+u(e,n,t)}}function d(t){var n,e,i,a,c,u=0,f=0;if(t.length){for(i=a=c=0;c<4;++c)(n=t[c])&&(e=Math.abs(n.value))&&(u+=n.value,f+=e,i+=e*n.x,a+=e*n.y);t.x=i/f,t.y=a/f}else{n=t,n.x=n.data.x,n.y=n.data.y;do{u+=r[n.data.index]}while(n=n.next)}t.value=u}function b(t,i,c,u){if(!t.value)return!0;var h=t.x-n.x,l=t.y-n.y,d=u-i,b=h*h+l*l;if(d*d/s<b)return b<o&&(0===h&&(h=a(),b+=h*h),0===l&&(l=a(),b+=l*l),b<f&&(b=Math.sqrt(f*b)),n.vx+=h*t.value*e/b,n.vy+=l*t.value*e/b),!0;if(!(t.length||b>=o)){(t.data!==n||t.next)&&(0===h&&(h=a(),b+=h*h),0===l&&(l=a(),b+=l*l),b<f&&(b=Math.sqrt(f*b)));do{t.data!==n&&(d=r[t.data.index]*e/b,n.vx+=h*d,n.vy+=l*d)}while(t=t.next)}}return h.initialize=function(n){t=n,l()},h.strength=function(t){return arguments.length?(u="function"===typeof t?t:i(+t),l(),h):u},h.distanceMin=function(t){return arguments.length?(f=t*t,h):Math.sqrt(f)},h.distanceMax=function(t){return arguments.length?(o=t*t,h):Math.sqrt(o)},h.theta=function(t){return arguments.length?(s=t*t,h):Math.sqrt(s)},h},m=function(t,n,e){var r,a,c,u=i(.1);function f(t){for(var i=0,u=r.length;i<u;++i){var f=r[i],o=f.x-n||1e-6,s=f.y-e||1e-6,h=Math.sqrt(o*o+s*s),l=(c[i]-h)*a[i]*t/h;f.vx+=o*l,f.vy+=s*l}}function o(){if(r){var n,e=r.length;for(a=new Array(e),c=new Array(e),n=0;n<e;++n)c[n]=+t(r[n],n,r),a[n]=isNaN(c[n])?0:+u(r[n],n,r)}}return"function"!==typeof t&&(t=i(+t)),null==n&&(n=0),null==e&&(e=0),f.initialize=function(t){r=t,o()},f.strength=function(t){return arguments.length?(u="function"===typeof t?t:i(+t),o(),f):u},f.radius=function(n){return arguments.length?(t="function"===typeof n?n:i(+n),o(),f):t},f.x=function(t){return arguments.length?(n=+t,f):n},f.y=function(t){return arguments.length?(e=+t,f):e},f},M=function(t){var n,e,r,a=i(.1);function c(t){for(var i,a=0,c=n.length;a<c;++a)i=n[a],i.vx+=(r[a]-i.x)*e[a]*t}function u(){if(n){var i,c=n.length;for(e=new Array(c),r=new Array(c),i=0;i<c;++i)e[i]=isNaN(r[i]=+t(n[i],i,n))?0:+a(n[i],i,n)}}return"function"!==typeof t&&(t=i(null==t?0:+t)),c.initialize=function(t){n=t,u()},c.strength=function(t){return arguments.length?(a="function"===typeof t?t:i(+t),u(),c):a},c.x=function(n){return arguments.length?(t="function"===typeof n?n:i(+n),u(),c):t},c},j=function(t){var n,e,r,a=i(.1);function c(t){for(var i,a=0,c=n.length;a<c;++a)i=n[a],i.vy+=(r[a]-i.y)*e[a]*t}function u(){if(n){var i,c=n.length;for(e=new Array(c),r=new Array(c),i=0;i<c;++i)e[i]=isNaN(r[i]=+t(n[i],i,n))?0:+a(n[i],i,n)}}return"function"!==typeof t&&(t=i(null==t?0:+t)),c.initialize=function(t){n=t,u()},c.strength=function(t){return arguments.length?(a="function"===typeof t?t:i(+t),u(),c):a},c.y=function(n){return arguments.length?(t="function"===typeof n?n:i(+n),u(),c):t},c}},"0a78":function(t,n,e){"use strict";n["a"]=function(t){return function(){return this.matches(t)}}},"0b7d":function(t,n,e){"use strict";var r=e("66d1");n["a"]=Object(r["a"])("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f")},"0dd4":function(t,n,e){"use strict";n["a"]=function(t){t.x0=Math.round(t.x0),t.y0=Math.round(t.y0),t.x1=Math.round(t.x1),t.y1=Math.round(t.y1)}},1231:function(t,n,e){"use strict";e.d(n,"b",(function(){return i})),e.d(n,"c",(function(){return a})),e.d(n,"a",(function(){return u}));var r,i,a,c=e("b170");function u(t){return r=Object(c["a"])(t),i=r.format,a=r.formatPrefix,r}u({decimal:".",thousands:",",grouping:[3],currency:["$",""],minus:"-"})},"14f3":function(t,n,e){"use strict";n["a"]=function(t,n,e,r,i){var a,c=t.children,u=-1,f=c.length,o=t.value&&(r-n)/t.value;while(++u<f)a=c[u],a.y0=e,a.y1=i,a.x0=n,a.x1=n+=a.value*o}},"15a7":function(t,n,e){"use strict";e.d(n,"a",(function(){return p}));var r=e("63ad8"),i=e("166a"),a=e("530a"),c=-.14861,u=1.78277,f=-.29227,o=-.90649,s=1.97294,h=s*o,l=s*u,d=u*f-o*c;function b(t){if(t instanceof _)return new _(t.h,t.s,t.l,t.opacity);t instanceof i["b"]||(t=Object(i["h"])(t));var n=t.r/255,e=t.g/255,r=t.b/255,c=(d*r+h*n-l*e)/(d+h-l),u=r-c,b=(s*(e-c)-f*u)/o,p=Math.sqrt(b*b+u*u)/(s*c*(1-c)),v=p?Math.atan2(b,u)*a["b"]-120:NaN;return new _(v<0?v+360:v,p,c,t.opacity)}function p(t,n,e,r){return 1===arguments.length?b(t):new _(t,n,e,null==r?1:r)}function _(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}Object(r["a"])(_,p,Object(r["b"])(i["a"],{brighter:function(t){return t=null==t?i["c"]:Math.pow(i["c"],t),new _(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?i["d"]:Math.pow(i["d"],t),new _(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=isNaN(this.h)?0:(this.h+120)*a["a"],n=+this.l,e=isNaN(this.s)?0:this.s*n*(1-n),r=Math.cos(t),h=Math.sin(t);return new i["b"](255*(n+e*(c*r+u*h)),255*(n+e*(f*r+o*h)),255*(n+e*(s*r)),this.opacity)}}))},"166a":function(t,n,e){"use strict";e.d(n,"a",(function(){return i})),e.d(n,"d",(function(){return a})),e.d(n,"c",(function(){return c})),e.d(n,"e",(function(){return w})),e.d(n,"h",(function(){return j})),e.d(n,"g",(function(){return O})),e.d(n,"b",(function(){return N})),e.d(n,"f",(function(){return S}));var r=e("63ad8");function i(){}var a=.7,c=1/a,u="\\s*([+-]?\\d+)\\s*",f="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",o="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",s=/^#([0-9a-f]{3,8})$/,h=new RegExp("^rgb\\("+[u,u,u]+"\\)$"),l=new RegExp("^rgb\\("+[o,o,o]+"\\)$"),d=new RegExp("^rgba\\("+[u,u,u,f]+"\\)$"),b=new RegExp("^rgba\\("+[o,o,o,f]+"\\)$"),p=new RegExp("^hsl\\("+[f,o,o]+"\\)$"),_=new RegExp("^hsla\\("+[f,o,o,f]+"\\)$"),v={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function g(){return this.rgb().formatHex()}function y(){return E(this).formatHsl()}function x(){return this.rgb().formatRgb()}function w(t){var n,e;return t=(t+"").trim().toLowerCase(),(n=s.exec(t))?(e=n[1].length,n=parseInt(n[1],16),6===e?m(n):3===e?new N(n>>8&15|n>>4&240,n>>4&15|240&n,(15&n)<<4|15&n,1):8===e?M(n>>24&255,n>>16&255,n>>8&255,(255&n)/255):4===e?M(n>>12&15|n>>8&240,n>>8&15|n>>4&240,n>>4&15|240&n,((15&n)<<4|15&n)/255):null):(n=h.exec(t))?new N(n[1],n[2],n[3],1):(n=l.exec(t))?new N(255*n[1]/100,255*n[2]/100,255*n[3]/100,1):(n=d.exec(t))?M(n[1],n[2],n[3],n[4]):(n=b.exec(t))?M(255*n[1]/100,255*n[2]/100,255*n[3]/100,n[4]):(n=p.exec(t))?C(n[1],n[2]/100,n[3]/100,1):(n=_.exec(t))?C(n[1],n[2]/100,n[3]/100,n[4]):v.hasOwnProperty(t)?m(v[t]):"transparent"===t?new N(NaN,NaN,NaN,0):null}function m(t){return new N(t>>16&255,t>>8&255,255&t,1)}function M(t,n,e,r){return r<=0&&(t=n=e=NaN),new N(t,n,e,r)}function j(t){return t instanceof i||(t=w(t)),t?(t=t.rgb(),new N(t.r,t.g,t.b,t.opacity)):new N}function O(t,n,e,r){return 1===arguments.length?j(t):new N(t,n,e,null==r?1:r)}function N(t,n,e,r){this.r=+t,this.g=+n,this.b=+e,this.opacity=+r}function T(){return"#"+A(this.r)+A(this.g)+A(this.b)}function k(){var t=this.opacity;return t=isNaN(t)?1:Math.max(0,Math.min(1,t)),(1===t?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===t?")":", "+t+")")}function A(t){return t=Math.max(0,Math.min(255,Math.round(t)||0)),(t<16?"0":"")+t.toString(16)}function C(t,n,e,r){return r<=0?t=n=e=NaN:e<=0||e>=1?t=n=NaN:n<=0&&(t=NaN),new U(t,n,e,r)}function E(t){if(t instanceof U)return new U(t.h,t.s,t.l,t.opacity);if(t instanceof i||(t=w(t)),!t)return new U;if(t instanceof U)return t;t=t.rgb();var n=t.r/255,e=t.g/255,r=t.b/255,a=Math.min(n,e,r),c=Math.max(n,e,r),u=NaN,f=c-a,o=(c+a)/2;return f?(u=n===c?(e-r)/f+6*(e<r):e===c?(r-n)/f+2:(n-e)/f+4,f/=o<.5?c+a:2-c-a,u*=60):f=o>0&&o<1?0:u,new U(u,f,o,t.opacity)}function S(t,n,e,r){return 1===arguments.length?E(t):new U(t,n,e,null==r?1:r)}function U(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function P(t,n,e){return 255*(t<60?n+(e-n)*t/60:t<180?e:t<240?n+(e-n)*(240-t)/60:n)}Object(r["a"])(i,w,{copy:function(t){return Object.assign(new this.constructor,this,t)},displayable:function(){return this.rgb().displayable()},hex:g,formatHex:g,formatHsl:y,formatRgb:x,toString:x}),Object(r["a"])(N,O,Object(r["b"])(i,{brighter:function(t){return t=null==t?c:Math.pow(c,t),new N(this.r*t,this.g*t,this.b*t,this.opacity)},darker:function(t){return t=null==t?a:Math.pow(a,t),new N(this.r*t,this.g*t,this.b*t,this.opacity)},rgb:function(){return this},displayable:function(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:T,formatHex:T,formatRgb:k,toString:k})),Object(r["a"])(U,S,Object(r["b"])(i,{brighter:function(t){return t=null==t?c:Math.pow(c,t),new U(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?a:Math.pow(a,t),new U(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=this.h%360+360*(this.h<0),n=isNaN(t)||isNaN(this.s)?0:this.s,e=this.l,r=e+(e<.5?e:1-e)*n,i=2*e-r;return new N(P(t>=240?t-240:t+120,i,r),P(t,i,r),P(t<120?t+240:t-120,i,r),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl:function(){var t=this.opacity;return t=isNaN(t)?1:Math.max(0,Math.min(1,t)),(1===t?"hsl(":"hsla(")+(this.h||0)+", "+100*(this.s||0)+"%, "+100*(this.l||0)+"%"+(1===t?")":", "+t+")")}}))},1738:function(t,n,e){"use strict";e.d(n,"d",(function(){return r})),e.d(n,"c",(function(){return i})),e.d(n,"b",(function(){return a})),e.d(n,"a",(function(){return c})),e.d(n,"e",(function(){return u}));var r=1e3,i=6e4,a=36e5,c=864e5,u=6048e5},1809:function(t,n,e){"use strict";e.d(n,"b",(function(){return a}));var r=e("18e2"),i=Object(r["a"])((function(){}),(function(t,n){t.setTime(+t+n)}),(function(t,n){return n-t}));i.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?Object(r["a"])((function(n){n.setTime(Math.floor(n/t)*t)}),(function(n,e){n.setTime(+n+e*t)}),(function(n,e){return(e-n)/t})):i:null},n["a"]=i;var a=i.range},"18e2":function(t,n,e){"use strict";e.d(n,"a",(function(){return a}));var r=new Date,i=new Date;function a(t,n,e,c){function u(n){return t(n=0===arguments.length?new Date:new Date(+n)),n}return u.floor=function(n){return t(n=new Date(+n)),n},u.ceil=function(e){return t(e=new Date(e-1)),n(e,1),t(e),e},u.round=function(t){var n=u(t),e=u.ceil(t);return t-n<e-t?n:e},u.offset=function(t,e){return n(t=new Date(+t),null==e?1:Math.floor(e)),t},u.range=function(e,r,i){var a,c=[];if(e=u.ceil(e),i=null==i?1:Math.floor(i),!(e<r)||!(i>0))return c;do{c.push(a=new Date(+e)),n(e,i),t(e)}while(a<e&&e<r);return c},u.filter=function(e){return a((function(n){if(n>=n)while(t(n),!e(n))n.setTime(n-1)}),(function(t,r){if(t>=t)if(r<0)while(++r<=0)while(n(t,-1),!e(t));else while(--r>=0)while(n(t,1),!e(t));}))},e&&(u.count=function(n,a){return r.setTime(+n),i.setTime(+a),t(r),t(i),Math.floor(e(r,i))},u.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?u.filter(c?function(n){return c(n)%t===0}:function(n){return u.count(0,n)%t===0}):u:null}),u}},"1af0":function(t,n,e){"use strict";var r=e("0986");n["a"]={draw:function(t,n){var e=Math.sqrt(n/r["j"]);t.moveTo(e,0),t.arc(0,0,e,0,r["m"])}}},"1b6d":function(t,n,e){"use strict";n["a"]=function(t,n){var e=new Date;return t=+t,n=+n,function(r){return e.setTime(t*(1-r)+n*r),e}}},"21e5":function(t,n,e){"use strict";function r(t){return null==t?null:i(t)}function i(t){if("function"!==typeof t)throw new Error;return t}e.d(n,"a",(function(){return r})),e.d(n,"b",(function(){return i}))},2373:function(t,n,e){"use strict";var r=e("5be2"),i=e("21e5"),a=e("092b");function c(t){return Math.sqrt(t.value)}function u(t){return function(n){n.children||(n.r=Math.max(0,+t(n)||0))}}function f(t,n){return function(e){if(i=e.children){var i,a,c,u=i.length,f=t(e)*n||0;if(f)for(a=0;a<u;++a)i[a].r+=f;if(c=Object(r["b"])(i),f)for(a=0;a<u;++a)i[a].r-=f;e.r=c+f}}}function o(t){return function(n){var e=n.parent;n.r*=t,e&&(n.x=e.x+t*n.x,n.y=e.y+t*n.y)}}n["a"]=function(){var t=null,n=1,e=1,r=a["a"];function s(i){return i.x=n/2,i.y=e/2,t?i.eachBefore(u(t)).eachAfter(f(r,.5)).eachBefore(o(1)):i.eachBefore(u(c)).eachAfter(f(a["a"],1)).eachAfter(f(r,i.r/Math.min(n,e))).eachBefore(o(Math.min(n,e)/(2*i.r))),i}return s.radius=function(n){return arguments.length?(t=Object(i["a"])(n),s):t},s.size=function(t){return arguments.length?(n=+t[0],e=+t[1],s):[n,e]},s.padding=function(t){return arguments.length?(r="function"===typeof t?t:Object(a["b"])(+t),s):r},s}},2388:function(t,n,e){"use strict";e.d(n,"b",(function(){return a})),e.d(n,"c",(function(){return c}));var r=e("14f3"),i=e("ec83"),a=(1+Math.sqrt(5))/2;function c(t,n,e,a,c,u){var f,o,s,h,l,d,b,p,_,v,g,y=[],x=n.children,w=0,m=0,M=x.length,j=n.value;while(w<M){s=c-e,h=u-a;do{l=x[m++].value}while(!l&&m<M);for(d=b=l,v=Math.max(h/s,s/h)/(j*t),g=l*l*v,_=Math.max(b/g,g/d);m<M;++m){if(l+=o=x[m].value,o<d&&(d=o),o>b&&(b=o),g=l*l*v,p=Math.max(b/g,g/d),p>_){l-=o;break}_=p}y.push(f={value:l,dice:s<h,children:x.slice(w,m)}),f.dice?Object(r["a"])(f,e,a,c,j?a+=h*l/j:u):Object(i["a"])(f,e,a,j?e+=s*l/j:c,u),j-=l,w=m}return y}n["a"]=function t(n){function e(t,e,r,i,a){c(n,t,e,r,i,a)}return e.ratio=function(n){return t((n=+n)>1?n:1)},e}(a)},"24cb":function(t,n,e){"use strict";var r=e("66d1");n["a"]=Object(r["a"])("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666")},2739:function(t,n,e){"use strict";e.d(n,"g",(function(){return c})),e.d(n,"c",(function(){return u})),e.d(n,"k",(function(){return f})),e.d(n,"m",(function(){return o})),e.d(n,"i",(function(){return s})),e.d(n,"a",(function(){return h})),e.d(n,"e",(function(){return l})),e.d(n,"h",(function(){return d})),e.d(n,"d",(function(){return b})),e.d(n,"l",(function(){return p})),e.d(n,"n",(function(){return _})),e.d(n,"j",(function(){return v})),e.d(n,"b",(function(){return g})),e.d(n,"f",(function(){return y}));var r=e("18e2"),i=e("1738");function a(t){return Object(r["a"])((function(n){n.setUTCDate(n.getUTCDate()-(n.getUTCDay()+7-t)%7),n.setUTCHours(0,0,0,0)}),(function(t,n){t.setUTCDate(t.getUTCDate()+7*n)}),(function(t,n){return(n-t)/i["e"]}))}var c=a(0),u=a(1),f=a(2),o=a(3),s=a(4),h=a(5),l=a(6),d=c.range,b=u.range,p=f.range,_=o.range,v=s.range,g=h.range,y=l.range},"29c8":function(t,n,e){"use strict";e.d(n,"b",(function(){return a}));var r=e("0986"),i=e("7792");function a(t,n,e){var i=t._x1,a=t._y1,c=t._x2,u=t._y2;if(t._l01_a>r["f"]){var f=2*t._l01_2a+3*t._l01_a*t._l12_a+t._l12_2a,o=3*t._l01_a*(t._l01_a+t._l12_a);i=(i*f-t._x0*t._l12_2a+t._x2*t._l01_2a)/o,a=(a*f-t._y0*t._l12_2a+t._y2*t._l01_2a)/o}if(t._l23_a>r["f"]){var s=2*t._l23_2a+3*t._l23_a*t._l12_a+t._l12_2a,h=3*t._l23_a*(t._l23_a+t._l12_a);c=(c*s+t._x1*t._l23_2a-n*t._l12_2a)/h,u=(u*s+t._y1*t._l23_2a-e*t._l12_2a)/h}t._context.bezierCurveTo(i,a,c,u,t._x2,t._y2)}function c(t,n){this._context=t,this._alpha=n}c.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:this.point(this._x2,this._y2);break}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3;default:a(this,t,n);break}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}},n["a"]=function t(n){function e(t){return n?new c(t,n):new i["a"](t,0)}return e.alpha=function(n){return t(+n)},e}(.5)},"2c38":function(t,n,e){"use strict";e.d(n,"b",(function(){return c}));var r=e("18e2"),i=e("1738"),a=Object(r["a"])((function(t){t.setTime(t-t.getMilliseconds()-t.getSeconds()*i["d"])}),(function(t,n){t.setTime(+t+n*i["c"])}),(function(t,n){return(n-t)/i["c"]}),(function(t){return t.getMinutes()}));n["a"]=a;var c=a.range},3512:function(t,n,e){"use strict";var r={},i={},a=34,c=10,u=13;function f(t){return new Function("d","return {"+t.map((function(t,n){return JSON.stringify(t)+": d["+n+'] || ""'})).join(",")+"}")}function o(t,n){var e=f(t);return function(r,i){return n(e(r),i,t)}}function s(t){var n=Object.create(null),e=[];return t.forEach((function(t){for(var r in t)r in n||e.push(n[r]=r)})),e}function h(t,n){var e=t+"",r=e.length;return r<n?new Array(n-r+1).join(0)+e:e}function l(t){return t<0?"-"+h(-t,6):t>9999?"+"+h(t,6):h(t,4)}function d(t){var n=t.getUTCHours(),e=t.getUTCMinutes(),r=t.getUTCSeconds(),i=t.getUTCMilliseconds();return isNaN(t)?"Invalid Date":l(t.getUTCFullYear(),4)+"-"+h(t.getUTCMonth()+1,2)+"-"+h(t.getUTCDate(),2)+(i?"T"+h(n,2)+":"+h(e,2)+":"+h(r,2)+"."+h(i,3)+"Z":r?"T"+h(n,2)+":"+h(e,2)+":"+h(r,2)+"Z":e||n?"T"+h(n,2)+":"+h(e,2)+"Z":"")}n["a"]=function(t){var n=new RegExp('["'+t+"\n\r]"),e=t.charCodeAt(0);function h(t,n){var e,r,i=l(t,(function(t,i){if(e)return e(t,i-1);r=t,e=n?o(t,n):f(t)}));return i.columns=r||[],i}function l(t,n){var f,o=[],s=t.length,h=0,l=0,d=s<=0,b=!1;function p(){if(d)return i;if(b)return b=!1,r;var n,f,o=h;if(t.charCodeAt(o)===a){while(h++<s&&t.charCodeAt(h)!==a||t.charCodeAt(++h)===a);return(n=h)>=s?d=!0:(f=t.charCodeAt(h++))===c?b=!0:f===u&&(b=!0,t.charCodeAt(h)===c&&++h),t.slice(o+1,n-1).replace(/""/g,'"')}while(h<s){if((f=t.charCodeAt(n=h++))===c)b=!0;else if(f===u)b=!0,t.charCodeAt(h)===c&&++h;else if(f!==e)continue;return t.slice(o,n)}return d=!0,t.slice(o,s)}t.charCodeAt(s-1)===c&&--s,t.charCodeAt(s-1)===u&&--s;while((f=p())!==i){var _=[];while(f!==r&&f!==i)_.push(f),f=p();n&&null==(_=n(_,l++))||o.push(_)}return o}function b(n,e){return n.map((function(n){return e.map((function(t){return y(n[t])})).join(t)}))}function p(n,e){return null==e&&(e=s(n)),[e.map(y).join(t)].concat(b(n,e)).join("\n")}function _(t,n){return null==n&&(n=s(t)),b(t,n).join("\n")}function v(t){return t.map(g).join("\n")}function g(n){return n.map(y).join(t)}function y(t){return null==t?"":t instanceof Date?d(t):n.test(t+="")?'"'+t.replace(/"/g,'""')+'"':t}return{parse:h,parseRows:l,format:p,formatBody:_,formatRows:v,formatRow:g,formatValue:y}}},"354e":function(t,n,e){"use strict";var r=e("21e5"),i=e("6bcb"),a="$",c={depth:-1},u={};function f(t){return t.id}function o(t){return t.parentId}n["a"]=function(){var t=f,n=o;function e(e){var r,f,o,s,h,l,d,b=e.length,p=new Array(b),_={};for(f=0;f<b;++f)r=e[f],h=p[f]=new i["a"](r),null!=(l=t(r,f,e))&&(l+="")&&(d=a+(h.id=l),_[d]=d in _?u:h);for(f=0;f<b;++f)if(h=p[f],l=n(e[f],f,e),null!=l&&(l+="")){if(s=_[a+l],!s)throw new Error("missing: "+l);if(s===u)throw new Error("ambiguous: "+l);s.children?s.children.push(h):s.children=[h],h.parent=s}else{if(o)throw new Error("multiple roots");o=h}if(!o)throw new Error("no root");if(o.parent=c,o.eachBefore((function(t){t.depth=t.parent.depth+1,--b})).eachBefore(i["b"]),o.parent=null,b>0)throw new Error("cycle");return o}return e.id=function(n){return arguments.length?(t=Object(r["b"])(n),e):t},e.parentId=function(t){return arguments.length?(n=Object(r["b"])(t),e):n},e}},"364b":function(t,n,e){"use strict";e.d(n,"b",(function(){return u}));var r=e("a317");function i(t){return function(){this.style.removeProperty(t)}}function a(t,n,e){return function(){this.style.setProperty(t,n,e)}}function c(t,n,e){return function(){var r=n.apply(this,arguments);null==r?this.style.removeProperty(t):this.style.setProperty(t,r,e)}}function u(t,n){return t.style.getPropertyValue(n)||Object(r["a"])(t).getComputedStyle(t,null).getPropertyValue(n)}n["a"]=function(t,n,e){return arguments.length>1?this.each((null==n?i:"function"===typeof n?c:a)(t,n,null==e?"":e)):u(this.node(),t)}},3872:function(t,n,e){"use strict";e.d(n,"a",(function(){return c}));var r=e("15a7"),i=e("b055");function a(t){return function n(e){function a(n,a){var c=t((n=Object(r["a"])(n)).h,(a=Object(r["a"])(a)).h),u=Object(i["a"])(n.s,a.s),f=Object(i["a"])(n.l,a.l),o=Object(i["a"])(n.opacity,a.opacity);return function(t){return n.h=c(t),n.s=u(t),n.l=f(Math.pow(t,e)),n.opacity=o(t),n+""}}return e=+e,a.gamma=n,a}(1)}n["b"]=a(i["c"]);var c=a(i["a"])},"3b4d":function(t,n,e){"use strict";e.d(n,"a",(function(){return a}));var r=e("d0ae"),i=e("7792");function a(t,n){this._context=t,this._k=(1-n)/6}a.prototype={areaStart:r["a"],areaEnd:r["a"],lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5);break}},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._x3=t,this._y3=n;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=n);break;case 2:this._point=3,this._x5=t,this._y5=n;break;default:Object(i["c"])(this,t,n);break}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}},n["b"]=function t(n){function e(t){return new a(t,n)}return e.tension=function(n){return t(+n)},e}(0)},"3d23":function(t,n,e){"use strict";e.d(n,"a",(function(){return l})),e.d(n,"b",(function(){return b}));var r,i,a,c,u,f=e("b82a"),o=e("474c"),s=e("98f3"),h=e("b5ea"),l=Object(f["a"])(),d=Object(f["a"])(),b={point:s["a"],lineStart:s["a"],lineEnd:s["a"],polygonStart:function(){l.reset(),b.lineStart=p,b.lineEnd=_},polygonEnd:function(){var t=+l;d.add(t<0?o["w"]+t:t),this.lineStart=this.lineEnd=this.point=s["a"]},sphere:function(){d.add(o["w"])}};function p(){b.point=v}function _(){g(r,i)}function v(t,n){b.point=g,r=t,i=n,t*=o["r"],n*=o["r"],a=t,c=Object(o["g"])(n=n/2+o["q"]),u=Object(o["t"])(n)}function g(t,n){t*=o["r"],n*=o["r"],n=n/2+o["q"];var e=t-a,r=e>=0?1:-1,i=r*e,f=Object(o["g"])(n),s=Object(o["t"])(n),h=u*s,d=c*f+h*Object(o["g"])(i),b=h*r*Object(o["t"])(i);l.add(Object(o["e"])(b,d)),a=t,c=f,u=s}n["c"]=function(t){return d.reset(),Object(h["a"])(t,b),2*d}},4230:function(t,n,e){"use strict";function r(){return[]}n["a"]=function(t){return null==t?r:function(){return this.querySelectorAll(t)}}},"438d":function(t,n,e){"use strict";var r=e("b0ad"),i=e("29c8");function a(t,n){this._context=t,this._alpha=n}a.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:Object(i["b"])(this,t,n);break}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}},n["a"]=function t(n){function e(t){return n?new a(t,n):new r["a"](t,0)}return e.alpha=function(n){return t(+n)},e}(.5)},"474c":function(t,n,e){"use strict";e.d(n,"i",(function(){return r})),e.d(n,"j",(function(){return i})),e.d(n,"o",(function(){return a})),e.d(n,"l",(function(){return c})),e.d(n,"q",(function(){return u})),e.d(n,"w",(function(){return f})),e.d(n,"h",(function(){return o})),e.d(n,"r",(function(){return s})),e.d(n,"a",(function(){return h})),e.d(n,"d",(function(){return l})),e.d(n,"e",(function(){return d})),e.d(n,"g",(function(){return b})),e.d(n,"f",(function(){return p})),e.d(n,"k",(function(){return _})),e.d(n,"n",(function(){return v})),e.d(n,"p",(function(){return g})),e.d(n,"t",(function(){return y})),e.d(n,"s",(function(){return x})),e.d(n,"u",(function(){return w})),e.d(n,"v",(function(){return m})),e.d(n,"b",(function(){return M})),e.d(n,"c",(function(){return j})),e.d(n,"m",(function(){return O}));var r=1e-6,i=1e-12,a=Math.PI,c=a/2,u=a/4,f=2*a,o=180/a,s=a/180,h=Math.abs,l=Math.atan,d=Math.atan2,b=Math.cos,p=Math.ceil,_=Math.exp,v=(Math.floor,Math.log),g=Math.pow,y=Math.sin,x=Math.sign||function(t){return t>0?1:t<0?-1:0},w=Math.sqrt,m=Math.tan;function M(t){return t>1?0:t<-1?a:Math.acos(t)}function j(t){return t>1?c:t<-1?-c:Math.asin(t)}function O(t){return(t=y(t/2))*t}},4830:function(t,n,e){"use strict";function r(t){this._context=t}r.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;default:this._context.lineTo(t,n);break}}},n["a"]=function(t){return new r(t)}},"4a96":function(t,n,e){"use strict";e.d(n,"c",(function(){return a})),e.d(n,"b",(function(){return c})),e.d(n,"d",(function(){return u}));var r=e("66d1");function i(t){var n=t.length;return function(e){return t[Math.max(0,Math.min(n-1,Math.floor(e*n)))]}}n["a"]=i(Object(r["a"])("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725"));var a=i(Object(r["a"])("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf")),c=i(Object(r["a"])("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4")),u=i(Object(r["a"])("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"))},"4b79":function(t,n,e){"use strict";e.d(n,"a",(function(){return b})),e.d(n,"b",(function(){return p}));var r,i,a,c,u=e("e317"),f=180/Math.PI,o={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1},s=function(t,n,e,r,i,a){var c,u,o;return(c=Math.sqrt(t*t+n*n))&&(t/=c,n/=c),(o=t*e+n*r)&&(e-=t*o,r-=n*o),(u=Math.sqrt(e*e+r*r))&&(e/=u,r/=u,o/=u),t*r<n*e&&(t=-t,n=-n,o=-o,c=-c),{translateX:i,translateY:a,rotate:Math.atan2(n,t)*f,skewX:Math.atan(o)*f,scaleX:c,scaleY:u}};function h(t){return"none"===t?o:(r||(r=document.createElement("DIV"),i=document.documentElement,a=document.defaultView),r.style.transform=t,t=a.getComputedStyle(i.appendChild(r),null).getPropertyValue("transform"),i.removeChild(r),t=t.slice(7,-1).split(","),s(+t[0],+t[1],+t[2],+t[3],+t[4],+t[5]))}function l(t){return null==t?o:(c||(c=document.createElementNS("http://www.w3.org/2000/svg","g")),c.setAttribute("transform",t),(t=c.transform.baseVal.consolidate())?(t=t.matrix,s(t.a,t.b,t.c,t.d,t.e,t.f)):o)}function d(t,n,e,r){function i(t){return t.length?t.pop()+" ":""}function a(t,r,i,a,c,f){if(t!==i||r!==a){var o=c.push("translate(",null,n,null,e);f.push({i:o-4,x:Object(u["a"])(t,i)},{i:o-2,x:Object(u["a"])(r,a)})}else(i||a)&&c.push("translate("+i+n+a+e)}function c(t,n,e,a){t!==n?(t-n>180?n+=360:n-t>180&&(t+=360),a.push({i:e.push(i(e)+"rotate(",null,r)-2,x:Object(u["a"])(t,n)})):n&&e.push(i(e)+"rotate("+n+r)}function f(t,n,e,a){t!==n?a.push({i:e.push(i(e)+"skewX(",null,r)-2,x:Object(u["a"])(t,n)}):n&&e.push(i(e)+"skewX("+n+r)}function o(t,n,e,r,a,c){if(t!==e||n!==r){var f=a.push(i(a)+"scale(",null,",",null,")");c.push({i:f-4,x:Object(u["a"])(t,e)},{i:f-2,x:Object(u["a"])(n,r)})}else 1===e&&1===r||a.push(i(a)+"scale("+e+","+r+")")}return function(n,e){var r=[],i=[];return n=t(n),e=t(e),a(n.translateX,n.translateY,e.translateX,e.translateY,r,i),c(n.rotate,e.rotate,r,i),f(n.skewX,e.skewX,r,i),o(n.scaleX,n.scaleY,e.scaleX,e.scaleY,r,i),n=e=null,function(t){var n,e=-1,a=i.length;while(++e<a)r[(n=i[e]).i]=n.x(t);return r.join("")}}}var b=d(h,"px, ","px)","deg)"),p=d(l,", ",")",")")},"4bcd":function(t,n,e){"use strict";var r=e("c84a");n["a"]=function(t){var n=t.length;return function(e){var i=Math.floor(((e%=1)<0?++e:e)*n),a=t[(i+n-1)%n],c=t[i%n],u=t[(i+1)%n],f=t[(i+2)%n];return Object(r["a"])((e-i/n)*n,a,c,u,f)}}},"4c23":function(t,n,e){"use strict";e.d(n,"b",(function(){return i})),e.d(n,"c",(function(){return a})),e.d(n,"d",(function(){return c})),e.d(n,"e",(function(){return u})),e.d(n,"a",(function(){return o}));var r,i,a,c,u,f=e("a591");function o(t){return r=Object(f["a"])(t),i=r.format,a=r.parse,c=r.utcFormat,u=r.utcParse,r}o({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]})},5070:function(t,n,e){"use strict";var r=e("6bcb");function i(t,n){return t.parent===n.parent?1:2}function a(t){var n=t.children;return n?n[0]:t.t}function c(t){var n=t.children;return n?n[n.length-1]:t.t}function u(t,n,e){var r=e/(n.i-t.i);n.c-=r,n.s+=e,t.c+=r,n.z+=e,n.m+=e}function f(t){var n,e=0,r=0,i=t.children,a=i.length;while(--a>=0)n=i[a],n.z+=e,n.m+=e,e+=n.s+(r+=n.c)}function o(t,n,e){return t.a.parent===n.parent?t.a:e}function s(t,n){this._=t,this.parent=null,this.children=null,this.A=null,this.a=this,this.z=0,this.m=0,this.c=0,this.s=0,this.t=null,this.i=n}function h(t){var n,e,r,i,a,c=new s(t,0),u=[c];while(n=u.pop())if(r=n._.children)for(n.children=new Array(a=r.length),i=a-1;i>=0;--i)u.push(e=n.children[i]=new s(r[i],i)),e.parent=n;return(c.parent=new s(null,0)).children=[c],c}s.prototype=Object.create(r["a"].prototype),n["a"]=function(){var t=i,n=1,e=1,r=null;function s(i){var a=h(i);if(a.eachAfter(l),a.parent.m=-a.z,a.eachBefore(d),r)i.eachBefore(p);else{var c=i,u=i,f=i;i.eachBefore((function(t){t.x<c.x&&(c=t),t.x>u.x&&(u=t),t.depth>f.depth&&(f=t)}));var o=c===u?1:t(c,u)/2,s=o-c.x,b=n/(u.x+o+s),_=e/(f.depth||1);i.eachBefore((function(t){t.x=(t.x+s)*b,t.y=t.depth*_}))}return i}function l(n){var e=n.children,r=n.parent.children,i=n.i?r[n.i-1]:null;if(e){f(n);var a=(e[0].z+e[e.length-1].z)/2;i?(n.z=i.z+t(n._,i._),n.m=n.z-a):n.z=a}else i&&(n.z=i.z+t(n._,i._));n.parent.A=b(n,i,n.parent.A||r[0])}function d(t){t._.x=t.z+t.parent.m,t.m+=t.parent.m}function b(n,e,r){if(e){var i,f=n,s=n,h=e,l=f.parent.children[0],d=f.m,b=s.m,p=h.m,_=l.m;while(h=c(h),f=a(f),h&&f)l=a(l),s=c(s),s.a=n,i=h.z+p-f.z-d+t(h._,f._),i>0&&(u(o(h,n,r),n,i),d+=i,b+=i),p+=h.m,d+=f.m,_+=l.m,b+=s.m;h&&!c(s)&&(s.t=h,s.m+=p-b),f&&!a(l)&&(l.t=f,l.m+=d-_,r=n)}return r}function p(t){t.x*=n,t.y=t.depth*e}return s.separation=function(n){return arguments.length?(t=n,s):t},s.size=function(t){return arguments.length?(r=!1,n=+t[0],e=+t[1],s):r?null:[n,e]},s.nodeSize=function(t){return arguments.length?(r=!0,n=+t[0],e=+t[1],s):r?[n,e]:null},s}},"51de":function(t,n,e){"use strict";function r(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)}e.d(n,"b",(function(){return r})),n["a"]=function(t,n){n||(n=[]);var e,r=t?Math.min(n.length,t.length):0,i=n.slice();return function(a){for(e=0;e<r;++e)i[e]=t[e]*(1-a)+n[e]*a;return i}}},"530a":function(t,n,e){"use strict";e.d(n,"a",(function(){return r})),e.d(n,"b",(function(){return i}));var r=Math.PI/180,i=180/Math.PI},"55f8":function(t,n,e){"use strict";e.d(n,"b",(function(){return a}));var r=e("18e2"),i=Object(r["a"])((function(t){t.setUTCDate(1),t.setUTCHours(0,0,0,0)}),(function(t,n){t.setUTCMonth(t.getUTCMonth()+n)}),(function(t,n){return n.getUTCMonth()-t.getUTCMonth()+12*(n.getUTCFullYear()-t.getUTCFullYear())}),(function(t){return t.getUTCMonth()}));n["a"]=i;var a=i.range},5644:function(t,n,e){"use strict";var r=e("3b4d"),i=e("d0ae"),a=e("29c8");function c(t,n){this._context=t,this._alpha=n}c.prototype={areaStart:i["a"],areaEnd:i["a"],lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5);break}},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._x3=t,this._y3=n;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=n);break;case 2:this._point=3,this._x5=t,this._y5=n;break;default:Object(a["b"])(this,t,n);break}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}},n["a"]=function t(n){function e(t){return n?new c(t,n):new r["a"](t,0)}return e.alpha=function(n){return t(+n)},e}(.5)},"57f5":function(t,n,e){"use strict";var r=e("6cd4"),i=e("e311");function a(t){return function(){var n=this.ownerDocument,e=this.namespaceURI;return e===i["b"]&&n.documentElement.namespaceURI===i["b"]?n.createElement(t):n.createElementNS(e,t)}}function c(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}n["a"]=function(t){var n=Object(r["a"])(t);return(n.local?c:a)(n)}},5857:function(t,n,e){"use strict";n["a"]=function(t,n){return t=+t,n=+n,function(e){return Math.round(t*(1-e)+n*e)}}},"5be2":function(t,n,e){"use strict";e.d(n,"b",(function(){return f}));var r=e("eccb");function i(t,n,e){var r,i,a,c,u=t.x-n.x,f=t.y-n.y,o=u*u+f*f;o?(i=n.r+e.r,i*=i,c=t.r+e.r,c*=c,i>c?(r=(o+c-i)/(2*o),a=Math.sqrt(Math.max(0,c/o-r*r)),e.x=t.x-r*u-a*f,e.y=t.y-r*f+a*u):(r=(o+i-c)/(2*o),a=Math.sqrt(Math.max(0,i/o-r*r)),e.x=n.x+r*u-a*f,e.y=n.y+r*f+a*u)):(e.x=n.x+e.r,e.y=n.y)}function a(t,n){var e=t.r+n.r-1e-6,r=n.x-t.x,i=n.y-t.y;return e>0&&e*e>r*r+i*i}function c(t){var n=t._,e=t.next._,r=n.r+e.r,i=(n.x*e.r+e.x*n.r)/r,a=(n.y*e.r+e.y*n.r)/r;return i*i+a*a}function u(t){this._=t,this.next=null,this.previous=null}function f(t){if(!(o=t.length))return 0;var n,e,f,o,s,h,l,d,b,p,_;if(n=t[0],n.x=0,n.y=0,!(o>1))return n.r;if(e=t[1],n.x=-e.r,e.x=n.r,e.y=0,!(o>2))return n.r+e.r;i(e,n,f=t[2]),n=new u(n),e=new u(e),f=new u(f),n.next=f.previous=e,e.next=n.previous=f,f.next=e.previous=n;t:for(l=3;l<o;++l){i(n._,e._,f=t[l]),f=new u(f),d=e.next,b=n.previous,p=e._.r,_=n._.r;do{if(p<=_){if(a(d._,f._)){e=d,n.next=e,e.previous=n,--l;continue t}p+=d._.r,d=d.next}else{if(a(b._,f._)){n=b,n.next=e,e.previous=n,--l;continue t}_+=b._.r,b=b.previous}}while(d!==b.next);f.previous=n,f.next=e,n.next=e.previous=e=f,s=c(n);while((f=f.next)!==e)(h=c(f))<s&&(n=f,s=h);e=n.next}n=[e._],f=e;while((f=f.next)!==e)n.push(f._);for(f=Object(r["a"])(n),l=0;l<o;++l)n=t[l],n.x-=f.x,n.y-=f.y;return f.r}n["a"]=function(t){return f(t),t}},"5edf":function(t,n,e){"use strict";e.d(n,"b",(function(){return c}));var r=e("18e2"),i=e("1738"),a=Object(r["a"])((function(t){t.setTime(t-t.getMilliseconds())}),(function(t,n){t.setTime(+t+n*i["d"])}),(function(t,n){return(n-t)/i["d"]}),(function(t){return t.getUTCSeconds()}));n["a"]=a;var c=a.range},"5fbc":function(t,n,e){"use strict";e.d(n,"c",(function(){return a})),e.d(n,"a",(function(){return c}));var r=e("15a7"),i=e("3872"),a=Object(i["a"])(Object(r["a"])(-100,.75,.35),Object(r["a"])(80,1.5,.8)),c=Object(i["a"])(Object(r["a"])(260,.75,.35),Object(r["a"])(80,1.5,.8)),u=Object(r["a"])();n["b"]=function(t){(t<0||t>1)&&(t-=Math.floor(t));var n=Math.abs(t-.5);return u.h=360*t-100,u.s=1.5-1.5*n,u.l=.8-.9*n,u+""}},"62f0":function(t,n,e){"use strict";e.d(n,"b",(function(){return p})),e.d(n,"a",(function(){return _})),e.d(n,"d",(function(){return M})),e.d(n,"c",(function(){return j}));var r=e("63ad8"),i=e("166a"),a=e("530a"),c=18,u=.96422,f=1,o=.82521,s=4/29,h=6/29,l=3*h*h,d=h*h*h;function b(t){if(t instanceof v)return new v(t.l,t.a,t.b,t.opacity);if(t instanceof O)return N(t);t instanceof i["b"]||(t=Object(i["h"])(t));var n,e,r=w(t.r),a=w(t.g),c=w(t.b),s=g((.2225045*r+.7168786*a+.0606169*c)/f);return r===a&&a===c?n=e=s:(n=g((.4360747*r+.3850649*a+.1430804*c)/u),e=g((.0139322*r+.0971045*a+.7141733*c)/o)),new v(116*s-16,500*(n-s),200*(s-e),t.opacity)}function p(t,n){return new v(t,0,0,null==n?1:n)}function _(t,n,e,r){return 1===arguments.length?b(t):new v(t,n,e,null==r?1:r)}function v(t,n,e,r){this.l=+t,this.a=+n,this.b=+e,this.opacity=+r}function g(t){return t>d?Math.pow(t,1/3):t/l+s}function y(t){return t>h?t*t*t:l*(t-s)}function x(t){return 255*(t<=.0031308?12.92*t:1.055*Math.pow(t,1/2.4)-.055)}function w(t){return(t/=255)<=.04045?t/12.92:Math.pow((t+.055)/1.055,2.4)}function m(t){if(t instanceof O)return new O(t.h,t.c,t.l,t.opacity);if(t instanceof v||(t=b(t)),0===t.a&&0===t.b)return new O(NaN,0<t.l&&t.l<100?0:NaN,t.l,t.opacity);var n=Math.atan2(t.b,t.a)*a["b"];return new O(n<0?n+360:n,Math.sqrt(t.a*t.a+t.b*t.b),t.l,t.opacity)}function M(t,n,e,r){return 1===arguments.length?m(t):new O(e,n,t,null==r?1:r)}function j(t,n,e,r){return 1===arguments.length?m(t):new O(t,n,e,null==r?1:r)}function O(t,n,e,r){this.h=+t,this.c=+n,this.l=+e,this.opacity=+r}function N(t){if(isNaN(t.h))return new v(t.l,0,0,t.opacity);var n=t.h*a["a"];return new v(t.l,Math.cos(n)*t.c,Math.sin(n)*t.c,t.opacity)}Object(r["a"])(v,_,Object(r["b"])(i["a"],{brighter:function(t){return new v(this.l+c*(null==t?1:t),this.a,this.b,this.opacity)},darker:function(t){return new v(this.l-c*(null==t?1:t),this.a,this.b,this.opacity)},rgb:function(){var t=(this.l+16)/116,n=isNaN(this.a)?t:t+this.a/500,e=isNaN(this.b)?t:t-this.b/200;return n=u*y(n),t=f*y(t),e=o*y(e),new i["b"](x(3.1338561*n-1.6168667*t-.4906146*e),x(-.9787684*n+1.9161415*t+.033454*e),x(.0719453*n-.2289914*t+1.4052427*e),this.opacity)}})),Object(r["a"])(O,j,Object(r["b"])(i["a"],{brighter:function(t){return new O(this.h,this.c,this.l+c*(null==t?1:t),this.opacity)},darker:function(t){return new O(this.h,this.c,this.l-c*(null==t?1:t),this.opacity)},rgb:function(){return N(this).rgb()}}))},6334:function(t,n,e){"use strict";e.d(n,"g",(function(){return i})),e.d(n,"a",(function(){return a})),e.d(n,"d",(function(){return c})),e.d(n,"c",(function(){return u})),e.d(n,"b",(function(){return f})),e.d(n,"f",(function(){return o})),e.d(n,"e",(function(){return s}));var r=e("474c");function i(t){return[Object(r["e"])(t[1],t[0]),Object(r["c"])(t[2])]}function a(t){var n=t[0],e=t[1],i=Object(r["g"])(e);return[i*Object(r["g"])(n),i*Object(r["t"])(n),Object(r["t"])(e)]}function c(t,n){return t[0]*n[0]+t[1]*n[1]+t[2]*n[2]}function u(t,n){return[t[1]*n[2]-t[2]*n[1],t[2]*n[0]-t[0]*n[2],t[0]*n[1]-t[1]*n[0]]}function f(t,n){t[0]+=n[0],t[1]+=n[1],t[2]+=n[2]}function o(t,n){return[t[0]*n,t[1]*n,t[2]*n]}function s(t){var n=Object(r["u"])(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);t[0]/=n,t[1]/=n,t[2]/=n}},"63ad8":function(t,n,e){"use strict";function r(t,n){var e=Object.create(t.prototype);for(var r in n)e[r]=n[r];return e}e.d(n,"b",(function(){return r})),n["a"]=function(t,n,e){t.prototype=n.prototype=e,e.constructor=t}},"650c":function(t,n,e){"use strict";var r=e("eadc"),i=e("d8ad"),a=e("0986");function c(t){return t.innerRadius}function u(t){return t.outerRadius}function f(t){return t.startAngle}function o(t){return t.endAngle}function s(t){return t&&t.padAngle}function h(t,n,e,r,i,c,u,f){var o=e-t,s=r-n,h=u-i,l=f-c,d=l*o-h*s;if(!(d*d<a["f"]))return d=(h*(n-c)-l*(t-i))/d,[t+d*o,n+d*s]}function l(t,n,e,r,i,c,u){var f=t-e,o=n-r,s=(u?c:-c)/Object(a["l"])(f*f+o*o),h=s*o,l=-s*f,d=t+h,b=n+l,p=e+h,_=r+l,v=(d+p)/2,g=(b+_)/2,y=p-d,x=_-b,w=y*y+x*x,m=i-c,M=d*_-p*b,j=(x<0?-1:1)*Object(a["l"])(Object(a["h"])(0,m*m*w-M*M)),O=(M*x-y*j)/w,N=(-M*y-x*j)/w,T=(M*x+y*j)/w,k=(-M*y+x*j)/w,A=O-v,C=N-g,E=T-v,S=k-g;return A*A+C*C>E*E+S*S&&(O=T,N=k),{cx:O,cy:N,x01:-h,y01:-l,x11:O*(i/m-1),y11:N*(i/m-1)}}n["a"]=function(){var t=c,n=u,e=Object(i["a"])(0),d=null,b=f,p=o,_=s,v=null;function g(){var i,c,u=+t.apply(this,arguments),f=+n.apply(this,arguments),o=b.apply(this,arguments)-a["g"],s=p.apply(this,arguments)-a["g"],g=Object(a["a"])(s-o),y=s>o;if(v||(v=i=Object(r["a"])()),f<u&&(c=f,f=u,u=c),f>a["f"])if(g>a["m"]-a["f"])v.moveTo(f*Object(a["e"])(o),f*Object(a["k"])(o)),v.arc(0,0,f,o,s,!y),u>a["f"]&&(v.moveTo(u*Object(a["e"])(s),u*Object(a["k"])(s)),v.arc(0,0,u,s,o,y));else{var x,w,m=o,M=s,j=o,O=s,N=g,T=g,k=_.apply(this,arguments)/2,A=k>a["f"]&&(d?+d.apply(this,arguments):Object(a["l"])(u*u+f*f)),C=Object(a["i"])(Object(a["a"])(f-u)/2,+e.apply(this,arguments)),E=C,S=C;if(A>a["f"]){var U=Object(a["c"])(A/u*Object(a["k"])(k)),P=Object(a["c"])(A/f*Object(a["k"])(k));(N-=2*U)>a["f"]?(U*=y?1:-1,j+=U,O-=U):(N=0,j=O=(o+s)/2),(T-=2*P)>a["f"]?(P*=y?1:-1,m+=P,M-=P):(T=0,m=M=(o+s)/2)}var D=f*Object(a["e"])(m),L=f*Object(a["k"])(m),q=u*Object(a["e"])(O),R=u*Object(a["k"])(O);if(C>a["f"]){var z,Y=f*Object(a["e"])(M),B=f*Object(a["k"])(M),F=u*Object(a["e"])(j),H=u*Object(a["k"])(j);if(g<a["j"]&&(z=h(D,L,F,H,Y,B,q,R))){var I=D-z[0],G=L-z[1],X=Y-z[0],V=B-z[1],Z=1/Object(a["k"])(Object(a["b"])((I*X+G*V)/(Object(a["l"])(I*I+G*G)*Object(a["l"])(X*X+V*V)))/2),$=Object(a["l"])(z[0]*z[0]+z[1]*z[1]);E=Object(a["i"])(C,(u-$)/(Z-1)),S=Object(a["i"])(C,(f-$)/(Z+1))}}T>a["f"]?S>a["f"]?(x=l(F,H,D,L,f,S,y),w=l(Y,B,q,R,f,S,y),v.moveTo(x.cx+x.x01,x.cy+x.y01),S<C?v.arc(x.cx,x.cy,S,Object(a["d"])(x.y01,x.x01),Object(a["d"])(w.y01,w.x01),!y):(v.arc(x.cx,x.cy,S,Object(a["d"])(x.y01,x.x01),Object(a["d"])(x.y11,x.x11),!y),v.arc(0,0,f,Object(a["d"])(x.cy+x.y11,x.cx+x.x11),Object(a["d"])(w.cy+w.y11,w.cx+w.x11),!y),v.arc(w.cx,w.cy,S,Object(a["d"])(w.y11,w.x11),Object(a["d"])(w.y01,w.x01),!y))):(v.moveTo(D,L),v.arc(0,0,f,m,M,!y)):v.moveTo(D,L),u>a["f"]&&N>a["f"]?E>a["f"]?(x=l(q,R,Y,B,u,-E,y),w=l(D,L,F,H,u,-E,y),v.lineTo(x.cx+x.x01,x.cy+x.y01),E<C?v.arc(x.cx,x.cy,E,Object(a["d"])(x.y01,x.x01),Object(a["d"])(w.y01,w.x01),!y):(v.arc(x.cx,x.cy,E,Object(a["d"])(x.y01,x.x01),Object(a["d"])(x.y11,x.x11),!y),v.arc(0,0,u,Object(a["d"])(x.cy+x.y11,x.cx+x.x11),Object(a["d"])(w.cy+w.y11,w.cx+w.x11),y),v.arc(w.cx,w.cy,E,Object(a["d"])(w.y11,w.x11),Object(a["d"])(w.y01,w.x01),!y))):v.arc(0,0,u,O,j,y):v.lineTo(q,R)}else v.moveTo(0,0);if(v.closePath(),i)return v=null,i+""||null}return g.centroid=function(){var e=(+t.apply(this,arguments)+ +n.apply(this,arguments))/2,r=(+b.apply(this,arguments)+ +p.apply(this,arguments))/2-a["j"]/2;return[Object(a["e"])(r)*e,Object(a["k"])(r)*e]},g.innerRadius=function(n){return arguments.length?(t="function"===typeof n?n:Object(i["a"])(+n),g):t},g.outerRadius=function(t){return arguments.length?(n="function"===typeof t?t:Object(i["a"])(+t),g):n},g.cornerRadius=function(t){return arguments.length?(e="function"===typeof t?t:Object(i["a"])(+t),g):e},g.padRadius=function(t){return arguments.length?(d=null==t?null:"function"===typeof t?t:Object(i["a"])(+t),g):d},g.startAngle=function(t){return arguments.length?(b="function"===typeof t?t:Object(i["a"])(+t),g):b},g.endAngle=function(t){return arguments.length?(p="function"===typeof t?t:Object(i["a"])(+t),g):p},g.padAngle=function(t){return arguments.length?(_="function"===typeof t?t:Object(i["a"])(+t),g):_},g.context=function(t){return arguments.length?(v=null==t?null:t,g):v},g}},"66d1":function(t,n,e){"use strict";n["a"]=function(t){var n=t.length/6|0,e=new Array(n),r=0;while(r<n)e[r]="#"+t.slice(6*r,6*++r);return e}},6730:function(t,n,e){"use strict";e.d(n,"b",(function(){return a}));var r=e("ea1d"),i=e("51de");function a(t,n){var e,i=n?n.length:0,a=t?Math.min(i,t.length):0,c=new Array(a),u=new Array(i);for(e=0;e<a;++e)c[e]=Object(r["a"])(t[e],n[e]);for(;e<i;++e)u[e]=n[e];return function(t){for(e=0;e<a;++e)u[e]=c[e](t);return u}}n["a"]=function(t,n){return(Object(i["b"])(n)?i["a"]:a)(t,n)}},"6bcb":function(t,n,e){"use strict";function r(t){var n=0,e=t.children,r=e&&e.length;if(r)while(--r>=0)n+=e[r].value;else n=1;t.value=n}e.d(n,"c",(function(){return _})),e.d(n,"b",(function(){return x})),e.d(n,"a",(function(){return w}));var i=function(){return this.eachAfter(r)},a=function(t){var n,e,r,i,a=this,c=[a];do{n=c.reverse(),c=[];while(a=n.pop())if(t(a),e=a.children,e)for(r=0,i=e.length;r<i;++r)c.push(e[r])}while(c.length);return this},c=function(t){var n,e,r=this,i=[r];while(r=i.pop())if(t(r),n=r.children,n)for(e=n.length-1;e>=0;--e)i.push(n[e]);return this},u=function(t){var n,e,r,i=this,a=[i],c=[];while(i=a.pop())if(c.push(i),n=i.children,n)for(e=0,r=n.length;e<r;++e)a.push(n[e]);while(i=c.pop())t(i);return this},f=function(t){return this.eachAfter((function(n){var e=+t(n.data)||0,r=n.children,i=r&&r.length;while(--i>=0)e+=r[i].value;n.value=e}))},o=function(t){return this.eachBefore((function(n){n.children&&n.children.sort(t)}))},s=function(t){var n=this,e=h(n,t),r=[n];while(n!==e)n=n.parent,r.push(n);var i=r.length;while(t!==e)r.splice(i,0,t),t=t.parent;return r};function h(t,n){if(t===n)return t;var e=t.ancestors(),r=n.ancestors(),i=null;t=e.pop(),n=r.pop();while(t===n)i=t,t=e.pop(),n=r.pop();return i}var l=function(){var t=this,n=[t];while(t=t.parent)n.push(t);return n},d=function(){var t=[];return this.each((function(n){t.push(n)})),t},b=function(){var t=[];return this.eachBefore((function(n){n.children||t.push(n)})),t},p=function(){var t=this,n=[];return t.each((function(e){e!==t&&n.push({source:e.parent,target:e})})),n};function _(t,n){var e,r,i,a,c,u=new w(t),f=+t.value&&(u.value=t.value),o=[u];null==n&&(n=g);while(e=o.pop())if(f&&(e.value=+e.data.value),(i=n(e.data))&&(c=i.length))for(e.children=new Array(c),a=c-1;a>=0;--a)o.push(r=e.children[a]=new w(i[a])),r.parent=e,r.depth=e.depth+1;return u.eachBefore(x)}function v(){return _(this).eachBefore(y)}function g(t){return t.children}function y(t){t.data=t.data.data}function x(t){var n=0;do{t.height=n}while((t=t.parent)&&t.height<++n)}function w(t){this.data=t,this.depth=this.height=0,this.parent=null}w.prototype=_.prototype={constructor:w,count:i,each:a,eachAfter:u,eachBefore:c,sum:f,sort:o,path:s,ancestors:l,descendants:d,leaves:b,links:p,copy:v}},"6ca8":function(t,n,e){"use strict";e.d(n,"a",(function(){return X}));var r=function(t){return function(){return t}};function i(t){return t[0]}function a(t){return t[1]}function c(){this._=null}function u(t){t.U=t.C=t.L=t.R=t.P=t.N=null}function f(t,n){var e=n,r=n.R,i=e.U;i?i.L===e?i.L=r:i.R=r:t._=r,r.U=i,e.U=r,e.R=r.L,e.R&&(e.R.U=e),r.L=e}function o(t,n){var e=n,r=n.L,i=e.U;i?i.L===e?i.L=r:i.R=r:t._=r,r.U=i,e.U=r,e.L=r.R,e.L&&(e.L.U=e),r.R=e}function s(t){while(t.L)t=t.L;return t}c.prototype={constructor:c,insert:function(t,n){var e,r,i;if(t){if(n.P=t,n.N=t.N,t.N&&(t.N.P=n),t.N=n,t.R){t=t.R;while(t.L)t=t.L;t.L=n}else t.R=n;e=t}else this._?(t=s(this._),n.P=null,n.N=t,t.P=t.L=n,e=t):(n.P=n.N=null,this._=n,e=null);n.L=n.R=null,n.U=e,n.C=!0,t=n;while(e&&e.C)r=e.U,e===r.L?(i=r.R,i&&i.C?(e.C=i.C=!1,r.C=!0,t=r):(t===e.R&&(f(this,e),t=e,e=t.U),e.C=!1,r.C=!0,o(this,r))):(i=r.L,i&&i.C?(e.C=i.C=!1,r.C=!0,t=r):(t===e.L&&(o(this,e),t=e,e=t.U),e.C=!1,r.C=!0,f(this,r))),e=t.U;this._.C=!1},remove:function(t){t.N&&(t.N.P=t.P),t.P&&(t.P.N=t.N),t.N=t.P=null;var n,e,r,i=t.U,a=t.L,c=t.R;if(e=a?c?s(c):a:c,i?i.L===t?i.L=e:i.R=e:this._=e,a&&c?(r=e.C,e.C=t.C,e.L=a,a.U=e,e!==c?(i=e.U,e.U=t.U,t=e.R,i.L=t,e.R=c,c.U=e):(e.U=i,i=e,t=e.R)):(r=t.C,t=e),t&&(t.U=i),!r)if(t&&t.C)t.C=!1;else{do{if(t===this._)break;if(t===i.L){if(n=i.R,n.C&&(n.C=!1,i.C=!0,f(this,i),n=i.R),n.L&&n.L.C||n.R&&n.R.C){n.R&&n.R.C||(n.L.C=!1,n.C=!0,o(this,n),n=i.R),n.C=i.C,i.C=n.R.C=!1,f(this,i),t=this._;break}}else if(n=i.L,n.C&&(n.C=!1,i.C=!0,o(this,i),n=i.L),n.L&&n.L.C||n.R&&n.R.C){n.L&&n.L.C||(n.R.C=!1,n.C=!0,f(this,n),n=i.L),n.C=i.C,i.C=n.L.C=!1,o(this,i),t=this._;break}n.C=!0,t=i,i=i.U}while(!t.C);t&&(t.C=!1)}}};var h=c;function l(t,n,e,r){var i=[null,null],a=Y.push(i)-1;return i.left=t,i.right=n,e&&b(i,t,n,e),r&&b(i,n,t,r),R[t.index].halfedges.push(a),R[n.index].halfedges.push(a),i}function d(t,n,e){var r=[n,e];return r.left=t,r}function b(t,n,e,r){t[0]||t[1]?t.left===e?t[1]=r:t[0]=r:(t[0]=r,t.left=n,t.right=e)}function p(t,n,e,r,i){var a,c=t[0],u=t[1],f=c[0],o=c[1],s=u[0],h=u[1],l=0,d=1,b=s-f,p=h-o;if(a=n-f,b||!(a>0)){if(a/=b,b<0){if(a<l)return;a<d&&(d=a)}else if(b>0){if(a>d)return;a>l&&(l=a)}if(a=r-f,b||!(a<0)){if(a/=b,b<0){if(a>d)return;a>l&&(l=a)}else if(b>0){if(a<l)return;a<d&&(d=a)}if(a=e-o,p||!(a>0)){if(a/=p,p<0){if(a<l)return;a<d&&(d=a)}else if(p>0){if(a>d)return;a>l&&(l=a)}if(a=i-o,p||!(a<0)){if(a/=p,p<0){if(a>d)return;a>l&&(l=a)}else if(p>0){if(a<l)return;a<d&&(d=a)}return!(l>0||d<1)||(l>0&&(t[0]=[f+l*b,o+l*p]),d<1&&(t[1]=[f+d*b,o+d*p]),!0)}}}}}function _(t,n,e,r,i){var a=t[1];if(a)return!0;var c,u,f=t[0],o=t.left,s=t.right,h=o[0],l=o[1],d=s[0],b=s[1],p=(h+d)/2,_=(l+b)/2;if(b===l){if(p<n||p>=r)return;if(h>d){if(f){if(f[1]>=i)return}else f=[p,e];a=[p,i]}else{if(f){if(f[1]<e)return}else f=[p,i];a=[p,e]}}else if(c=(h-d)/(b-l),u=_-c*p,c<-1||c>1)if(h>d){if(f){if(f[1]>=i)return}else f=[(e-u)/c,e];a=[(i-u)/c,i]}else{if(f){if(f[1]<e)return}else f=[(i-u)/c,i];a=[(e-u)/c,e]}else if(l<b){if(f){if(f[0]>=r)return}else f=[n,c*n+u];a=[r,c*r+u]}else{if(f){if(f[0]<n)return}else f=[r,c*r+u];a=[n,c*n+u]}return t[0]=f,t[1]=a,!0}function v(t,n,e,r){var i,a=Y.length;while(a--)_(i=Y[a],t,n,e,r)&&p(i,t,n,e,r)&&(Math.abs(i[0][0]-i[1][0])>B||Math.abs(i[0][1]-i[1][1])>B)||delete Y[a]}function g(t){return R[t.index]={site:t,halfedges:[]}}function y(t,n){var e=t.site,r=n.left,i=n.right;return e===i&&(i=r,r=e),i?Math.atan2(i[1]-r[1],i[0]-r[0]):(e===r?(r=n[1],i=n[0]):(r=n[0],i=n[1]),Math.atan2(r[0]-i[0],i[1]-r[1]))}function x(t,n){return n[+(n.left!==t.site)]}function w(t,n){return n[+(n.left===t.site)]}function m(){for(var t,n,e,r,i=0,a=R.length;i<a;++i)if((t=R[i])&&(r=(n=t.halfedges).length)){var c=new Array(r),u=new Array(r);for(e=0;e<r;++e)c[e]=e,u[e]=y(t,Y[n[e]]);for(c.sort((function(t,n){return u[n]-u[t]})),e=0;e<r;++e)u[e]=n[c[e]];for(e=0;e<r;++e)n[e]=u[e]}}function M(t,n,e,r){var i,a,c,u,f,o,s,h,l,b,p,_,v=R.length,g=!0;for(i=0;i<v;++i)if(a=R[i]){c=a.site,f=a.halfedges,u=f.length;while(u--)Y[f[u]]||f.splice(u,1);u=0,o=f.length;while(u<o)b=w(a,Y[f[u]]),p=b[0],_=b[1],s=x(a,Y[f[++u%o]]),h=s[0],l=s[1],(Math.abs(p-h)>B||Math.abs(_-l)>B)&&(f.splice(u,0,Y.push(d(c,b,Math.abs(p-t)<B&&r-_>B?[t,Math.abs(h-t)<B?l:r]:Math.abs(_-r)<B&&e-p>B?[Math.abs(l-r)<B?h:e,r]:Math.abs(p-e)<B&&_-n>B?[e,Math.abs(h-e)<B?l:n]:Math.abs(_-n)<B&&p-t>B?[Math.abs(l-n)<B?h:t,n]:null))-1),++o);o&&(g=!1)}if(g){var y,m,M,j=1/0;for(i=0,g=null;i<v;++i)(a=R[i])&&(c=a.site,y=c[0]-t,m=c[1]-n,M=y*y+m*m,M<j&&(j=M,g=a));if(g){var O=[t,n],N=[t,r],T=[e,r],k=[e,n];g.halfedges.push(Y.push(d(c=g.site,O,N))-1,Y.push(d(c,N,T))-1,Y.push(d(c,T,k))-1,Y.push(d(c,k,O))-1)}}for(i=0;i<v;++i)(a=R[i])&&(a.halfedges.length||delete R[i])}var j,O=[];function N(){u(this),this.x=this.y=this.arc=this.site=this.cy=null}function T(t){var n=t.P,e=t.N;if(n&&e){var r=n.site,i=t.site,a=e.site;if(r!==a){var c=i[0],u=i[1],f=r[0]-c,o=r[1]-u,s=a[0]-c,h=a[1]-u,l=2*(f*h-o*s);if(!(l>=-F)){var d=f*f+o*o,b=s*s+h*h,p=(h*d-o*b)/l,_=(f*b-s*d)/l,v=O.pop()||new N;v.arc=t,v.site=i,v.x=p+c,v.y=(v.cy=_+u)+Math.sqrt(p*p+_*_),t.circle=v;var g=null,y=z._;while(y)if(v.y<y.y||v.y===y.y&&v.x<=y.x){if(!y.L){g=y.P;break}y=y.L}else{if(!y.R){g=y;break}y=y.R}z.insert(g,v),g||(j=v)}}}}function k(t){var n=t.circle;n&&(n.P||(j=n.N),z.remove(n),O.push(n),u(n),t.circle=null)}var A=[];function C(){u(this),this.edge=this.site=this.circle=null}function E(t){var n=A.pop()||new C;return n.site=t,n}function S(t){k(t),q.remove(t),A.push(t),u(t)}function U(t){var n=t.circle,e=n.x,r=n.cy,i=[e,r],a=t.P,c=t.N,u=[t];S(t);var f=a;while(f.circle&&Math.abs(e-f.circle.x)<B&&Math.abs(r-f.circle.cy)<B)a=f.P,u.unshift(f),S(f),f=a;u.unshift(f),k(f);var o=c;while(o.circle&&Math.abs(e-o.circle.x)<B&&Math.abs(r-o.circle.cy)<B)c=o.N,u.push(o),S(o),o=c;u.push(o),k(o);var s,h=u.length;for(s=1;s<h;++s)o=u[s],f=u[s-1],b(o.edge,f.site,o.site,i);f=u[0],o=u[h-1],o.edge=l(f.site,o.site,null,i),T(f),T(o)}function P(t){var n,e,r,i,a=t[0],c=t[1],u=q._;while(u)if(r=D(u,c)-a,r>B)u=u.L;else{if(i=a-L(u,c),!(i>B)){r>-B?(n=u.P,e=u):i>-B?(n=u,e=u.N):n=e=u;break}if(!u.R){n=u;break}u=u.R}g(t);var f=E(t);if(q.insert(n,f),n||e){if(n===e)return k(n),e=E(n.site),q.insert(f,e),f.edge=e.edge=l(n.site,f.site),T(n),void T(e);if(e){k(n),k(e);var o=n.site,s=o[0],h=o[1],d=t[0]-s,p=t[1]-h,_=e.site,v=_[0]-s,y=_[1]-h,x=2*(d*y-p*v),w=d*d+p*p,m=v*v+y*y,M=[(y*w-p*m)/x+s,(d*m-v*w)/x+h];b(e.edge,o,_,M),f.edge=l(o,t,null,M),e.edge=l(t,_,null,M),T(n),T(e)}else f.edge=l(n.site,f.site)}}function D(t,n){var e=t.site,r=e[0],i=e[1],a=i-n;if(!a)return r;var c=t.P;if(!c)return-1/0;e=c.site;var u=e[0],f=e[1],o=f-n;if(!o)return u;var s=u-r,h=1/a-1/o,l=s/o;return h?(-l+Math.sqrt(l*l-2*h*(s*s/(-2*o)-f+o/2+i-a/2)))/h+r:(r+u)/2}function L(t,n){var e=t.N;if(e)return D(e,n);var r=t.site;return r[1]===n?r[0]:1/0}var q,R,z,Y,B=1e-6,F=1e-12;function H(t,n,e){return(t[0]-e[0])*(n[1]-t[1])-(t[0]-n[0])*(e[1]-t[1])}function I(t,n){return n[1]-t[1]||n[0]-t[0]}function G(t,n){var e,r,i,a=t.sort(I).pop();Y=[],R=new Array(t.length),q=new h,z=new h;while(1)if(i=j,a&&(!i||a[1]<i.y||a[1]===i.y&&a[0]<i.x))a[0]===e&&a[1]===r||(P(a),e=a[0],r=a[1]),a=t.pop();else{if(!i)break;U(i.arc)}if(m(),n){var c=+n[0][0],u=+n[0][1],f=+n[1][0],o=+n[1][1];v(c,u,f,o),M(c,u,f,o)}this.edges=Y,this.cells=R,q=z=Y=R=null}G.prototype={constructor:G,polygons:function(){var t=this.edges;return this.cells.map((function(n){var e=n.halfedges.map((function(e){return x(n,t[e])}));return e.data=n.site.data,e}))},triangles:function(){var t=[],n=this.edges;return this.cells.forEach((function(e,r){if(a=(i=e.halfedges).length){var i,a,c,u=e.site,f=-1,o=n[i[a-1]],s=o.left===u?o.right:o.left;while(++f<a)c=s,o=n[i[f]],s=o.left===u?o.right:o.left,c&&s&&r<c.index&&r<s.index&&H(u,c,s)<0&&t.push([u.data,c.data,s.data])}})),t},links:function(){return this.edges.filter((function(t){return t.right})).map((function(t){return{source:t.left.data,target:t.right.data}}))},find:function(t,n,e){var r,i,a=this,c=a._found||0,u=a.cells.length;while(!(i=a.cells[c]))if(++c>=u)return null;var f=t-i.site[0],o=n-i.site[1],s=f*f+o*o;do{i=a.cells[r=c],c=null,i.halfedges.forEach((function(e){var r=a.edges[e],u=r.left;if(u!==i.site&&u||(u=r.right)){var f=t-u[0],o=n-u[1],h=f*f+o*o;h<s&&(s=h,c=u.index)}}))}while(null!==c);return a._found=r,null==e||s<=e*e?i.site:null}};var X=function(){var t=i,n=a,e=null;function c(r){return new G(r.map((function(e,i){var a=[Math.round(t(e,i,r)/B)*B,Math.round(n(e,i,r)/B)*B];return a.index=i,a.data=e,a})),e)}return c.polygons=function(t){return c(t).polygons()},c.links=function(t){return c(t).links()},c.triangles=function(t){return c(t).triangles()},c.x=function(n){return arguments.length?(t="function"===typeof n?n:r(+n),c):t},c.y=function(t){return arguments.length?(n="function"===typeof t?t:r(+t),c):n},c.extent=function(t){return arguments.length?(e=null==t?null:[[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]],c):e&&[[e[0][0],e[0][1]],[e[1][0],e[1][1]]]},c.size=function(t){return arguments.length?(e=null==t?null:[[0,0],[+t[0],+t[1]]],c):e&&[e[1][0]-e[0][0],e[1][1]-e[0][1]]},c}},"6cd4":function(t,n,e){"use strict";var r=e("e311");n["a"]=function(t){var n=t+="",e=n.indexOf(":");return e>=0&&"xmlns"!==(n=t.slice(0,e))&&(t=t.slice(e+1)),r["a"].hasOwnProperty(n)?{space:r["a"][n],local:t}:t}},"6eb2":function(t,n,e){"use strict";e.d(n,"b",(function(){return c}));var r=e("18e2"),i=e("1738"),a=Object(r["a"])((function(t){t.setUTCHours(0,0,0,0)}),(function(t,n){t.setUTCDate(t.getUTCDate()+n)}),(function(t,n){return(n-t)/i["a"]}),(function(t){return t.getUTCDate()-1}));n["a"]=a;var c=a.range},"6f04":function(t,n,e){"use strict";e.d(n,"d",(function(){return u})),e.d(n,"e",(function(){return p})),e.d(n,"c",(function(){return c})),e.d(n,"b",(function(){return _})),e.d(n,"f",(function(){return v})),e.d(n,"a",(function(){return g}));var r="$";function i(){}function a(t,n){var e=new i;if(t instanceof i)t.each((function(t,n){e.set(n,t)}));else if(Array.isArray(t)){var r,a=-1,c=t.length;if(null==n)while(++a<c)e.set(a,t[a]);else while(++a<c)e.set(n(r=t[a],a,t),r)}else if(t)for(var u in t)e.set(u,t[u]);return e}i.prototype=a.prototype={constructor:i,has:function(t){return r+t in this},get:function(t){return this[r+t]},set:function(t,n){return this[r+t]=n,this},remove:function(t){var n=r+t;return n in this&&delete this[n]},clear:function(){for(var t in this)t[0]===r&&delete this[t]},keys:function(){var t=[];for(var n in this)n[0]===r&&t.push(n.slice(1));return t},values:function(){var t=[];for(var n in this)n[0]===r&&t.push(this[n]);return t},entries:function(){var t=[];for(var n in this)n[0]===r&&t.push({key:n.slice(1),value:this[n]});return t},size:function(){var t=0;for(var n in this)n[0]===r&&++t;return t},empty:function(){for(var t in this)if(t[0]===r)return!1;return!0},each:function(t){for(var n in this)n[0]===r&&t(this[n],n.slice(1),this)}};var c=a,u=function(){var t,n,e,r=[],i=[];function a(e,i,u,f){if(i>=r.length)return null!=t&&e.sort(t),null!=n?n(e):e;var o,s,h,l=-1,d=e.length,b=r[i++],p=c(),_=u();while(++l<d)(h=p.get(o=b(s=e[l])+""))?h.push(s):p.set(o,[s]);return p.each((function(t,n){f(_,n,a(t,i,u,f))})),_}function u(t,e){if(++e>r.length)return t;var a,c=i[e-1];return null!=n&&e>=r.length?a=t.entries():(a=[],t.each((function(t,n){a.push({key:n,values:u(t,e)})}))),null!=c?a.sort((function(t,n){return c(t.key,n.key)})):a}return e={object:function(t){return a(t,0,f,o)},map:function(t){return a(t,0,s,h)},entries:function(t){return u(a(t,0,s,h),0)},key:function(t){return r.push(t),e},sortKeys:function(t){return i[r.length-1]=t,e},sortValues:function(n){return t=n,e},rollup:function(t){return n=t,e}}};function f(){return{}}function o(t,n,e){t[n]=e}function s(){return c()}function h(t,n,e){t.set(n,e)}function l(){}var d=c.prototype;function b(t,n){var e=new l;if(t instanceof l)t.each((function(t){e.add(t)}));else if(t){var r=-1,i=t.length;if(null==n)while(++r<i)e.add(t[r]);else while(++r<i)e.add(n(t[r],r,t))}return e}l.prototype=b.prototype={constructor:l,has:d.has,add:function(t){return t+="",this[r+t]=t,this},remove:d.remove,clear:d.clear,values:d.keys,size:d.size,empty:d.empty,each:d.each};var p=b,_=function(t){var n=[];for(var e in t)n.push(e);return n},v=function(t){var n=[];for(var e in t)n.push(t[e]);return n},g=function(t){var n=[];for(var e in t)n.push({key:e,value:t[e]});return n}},"6fd3":function(t,n,e){"use strict";function r(){}n["a"]=function(t){return null==t?r:function(){return this.querySelector(t)}}},"71bd":function(t,n,e){"use strict";var r=e("ea1d");n["a"]=function(t,n){var e,i={},a={};for(e in null!==t&&"object"===typeof t||(t={}),null!==n&&"object"===typeof n||(n={}),n)e in t?i[e]=Object(r["a"])(t[e],n[e]):a[e]=n[e];return function(t){for(e in i)a[e]=i[e](t);return a}}},"742c":function(t,n,e){"use strict";e.d(n,"a",(function(){return c}));var r=e("18e2"),i=e("1738"),a=Object(r["a"])((function(t){t.setHours(0,0,0,0)}),(function(t,n){t.setDate(t.getDate()+n)}),(function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*i["c"])/i["a"]}),(function(t){return t.getDate()-1}));n["b"]=a;var c=a.range},"74f4":function(t,n,e){"use strict";e.d(n,"b",(function(){return b})),e.d(n,"a",(function(){return _})),e.d(n,"c",(function(){return v})),e.d(n,"d",(function(){return g}));var r,i,a=0,c=0,u=0,f=1e3,o=0,s=0,h=0,l="object"===typeof performance&&performance.now?performance:Date,d="object"===typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(t){setTimeout(t,17)};function b(){return s||(d(p),s=l.now()+h)}function p(){s=0}function _(){this._call=this._time=this._next=null}function v(t,n,e){var r=new _;return r.restart(t,n,e),r}function g(){b(),++a;var t,n=r;while(n)(t=s-n._time)>=0&&n._call.call(null,t),n=n._next;--a}function y(){s=(o=l.now())+h,a=c=0;try{g()}finally{a=0,w(),s=0}}function x(){var t=l.now(),n=t-o;n>f&&(h-=n,o=t)}function w(){var t,n,e=r,a=1/0;while(e)e._call?(a>e._time&&(a=e._time),t=e,e=e._next):(n=e._next,e._next=null,e=t?t._next=n:r=n);i=t,m(a)}function m(t){if(!a){c&&(c=clearTimeout(c));var n=t-s;n>24?(t<1/0&&(c=setTimeout(y,t-l.now()-h)),u&&(u=clearInterval(u))):(u||(o=l.now(),u=setInterval(x,f)),a=1,d(y))}}_.prototype=v.prototype={constructor:_,restart:function(t,n,e){if("function"!==typeof t)throw new TypeError("callback is not a function");e=(null==e?b():+e)+(null==n?0:+n),this._next||i===this||(i?i._next=this:r=this,i=this),this._call=t,this._time=e,m()},stop:function(){this._call&&(this._call=null,this._time=1/0,m())}}},77848:function(t,n,e){"use strict";var r=e("8c80");function i(t,n){this._basis=new r["a"](t),this._beta=n}i.prototype={lineStart:function(){this._x=[],this._y=[],this._basis.lineStart()},lineEnd:function(){var t=this._x,n=this._y,e=t.length-1;if(e>0){var r,i=t[0],a=n[0],c=t[e]-i,u=n[e]-a,f=-1;while(++f<=e)r=f/e,this._basis.point(this._beta*t[f]+(1-this._beta)*(i+r*c),this._beta*n[f]+(1-this._beta)*(a+r*u))}this._x=this._y=null,this._basis.lineEnd()},point:function(t,n){this._x.push(+t),this._y.push(+n)}},n["a"]=function t(n){function e(t){return 1===n?new r["a"](t):new i(t,n)}return e.beta=function(n){return t(+n)},e}(.85)},7792:function(t,n,e){"use strict";function r(t,n,e){t._context.bezierCurveTo(t._x1+t._k*(t._x2-t._x0),t._y1+t._k*(t._y2-t._y0),t._x2+t._k*(t._x1-n),t._y2+t._k*(t._y1-e),t._x2,t._y2)}function i(t,n){this._context=t,this._k=(1-n)/6}e.d(n,"c",(function(){return r})),e.d(n,"a",(function(){return i})),i.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:r(this,this._x1,this._y1);break}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2,this._x1=t,this._y1=n;break;case 2:this._point=3;default:r(this,t,n);break}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}},n["b"]=function t(n){function e(t){return new i(t,n)}return e.tension=function(n){return t(+n)},e}(0)},"77ae":function(t,n,e){"use strict";e.d(n,"b",(function(){return a}));var r=e("18e2"),i=Object(r["a"])((function(t){t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0)}),(function(t,n){t.setUTCFullYear(t.getUTCFullYear()+n)}),(function(t,n){return n.getUTCFullYear()-t.getUTCFullYear()}),(function(t){return t.getUTCFullYear()}));i.every=function(t){return isFinite(t=Math.floor(t))&&t>0?Object(r["a"])((function(n){n.setUTCFullYear(Math.floor(n.getUTCFullYear()/t)*t),n.setUTCMonth(0,1),n.setUTCHours(0,0,0,0)}),(function(n,e){n.setUTCFullYear(n.getUTCFullYear()+e*t)})):null},n["a"]=i;var a=i.range},"7bd6":function(t,n,e){"use strict";function r(t,n){this._context=t,this._t=n}function i(t){return new r(t,0)}function a(t){return new r(t,1)}e.d(n,"c",(function(){return i})),e.d(n,"b",(function(){return a})),r.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=this._y=NaN,this._point=0},lineEnd:function(){0<this._t&&this._t<1&&2===this._point&&this._context.lineTo(this._x,this._y),(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line>=0&&(this._t=1-this._t,this._line=1-this._line)},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;default:if(this._t<=0)this._context.lineTo(this._x,n),this._context.lineTo(t,n);else{var e=this._x*(1-this._t)+t*this._t;this._context.lineTo(e,this._y),this._context.lineTo(e,n)}break}this._x=t,this._y=n}},n["a"]=function(t){return new r(t,.5)}},"7e33":function(t,n,e){"use strict";var r,i,a,c,u,f,o,s,h,l,d=e("b82a"),b=e("3d23"),p=e("6334"),_=e("474c"),v=e("b5ea"),g=Object(d["a"])(),y={point:x,lineStart:m,lineEnd:M,polygonStart:function(){y.point=j,y.lineStart=O,y.lineEnd=N,g.reset(),b["b"].polygonStart()},polygonEnd:function(){b["b"].polygonEnd(),y.point=x,y.lineStart=m,y.lineEnd=M,b["a"]<0?(r=-(a=180),i=-(c=90)):g>_["i"]?c=90:g<-_["i"]&&(i=-90),l[0]=r,l[1]=a},sphere:function(){r=-(a=180),i=-(c=90)}};function x(t,n){h.push(l=[r=t,a=t]),n<i&&(i=n),n>c&&(c=n)}function w(t,n){var e=Object(p["a"])([t*_["r"],n*_["r"]]);if(s){var f=Object(p["c"])(s,e),o=[f[1],-f[0],0],d=Object(p["c"])(o,f);Object(p["e"])(d),d=Object(p["g"])(d);var b,v=t-u,g=v>0?1:-1,y=d[0]*_["h"]*g,x=Object(_["a"])(v)>180;x^(g*u<y&&y<g*t)?(b=d[1]*_["h"],b>c&&(c=b)):(y=(y+360)%360-180,x^(g*u<y&&y<g*t)?(b=-d[1]*_["h"],b<i&&(i=b)):(n<i&&(i=n),n>c&&(c=n))),x?t<u?T(r,t)>T(r,a)&&(a=t):T(t,a)>T(r,a)&&(r=t):a>=r?(t<r&&(r=t),t>a&&(a=t)):t>u?T(r,t)>T(r,a)&&(a=t):T(t,a)>T(r,a)&&(r=t)}else h.push(l=[r=t,a=t]);n<i&&(i=n),n>c&&(c=n),s=e,u=t}function m(){y.point=w}function M(){l[0]=r,l[1]=a,y.point=x,s=null}function j(t,n){if(s){var e=t-u;g.add(Object(_["a"])(e)>180?e+(e>0?360:-360):e)}else f=t,o=n;b["b"].point(t,n),w(t,n)}function O(){b["b"].lineStart()}function N(){j(f,o),b["b"].lineEnd(),Object(_["a"])(g)>_["i"]&&(r=-(a=180)),l[0]=r,l[1]=a,s=null}function T(t,n){return(n-=t)<0?n+360:n}function k(t,n){return t[0]-n[0]}function A(t,n){return t[0]<=t[1]?t[0]<=n&&n<=t[1]:n<t[0]||t[1]<n}n["a"]=function(t){var n,e,u,f,o,s,d;if(c=a=-(r=i=1/0),h=[],Object(v["a"])(t,y),e=h.length){for(h.sort(k),n=1,u=h[0],o=[u];n<e;++n)f=h[n],A(u,f[0])||A(u,f[1])?(T(u[0],f[1])>T(u[0],u[1])&&(u[1]=f[1]),T(f[0],u[1])>T(u[0],u[1])&&(u[0]=f[0])):o.push(u=f);for(s=-1/0,e=o.length-1,n=0,u=o[e];n<=e;u=f,++n)f=o[n],(d=T(u[1],f[0]))>s&&(s=d,r=f[0],a=u[1])}return h=l=null,r===1/0||i===1/0?[[NaN,NaN],[NaN,NaN]]:[[r,i],[a,c]]}},"81b0":function(t,n,e){"use strict";var r=e("66d1");n["a"]=Object(r["a"])("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3")},"876c":function(t,n,e){"use strict";var r=e("66d1");n["a"]=Object(r["a"])("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666")},"8af3":function(t,n,e){"use strict";n["a"]=function(t,n,e,r,i){var a,c,u=t.children,f=u.length,o=new Array(f+1);for(o[0]=c=a=0;a<f;++a)o[a+1]=c+=u[a].value;function s(t,n,e,r,i,a,c){if(t>=n-1){var f=u[t];return f.x0=r,f.y0=i,f.x1=a,void(f.y1=c)}var h=o[t],l=e/2+h,d=t+1,b=n-1;while(d<b){var p=d+b>>>1;o[p]<l?d=p+1:b=p}l-o[d-1]<o[d]-l&&t+1<d&&--d;var _=o[d]-h,v=e-_;if(a-r>c-i){var g=(r*v+a*_)/e;s(t,d,_,r,i,g,c),s(d,n,v,g,i,a,c)}else{var y=(i*v+c*_)/e;s(t,d,_,r,i,a,y),s(d,n,v,r,y,a,c)}}s(0,f,t.value,n,e,r,i)}},"8c80":function(t,n,e){"use strict";function r(t,n,e){t._context.bezierCurveTo((2*t._x0+t._x1)/3,(2*t._y0+t._y1)/3,(t._x0+2*t._x1)/3,(t._y0+2*t._y1)/3,(t._x0+4*t._x1+n)/6,(t._y0+4*t._y1+e)/6)}function i(t){this._context=t}e.d(n,"c",(function(){return r})),e.d(n,"a",(function(){return i})),i.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){switch(this._point){case 3:r(this,this._x1,this._y1);case 2:this._context.lineTo(this._x1,this._y1);break}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3,this._context.lineTo((5*this._x0+this._x1)/6,(5*this._y0+this._y1)/6);default:r(this,t,n);break}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}},n["b"]=function(t){return new i(t)}},"90ef":function(t,n,e){"use strict";var r=e("e317"),i=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,a=new RegExp(i.source,"g");function c(t){return function(){return t}}function u(t){return function(n){return t(n)+""}}n["a"]=function(t,n){var e,f,o,s=i.lastIndex=a.lastIndex=0,h=-1,l=[],d=[];t+="",n+="";while((e=i.exec(t))&&(f=a.exec(n)))(o=f.index)>s&&(o=n.slice(s,o),l[h]?l[h]+=o:l[++h]=o),(e=e[0])===(f=f[0])?l[h]?l[h]+=f:l[++h]=f:(l[++h]=null,d.push({i:h,x:Object(r["a"])(e,f)})),s=a.lastIndex;return s<n.length&&(o=n.slice(s),l[h]?l[h]+=o:l[++h]=o),l.length<2?d[0]?u(d[0].x):c(n):(n=d.length,function(t){for(var e,r=0;r<n;++r)l[(e=d[r]).i]=e.x(t);return l.join("")})}},9150:function(t,n,e){"use strict";e.d(n,"b",(function(){return l}));var r=e("eadc"),i=e("1af0"),a=e("a0ac"),c=e("9ace"),u=e("0803"),f=e("d5a7"),o=e("ae402"),s=e("c494"),h=e("d8ad"),l=[i["a"],a["a"],c["a"],f["a"],u["a"],o["a"],s["a"]];n["a"]=function(){var t=Object(h["a"])(i["a"]),n=Object(h["a"])(64),e=null;function a(){var i;if(e||(e=i=Object(r["a"])()),t.apply(this,arguments).draw(e,+n.apply(this,arguments)),i)return e=null,i+""||null}return a.type=function(n){return arguments.length?(t="function"===typeof n?n:Object(h["a"])(n),a):t},a.size=function(t){return arguments.length?(n="function"===typeof t?t:Object(h["a"])(+t),a):n},a.context=function(t){return arguments.length?(e=null==t?null:t,a):e},a}},9603:function(t,n,e){"use strict";e.d(n,"b",(function(){return a}));var r=e("18e2"),i=Object(r["a"])((function(t){t.setDate(1),t.setHours(0,0,0,0)}),(function(t,n){t.setMonth(t.getMonth()+n)}),(function(t,n){return n.getMonth()-t.getMonth()+12*(n.getFullYear()-t.getFullYear())}),(function(t){return t.getMonth()}));n["a"]=i;var a=i.range},"98f3":function(t,n,e){"use strict";function r(){}e.d(n,"a",(function(){return r}))},"9ace":function(t,n,e){"use strict";var r=Math.sqrt(1/3),i=2*r;n["a"]={draw:function(t,n){var e=Math.sqrt(n/i),a=e*r;t.moveTo(0,-e),t.lineTo(a,0),t.lineTo(0,e),t.lineTo(-a,0),t.closePath()}}},"9ae6":function(t,n,e){"use strict";var r=e("d0ae"),i=e("8c80");function a(t){this._context=t}a.prototype={areaStart:r["a"],areaEnd:r["a"],lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._y0=this._y1=this._y2=this._y3=this._y4=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x2,this._y2),this._context.closePath();break;case 2:this._context.moveTo((this._x2+2*this._x3)/3,(this._y2+2*this._y3)/3),this._context.lineTo((this._x3+2*this._x2)/3,(this._y3+2*this._y2)/3),this._context.closePath();break;case 3:this.point(this._x2,this._y2),this.point(this._x3,this._y3),this.point(this._x4,this._y4);break}},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._x2=t,this._y2=n;break;case 1:this._point=2,this._x3=t,this._y3=n;break;case 2:this._point=3,this._x4=t,this._y4=n,this._context.moveTo((this._x0+4*this._x1+t)/6,(this._y0+4*this._y1+n)/6);break;default:Object(i["c"])(this,t,n);break}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}},n["a"]=function(t){return new a(t)}},a0ac:function(t,n,e){"use strict";n["a"]={draw:function(t,n){var e=Math.sqrt(n/5)/2;t.moveTo(-3*e,-e),t.lineTo(-e,-e),t.lineTo(-e,-3*e),t.lineTo(e,-3*e),t.lineTo(e,-e),t.lineTo(3*e,-e),t.lineTo(3*e,e),t.lineTo(e,e),t.lineTo(e,3*e),t.lineTo(-e,3*e),t.lineTo(-e,e),t.lineTo(-3*e,e),t.closePath()}}},a15a:function(t,n,e){"use strict";e.d(n,"b",(function(){return a}));var r=e("18e2"),i=Object(r["a"])((function(t){t.setMonth(0,1),t.setHours(0,0,0,0)}),(function(t,n){t.setFullYear(t.getFullYear()+n)}),(function(t,n){return n.getFullYear()-t.getFullYear()}),(function(t){return t.getFullYear()}));i.every=function(t){return isFinite(t=Math.floor(t))&&t>0?Object(r["a"])((function(n){n.setFullYear(Math.floor(n.getFullYear()/t)*t),n.setMonth(0,1),n.setHours(0,0,0,0)}),(function(n,e){n.setFullYear(n.getFullYear()+e*t)})):null},n["a"]=i;var a=i.range},a1eb:function(t,n,e){"use strict";e.r(n),e.d(n,"schemeCategory10",(function(){return r["a"]})),e.d(n,"schemeAccent",(function(){return i["a"]})),e.d(n,"schemeDark2",(function(){return a["a"]})),e.d(n,"schemePaired",(function(){return c["a"]})),e.d(n,"schemePastel1",(function(){return u["a"]})),e.d(n,"schemePastel2",(function(){return f["a"]})),e.d(n,"schemeSet1",(function(){return o["a"]})),e.d(n,"schemeSet2",(function(){return s["a"]})),e.d(n,"schemeSet3",(function(){return h["a"]})),e.d(n,"schemeTableau10",(function(){return d})),e.d(n,"interpolateBrBG",(function(){return v})),e.d(n,"schemeBrBG",(function(){return _})),e.d(n,"interpolatePRGn",(function(){return y})),e.d(n,"schemePRGn",(function(){return g})),e.d(n,"interpolatePiYG",(function(){return w})),e.d(n,"schemePiYG",(function(){return x})),e.d(n,"interpolatePuOr",(function(){return M})),e.d(n,"schemePuOr",(function(){return m})),e.d(n,"interpolateRdBu",(function(){return O})),e.d(n,"schemeRdBu",(function(){return j})),e.d(n,"interpolateRdGy",(function(){return T})),e.d(n,"schemeRdGy",(function(){return N})),e.d(n,"interpolateRdYlBu",(function(){return A})),e.d(n,"schemeRdYlBu",(function(){return k})),e.d(n,"interpolateRdYlGn",(function(){return E})),e.d(n,"schemeRdYlGn",(function(){return C})),e.d(n,"interpolateSpectral",(function(){return U})),e.d(n,"schemeSpectral",(function(){return S})),e.d(n,"interpolateBuGn",(function(){return D})),e.d(n,"schemeBuGn",(function(){return P})),e.d(n,"interpolateBuPu",(function(){return q})),e.d(n,"schemeBuPu",(function(){return L})),e.d(n,"interpolateGnBu",(function(){return z})),e.d(n,"schemeGnBu",(function(){return R})),e.d(n,"interpolateOrRd",(function(){return B})),e.d(n,"schemeOrRd",(function(){return Y})),e.d(n,"interpolatePuBuGn",(function(){return H})),e.d(n,"schemePuBuGn",(function(){return F})),e.d(n,"interpolatePuBu",(function(){return G})),e.d(n,"schemePuBu",(function(){return I})),e.d(n,"interpolatePuRd",(function(){return V})),e.d(n,"schemePuRd",(function(){return X})),e.d(n,"interpolateRdPu",(function(){return $})),e.d(n,"schemeRdPu",(function(){return Z})),e.d(n,"interpolateYlGnBu",(function(){return J})),e.d(n,"schemeYlGnBu",(function(){return W})),e.d(n,"interpolateYlGn",(function(){return K})),e.d(n,"schemeYlGn",(function(){return Q})),e.d(n,"interpolateYlOrBr",(function(){return nt})),e.d(n,"schemeYlOrBr",(function(){return tt})),e.d(n,"interpolateYlOrRd",(function(){return rt})),e.d(n,"schemeYlOrRd",(function(){return et})),e.d(n,"interpolateBlues",(function(){return at})),e.d(n,"schemeBlues",(function(){return it})),e.d(n,"interpolateGreens",(function(){return ut})),e.d(n,"schemeGreens",(function(){return ct})),e.d(n,"interpolateGreys",(function(){return ot})),e.d(n,"schemeGreys",(function(){return ft})),e.d(n,"interpolatePurples",(function(){return ht})),e.d(n,"schemePurples",(function(){return st})),e.d(n,"interpolateReds",(function(){return dt})),e.d(n,"schemeReds",(function(){return lt})),e.d(n,"interpolateOranges",(function(){return pt})),e.d(n,"schemeOranges",(function(){return bt})),e.d(n,"interpolateCividis",(function(){return _t})),e.d(n,"interpolateCubehelixDefault",(function(){return yt})),e.d(n,"interpolateRainbow",(function(){return xt["b"]})),e.d(n,"interpolateWarm",(function(){return xt["c"]})),e.d(n,"interpolateCool",(function(){return xt["a"]})),e.d(n,"interpolateSinebow",(function(){return wt["a"]})),e.d(n,"interpolateTurbo",(function(){return mt})),e.d(n,"interpolateViridis",(function(){return Mt["a"]})),e.d(n,"interpolateMagma",(function(){return Mt["c"]})),e.d(n,"interpolateInferno",(function(){return Mt["b"]})),e.d(n,"interpolatePlasma",(function(){return Mt["d"]}));var r=e("a968"),i=e("876c"),a=e("24cb"),c=e("c39b"),u=e("ab25"),f=e("b245"),o=e("d63b"),s=e("81b0"),h=e("0b7d"),l=e("66d1"),d=Object(l["a"])("4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab"),b=e("e360"),p=function(t){return Object(b["b"])(t[t.length-1])},_=new Array(3).concat("d8b365f5f5f55ab4ac","a6611adfc27d80cdc1018571","a6611adfc27df5f5f580cdc1018571","8c510ad8b365f6e8c3c7eae55ab4ac01665e","8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e","8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e","8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e","5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30","5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30").map(l["a"]),v=p(_),g=new Array(3).concat("af8dc3f7f7f77fbf7b","7b3294c2a5cfa6dba0008837","7b3294c2a5cff7f7f7a6dba0008837","762a83af8dc3e7d4e8d9f0d37fbf7b1b7837","762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837","762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837","762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837","40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b","40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b").map(l["a"]),y=p(g),x=new Array(3).concat("e9a3c9f7f7f7a1d76a","d01c8bf1b6dab8e1864dac26","d01c8bf1b6daf7f7f7b8e1864dac26","c51b7de9a3c9fde0efe6f5d0a1d76a4d9221","c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221","c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221","c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221","8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419","8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419").map(l["a"]),w=p(x),m=new Array(3).concat("998ec3f7f7f7f1a340","5e3c99b2abd2fdb863e66101","5e3c99b2abd2f7f7f7fdb863e66101","542788998ec3d8daebfee0b6f1a340b35806","542788998ec3d8daebf7f7f7fee0b6f1a340b35806","5427888073acb2abd2d8daebfee0b6fdb863e08214b35806","5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806","2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08","2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08").map(l["a"]),M=p(m),j=new Array(3).concat("ef8a62f7f7f767a9cf","ca0020f4a58292c5de0571b0","ca0020f4a582f7f7f792c5de0571b0","b2182bef8a62fddbc7d1e5f067a9cf2166ac","b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac","b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac","b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac","67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061","67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061").map(l["a"]),O=p(j),N=new Array(3).concat("ef8a62ffffff999999","ca0020f4a582bababa404040","ca0020f4a582ffffffbababa404040","b2182bef8a62fddbc7e0e0e09999994d4d4d","b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d","b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d","b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d","67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a","67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a").map(l["a"]),T=p(N),k=new Array(3).concat("fc8d59ffffbf91bfdb","d7191cfdae61abd9e92c7bb6","d7191cfdae61ffffbfabd9e92c7bb6","d73027fc8d59fee090e0f3f891bfdb4575b4","d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4","d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4","d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4","a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695","a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695").map(l["a"]),A=p(k),C=new Array(3).concat("fc8d59ffffbf91cf60","d7191cfdae61a6d96a1a9641","d7191cfdae61ffffbfa6d96a1a9641","d73027fc8d59fee08bd9ef8b91cf601a9850","d73027fc8d59fee08bffffbfd9ef8b91cf601a9850","d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850","d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850","a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837","a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837").map(l["a"]),E=p(C),S=new Array(3).concat("fc8d59ffffbf99d594","d7191cfdae61abdda42b83ba","d7191cfdae61ffffbfabdda42b83ba","d53e4ffc8d59fee08be6f59899d5943288bd","d53e4ffc8d59fee08bffffbfe6f59899d5943288bd","d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd","d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd","9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2","9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2").map(l["a"]),U=p(S),P=new Array(3).concat("e5f5f999d8c92ca25f","edf8fbb2e2e266c2a4238b45","edf8fbb2e2e266c2a42ca25f006d2c","edf8fbccece699d8c966c2a42ca25f006d2c","edf8fbccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b").map(l["a"]),D=p(P),L=new Array(3).concat("e0ecf49ebcda8856a7","edf8fbb3cde38c96c688419d","edf8fbb3cde38c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b").map(l["a"]),q=p(L),R=new Array(3).concat("e0f3dba8ddb543a2ca","f0f9e8bae4bc7bccc42b8cbe","f0f9e8bae4bc7bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081").map(l["a"]),z=p(R),Y=new Array(3).concat("fee8c8fdbb84e34a33","fef0d9fdcc8afc8d59d7301f","fef0d9fdcc8afc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000").map(l["a"]),B=p(Y),F=new Array(3).concat("ece2f0a6bddb1c9099","f6eff7bdc9e167a9cf02818a","f6eff7bdc9e167a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636").map(l["a"]),H=p(F),I=new Array(3).concat("ece7f2a6bddb2b8cbe","f1eef6bdc9e174a9cf0570b0","f1eef6bdc9e174a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858").map(l["a"]),G=p(I),X=new Array(3).concat("e7e1efc994c7dd1c77","f1eef6d7b5d8df65b0ce1256","f1eef6d7b5d8df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f").map(l["a"]),V=p(X),Z=new Array(3).concat("fde0ddfa9fb5c51b8a","feebe2fbb4b9f768a1ae017e","feebe2fbb4b9f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a").map(l["a"]),$=p(Z),W=new Array(3).concat("edf8b17fcdbb2c7fb8","ffffcca1dab441b6c4225ea8","ffffcca1dab441b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58").map(l["a"]),J=p(W),Q=new Array(3).concat("f7fcb9addd8e31a354","ffffccc2e69978c679238443","ffffccc2e69978c67931a354006837","ffffccd9f0a3addd8e78c67931a354006837","ffffccd9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529").map(l["a"]),K=p(Q),tt=new Array(3).concat("fff7bcfec44fd95f0e","ffffd4fed98efe9929cc4c02","ffffd4fed98efe9929d95f0e993404","ffffd4fee391fec44ffe9929d95f0e993404","ffffd4fee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506").map(l["a"]),nt=p(tt),et=new Array(3).concat("ffeda0feb24cf03b20","ffffb2fecc5cfd8d3ce31a1c","ffffb2fecc5cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026").map(l["a"]),rt=p(et),it=new Array(3).concat("deebf79ecae13182bd","eff3ffbdd7e76baed62171b5","eff3ffbdd7e76baed63182bd08519c","eff3ffc6dbef9ecae16baed63182bd08519c","eff3ffc6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b").map(l["a"]),at=p(it),ct=new Array(3).concat("e5f5e0a1d99b31a354","edf8e9bae4b374c476238b45","edf8e9bae4b374c47631a354006d2c","edf8e9c7e9c0a1d99b74c47631a354006d2c","edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b").map(l["a"]),ut=p(ct),ft=new Array(3).concat("f0f0f0bdbdbd636363","f7f7f7cccccc969696525252","f7f7f7cccccc969696636363252525","f7f7f7d9d9d9bdbdbd969696636363252525","f7f7f7d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000").map(l["a"]),ot=p(ft),st=new Array(3).concat("efedf5bcbddc756bb1","f2f0f7cbc9e29e9ac86a51a3","f2f0f7cbc9e29e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d").map(l["a"]),ht=p(st),lt=new Array(3).concat("fee0d2fc9272de2d26","fee5d9fcae91fb6a4acb181d","fee5d9fcae91fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d").map(l["a"]),dt=p(lt),bt=new Array(3).concat("fee6cefdae6be6550d","feeddefdbe85fd8d3cd94701","feeddefdbe85fd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704").map(l["a"]),pt=p(bt),_t=function(t){return t=Math.max(0,Math.min(1,t)),"rgb("+Math.max(0,Math.min(255,Math.round(-4.54-t*(35.34-t*(2381.73-t*(6402.7-t*(7024.72-2710.57*t)))))))+", "+Math.max(0,Math.min(255,Math.round(32.49+t*(170.73+t*(52.82-t*(131.46-t*(176.58-67.37*t)))))))+", "+Math.max(0,Math.min(255,Math.round(81.24+t*(442.36-t*(2482.43-t*(6167.24-t*(6614.94-2475.67*t)))))))+")"},vt=e("15a7"),gt=e("3872"),yt=Object(gt["a"])(Object(vt["a"])(300,.5,0),Object(vt["a"])(-240,.5,1)),xt=e("5fbc"),wt=e("06f7"),mt=function(t){return t=Math.max(0,Math.min(1,t)),"rgb("+Math.max(0,Math.min(255,Math.round(34.61+t*(1172.33-t*(10793.56-t*(33300.12-t*(38394.49-14825.05*t)))))))+", "+Math.max(0,Math.min(255,Math.round(23.31+t*(557.33+t*(1225.33-t*(3574.96-t*(1073.77+707.56*t)))))))+", "+Math.max(0,Math.min(255,Math.round(27.2+t*(3211.1-t*(15327.97-t*(27814-t*(22569.18-6838.66*t)))))))+")"},Mt=e("4a96")},a317:function(t,n,e){"use strict";n["a"]=function(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView}},a43d:function(t,n,e){"use strict";e.r(n),e.d(n,"interpolate",(function(){return r["a"]})),e.d(n,"interpolateArray",(function(){return i["a"]})),e.d(n,"interpolateBasis",(function(){return a["b"]})),e.d(n,"interpolateBasisClosed",(function(){return c["a"]})),e.d(n,"interpolateDate",(function(){return u["a"]})),e.d(n,"interpolateDiscrete",(function(){return f})),e.d(n,"interpolateHue",(function(){return s})),e.d(n,"interpolateNumber",(function(){return h["a"]})),e.d(n,"interpolateNumberArray",(function(){return l["a"]})),e.d(n,"interpolateObject",(function(){return d["a"]})),e.d(n,"interpolateRound",(function(){return b["a"]})),e.d(n,"interpolateString",(function(){return p["a"]})),e.d(n,"interpolateTransformCss",(function(){return _["a"]})),e.d(n,"interpolateTransformSvg",(function(){return _["b"]})),e.d(n,"interpolateZoom",(function(){return v["a"]})),e.d(n,"interpolateRgb",(function(){return g["a"]})),e.d(n,"interpolateRgbBasis",(function(){return g["b"]})),e.d(n,"interpolateRgbBasisClosed",(function(){return g["c"]})),e.d(n,"interpolateHsl",(function(){return w})),e.d(n,"interpolateHslLong",(function(){return m})),e.d(n,"interpolateLab",(function(){return j})),e.d(n,"interpolateHcl",(function(){return N})),e.d(n,"interpolateHclLong",(function(){return T})),e.d(n,"interpolateCubehelix",(function(){return k["b"]})),e.d(n,"interpolateCubehelixLong",(function(){return k["a"]})),e.d(n,"piecewise",(function(){return A})),e.d(n,"quantize",(function(){return C}));var r=e("ea1d"),i=e("6730"),a=e("c84a"),c=e("4bcd"),u=e("1b6d"),f=function(t){var n=t.length;return function(e){return t[Math.max(0,Math.min(n-1,Math.floor(e*n)))]}},o=e("b055"),s=function(t,n){var e=Object(o["c"])(+t,+n);return function(t){var n=e(t);return n-360*Math.floor(n/360)}},h=e("e317"),l=e("51de"),d=e("71bd"),b=e("5857"),p=e("90ef"),_=e("4b79"),v=e("ce75"),g=e("e360"),y=e("166a");function x(t){return function(n,e){var r=t((n=Object(y["f"])(n)).h,(e=Object(y["f"])(e)).h),i=Object(o["a"])(n.s,e.s),a=Object(o["a"])(n.l,e.l),c=Object(o["a"])(n.opacity,e.opacity);return function(t){return n.h=r(t),n.s=i(t),n.l=a(t),n.opacity=c(t),n+""}}}var w=x(o["c"]),m=x(o["a"]),M=e("62f0");function j(t,n){var e=Object(o["a"])((t=Object(M["a"])(t)).l,(n=Object(M["a"])(n)).l),r=Object(o["a"])(t.a,n.a),i=Object(o["a"])(t.b,n.b),a=Object(o["a"])(t.opacity,n.opacity);return function(n){return t.l=e(n),t.a=r(n),t.b=i(n),t.opacity=a(n),t+""}}function O(t){return function(n,e){var r=t((n=Object(M["c"])(n)).h,(e=Object(M["c"])(e)).h),i=Object(o["a"])(n.c,e.c),a=Object(o["a"])(n.l,e.l),c=Object(o["a"])(n.opacity,e.opacity);return function(t){return n.h=r(t),n.c=i(t),n.l=a(t),n.opacity=c(t),n+""}}}var N=O(o["c"]),T=O(o["a"]),k=e("3872");function A(t,n){var e=0,r=n.length-1,i=n[0],a=new Array(r<0?0:r);while(e<r)a[e]=t(i,i=n[++e]);return function(t){var n=Math.max(0,Math.min(r-1,Math.floor(t*=r)));return a[n](t-n)}}var C=function(t,n){for(var e=new Array(n),r=0;r<n;++r)e[r]=t(r/(n-1));return e}},a4bd:function(t,n,e){"use strict";function r(t){return t<0?-1:1}function i(t,n,e){var i=t._x1-t._x0,a=n-t._x1,c=(t._y1-t._y0)/(i||a<0&&-0),u=(e-t._y1)/(a||i<0&&-0),f=(c*a+u*i)/(i+a);return(r(c)+r(u))*Math.min(Math.abs(c),Math.abs(u),.5*Math.abs(f))||0}function a(t,n){var e=t._x1-t._x0;return e?(3*(t._y1-t._y0)/e-n)/2:n}function c(t,n,e){var r=t._x0,i=t._y0,a=t._x1,c=t._y1,u=(a-r)/3;t._context.bezierCurveTo(r+u,i+u*n,a-u,c-u*e,a,c)}function u(t){this._context=t}function f(t){this._context=new o(t)}function o(t){this._context=t}function s(t){return new u(t)}function h(t){return new f(t)}e.d(n,"a",(function(){return s})),e.d(n,"b",(function(){return h})),u.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=this._t0=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x1,this._y1);break;case 3:c(this,this._t0,a(this,this._t0));break}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){var e=NaN;if(t=+t,n=+n,t!==this._x1||n!==this._y1){switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3,c(this,a(this,e=i(this,t,n)),e);break;default:c(this,this._t0,e=i(this,t,n));break}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n,this._t0=e}}},(f.prototype=Object.create(u.prototype)).point=function(t,n){u.prototype.point.call(this,n,t)},o.prototype={moveTo:function(t,n){this._context.moveTo(n,t)},closePath:function(){this._context.closePath()},lineTo:function(t,n){this._context.lineTo(n,t)},bezierCurveTo:function(t,n,e,r,i,a){this._context.bezierCurveTo(n,t,r,e,a,i)}}},a591:function(t,n,e){"use strict";e.d(n,"a",(function(){return l}));var r=e("2739"),i=e("6eb2"),a=e("b14c"),c=e("742c"),u=e("a15a"),f=e("77ae");function o(t){if(0<=t.y&&t.y<100){var n=new Date(-1,t.m,t.d,t.H,t.M,t.S,t.L);return n.setFullYear(t.y),n}return new Date(t.y,t.m,t.d,t.H,t.M,t.S,t.L)}function s(t){if(0<=t.y&&t.y<100){var n=new Date(Date.UTC(-1,t.m,t.d,t.H,t.M,t.S,t.L));return n.setUTCFullYear(t.y),n}return new Date(Date.UTC(t.y,t.m,t.d,t.H,t.M,t.S,t.L))}function h(t,n,e){return{y:t,m:n,d:e,H:0,M:0,S:0,L:0}}function l(t){var n=t.dateTime,e=t.date,u=t.time,f=t.periods,l=t.days,b=t.shortDays,p=t.months,_=t.shortMonths,v=y(f),g=x(f),Q=y(l),gt=x(l),Ct=y(b),Et=x(b),St=y(p),Ut=x(p),Pt=y(_),Dt=x(_),Lt={a:Wt,A:Jt,b:Qt,B:Kt,c:null,d:B,e:B,f:X,g:rt,G:at,H:F,I:H,j:I,L:G,m:V,M:Z,p:tn,q:nn,Q:kt,s:At,S:$,u:W,U:J,V:K,w:tt,W:nt,x:null,X:null,y:et,Y:it,Z:ct,"%":Tt},qt={a:en,A:rn,b:an,B:cn,c:null,d:ut,e:ut,f:lt,g:Mt,G:Ot,H:ft,I:ot,j:st,L:ht,m:dt,M:bt,p:un,q:fn,Q:kt,s:At,S:pt,u:_t,U:vt,V:yt,w:xt,W:wt,x:null,X:null,y:mt,Y:jt,Z:Nt,"%":Tt},Rt={a:Ht,A:It,b:Gt,B:Xt,c:Vt,d:E,e:E,f:q,g:T,G:N,H:U,I:U,j:S,L:L,m:C,M:P,p:Ft,q:A,Q:z,s:Y,S:D,u:m,U:M,V:j,w:w,W:O,x:Zt,X:$t,y:T,Y:N,Z:k,"%":R};function zt(t,n){return function(e){var r,i,a,c=[],u=-1,f=0,o=t.length;e instanceof Date||(e=new Date(+e));while(++u<o)37===t.charCodeAt(u)&&(c.push(t.slice(f,u)),null!=(i=d[r=t.charAt(++u)])?r=t.charAt(++u):i="e"===r?" ":"0",(a=n[r])&&(r=a(e,i)),c.push(r),f=u+1);return c.push(t.slice(f,u)),c.join("")}}function Yt(t,n){return function(e){var u,f,l=h(1900,void 0,1),d=Bt(l,t,e+="",0);if(d!=e.length)return null;if("Q"in l)return new Date(l.Q);if("s"in l)return new Date(1e3*l.s+("L"in l?l.L:0));if(n&&!("Z"in l)&&(l.Z=0),"p"in l&&(l.H=l.H%12+12*l.p),void 0===l.m&&(l.m="q"in l?l.q:0),"V"in l){if(l.V<1||l.V>53)return null;"w"in l||(l.w=1),"Z"in l?(u=s(h(l.y,0,1)),f=u.getUTCDay(),u=f>4||0===f?r["c"].ceil(u):Object(r["c"])(u),u=i["a"].offset(u,7*(l.V-1)),l.y=u.getUTCFullYear(),l.m=u.getUTCMonth(),l.d=u.getUTCDate()+(l.w+6)%7):(u=o(h(l.y,0,1)),f=u.getDay(),u=f>4||0===f?a["c"].ceil(u):Object(a["c"])(u),u=c["b"].offset(u,7*(l.V-1)),l.y=u.getFullYear(),l.m=u.getMonth(),l.d=u.getDate()+(l.w+6)%7)}else("W"in l||"U"in l)&&("w"in l||(l.w="u"in l?l.u%7:"W"in l?1:0),f="Z"in l?s(h(l.y,0,1)).getUTCDay():o(h(l.y,0,1)).getDay(),l.m=0,l.d="W"in l?(l.w+6)%7+7*l.W-(f+5)%7:l.w+7*l.U-(f+6)%7);return"Z"in l?(l.H+=l.Z/100|0,l.M+=l.Z%100,s(l)):o(l)}}function Bt(t,n,e,r){var i,a,c=0,u=n.length,f=e.length;while(c<u){if(r>=f)return-1;if(i=n.charCodeAt(c++),37===i){if(i=n.charAt(c++),a=Rt[i in d?n.charAt(c++):i],!a||(r=a(t,e,r))<0)return-1}else if(i!=e.charCodeAt(r++))return-1}return r}function Ft(t,n,e){var r=v.exec(n.slice(e));return r?(t.p=g[r[0].toLowerCase()],e+r[0].length):-1}function Ht(t,n,e){var r=Ct.exec(n.slice(e));return r?(t.w=Et[r[0].toLowerCase()],e+r[0].length):-1}function It(t,n,e){var r=Q.exec(n.slice(e));return r?(t.w=gt[r[0].toLowerCase()],e+r[0].length):-1}function Gt(t,n,e){var r=Pt.exec(n.slice(e));return r?(t.m=Dt[r[0].toLowerCase()],e+r[0].length):-1}function Xt(t,n,e){var r=St.exec(n.slice(e));return r?(t.m=Ut[r[0].toLowerCase()],e+r[0].length):-1}function Vt(t,e,r){return Bt(t,n,e,r)}function Zt(t,n,r){return Bt(t,e,n,r)}function $t(t,n,e){return Bt(t,u,n,e)}function Wt(t){return b[t.getDay()]}function Jt(t){return l[t.getDay()]}function Qt(t){return _[t.getMonth()]}function Kt(t){return p[t.getMonth()]}function tn(t){return f[+(t.getHours()>=12)]}function nn(t){return 1+~~(t.getMonth()/3)}function en(t){return b[t.getUTCDay()]}function rn(t){return l[t.getUTCDay()]}function an(t){return _[t.getUTCMonth()]}function cn(t){return p[t.getUTCMonth()]}function un(t){return f[+(t.getUTCHours()>=12)]}function fn(t){return 1+~~(t.getUTCMonth()/3)}return Lt.x=zt(e,Lt),Lt.X=zt(u,Lt),Lt.c=zt(n,Lt),qt.x=zt(e,qt),qt.X=zt(u,qt),qt.c=zt(n,qt),{format:function(t){var n=zt(t+="",Lt);return n.toString=function(){return t},n},parse:function(t){var n=Yt(t+="",!1);return n.toString=function(){return t},n},utcFormat:function(t){var n=zt(t+="",qt);return n.toString=function(){return t},n},utcParse:function(t){var n=Yt(t+="",!0);return n.toString=function(){return t},n}}}var d={"-":"",_:" ",0:"0"},b=/^\s*\d+/,p=/^%/,_=/[\\^$*+?|[\]().{}]/g;function v(t,n,e){var r=t<0?"-":"",i=(r?-t:t)+"",a=i.length;return r+(a<e?new Array(e-a+1).join(n)+i:i)}function g(t){return t.replace(_,"\\$&")}function y(t){return new RegExp("^(?:"+t.map(g).join("|")+")","i")}function x(t){var n={},e=-1,r=t.length;while(++e<r)n[t[e].toLowerCase()]=e;return n}function w(t,n,e){var r=b.exec(n.slice(e,e+1));return r?(t.w=+r[0],e+r[0].length):-1}function m(t,n,e){var r=b.exec(n.slice(e,e+1));return r?(t.u=+r[0],e+r[0].length):-1}function M(t,n,e){var r=b.exec(n.slice(e,e+2));return r?(t.U=+r[0],e+r[0].length):-1}function j(t,n,e){var r=b.exec(n.slice(e,e+2));return r?(t.V=+r[0],e+r[0].length):-1}function O(t,n,e){var r=b.exec(n.slice(e,e+2));return r?(t.W=+r[0],e+r[0].length):-1}function N(t,n,e){var r=b.exec(n.slice(e,e+4));return r?(t.y=+r[0],e+r[0].length):-1}function T(t,n,e){var r=b.exec(n.slice(e,e+2));return r?(t.y=+r[0]+(+r[0]>68?1900:2e3),e+r[0].length):-1}function k(t,n,e){var r=/^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(n.slice(e,e+6));return r?(t.Z=r[1]?0:-(r[2]+(r[3]||"00")),e+r[0].length):-1}function A(t,n,e){var r=b.exec(n.slice(e,e+1));return r?(t.q=3*r[0]-3,e+r[0].length):-1}function C(t,n,e){var r=b.exec(n.slice(e,e+2));return r?(t.m=r[0]-1,e+r[0].length):-1}function E(t,n,e){var r=b.exec(n.slice(e,e+2));return r?(t.d=+r[0],e+r[0].length):-1}function S(t,n,e){var r=b.exec(n.slice(e,e+3));return r?(t.m=0,t.d=+r[0],e+r[0].length):-1}function U(t,n,e){var r=b.exec(n.slice(e,e+2));return r?(t.H=+r[0],e+r[0].length):-1}function P(t,n,e){var r=b.exec(n.slice(e,e+2));return r?(t.M=+r[0],e+r[0].length):-1}function D(t,n,e){var r=b.exec(n.slice(e,e+2));return r?(t.S=+r[0],e+r[0].length):-1}function L(t,n,e){var r=b.exec(n.slice(e,e+3));return r?(t.L=+r[0],e+r[0].length):-1}function q(t,n,e){var r=b.exec(n.slice(e,e+6));return r?(t.L=Math.floor(r[0]/1e3),e+r[0].length):-1}function R(t,n,e){var r=p.exec(n.slice(e,e+1));return r?e+r[0].length:-1}function z(t,n,e){var r=b.exec(n.slice(e));return r?(t.Q=+r[0],e+r[0].length):-1}function Y(t,n,e){var r=b.exec(n.slice(e));return r?(t.s=+r[0],e+r[0].length):-1}function B(t,n){return v(t.getDate(),n,2)}function F(t,n){return v(t.getHours(),n,2)}function H(t,n){return v(t.getHours()%12||12,n,2)}function I(t,n){return v(1+c["b"].count(Object(u["a"])(t),t),n,3)}function G(t,n){return v(t.getMilliseconds(),n,3)}function X(t,n){return G(t,n)+"000"}function V(t,n){return v(t.getMonth()+1,n,2)}function Z(t,n){return v(t.getMinutes(),n,2)}function $(t,n){return v(t.getSeconds(),n,2)}function W(t){var n=t.getDay();return 0===n?7:n}function J(t,n){return v(a["g"].count(Object(u["a"])(t)-1,t),n,2)}function Q(t){var n=t.getDay();return n>=4||0===n?Object(a["i"])(t):a["i"].ceil(t)}function K(t,n){return t=Q(t),v(a["i"].count(Object(u["a"])(t),t)+(4===Object(u["a"])(t).getDay()),n,2)}function tt(t){return t.getDay()}function nt(t,n){return v(a["c"].count(Object(u["a"])(t)-1,t),n,2)}function et(t,n){return v(t.getFullYear()%100,n,2)}function rt(t,n){return t=Q(t),v(t.getFullYear()%100,n,2)}function it(t,n){return v(t.getFullYear()%1e4,n,4)}function at(t,n){var e=t.getDay();return t=e>=4||0===e?Object(a["i"])(t):a["i"].ceil(t),v(t.getFullYear()%1e4,n,4)}function ct(t){var n=t.getTimezoneOffset();return(n>0?"-":(n*=-1,"+"))+v(n/60|0,"0",2)+v(n%60,"0",2)}function ut(t,n){return v(t.getUTCDate(),n,2)}function ft(t,n){return v(t.getUTCHours(),n,2)}function ot(t,n){return v(t.getUTCHours()%12||12,n,2)}function st(t,n){return v(1+i["a"].count(Object(f["a"])(t),t),n,3)}function ht(t,n){return v(t.getUTCMilliseconds(),n,3)}function lt(t,n){return ht(t,n)+"000"}function dt(t,n){return v(t.getUTCMonth()+1,n,2)}function bt(t,n){return v(t.getUTCMinutes(),n,2)}function pt(t,n){return v(t.getUTCSeconds(),n,2)}function _t(t){var n=t.getUTCDay();return 0===n?7:n}function vt(t,n){return v(r["g"].count(Object(f["a"])(t)-1,t),n,2)}function gt(t){var n=t.getUTCDay();return n>=4||0===n?Object(r["i"])(t):r["i"].ceil(t)}function yt(t,n){return t=gt(t),v(r["i"].count(Object(f["a"])(t),t)+(4===Object(f["a"])(t).getUTCDay()),n,2)}function xt(t){return t.getUTCDay()}function wt(t,n){return v(r["c"].count(Object(f["a"])(t)-1,t),n,2)}function mt(t,n){return v(t.getUTCFullYear()%100,n,2)}function Mt(t,n){return t=gt(t),v(t.getUTCFullYear()%100,n,2)}function jt(t,n){return v(t.getUTCFullYear()%1e4,n,4)}function Ot(t,n){var e=t.getUTCDay();return t=e>=4||0===e?Object(r["i"])(t):r["i"].ceil(t),v(t.getUTCFullYear()%1e4,n,4)}function Nt(){return"+0000"}function Tt(){return"%"}function kt(t){return+t}function At(t){return Math.floor(+t/1e3)}},a794:function(t,n,e){"use strict";var r,i,a,c,u,f,o,s,h,l,d,b,p,_,v,g,y=e("474c"),x=e("98f3"),w=e("b5ea"),m={sphere:x["a"],point:M,lineStart:O,lineEnd:k,polygonStart:function(){m.lineStart=A,m.lineEnd=C},polygonEnd:function(){m.lineStart=O,m.lineEnd=k}};function M(t,n){t*=y["r"],n*=y["r"];var e=Object(y["g"])(n);j(e*Object(y["g"])(t),e*Object(y["t"])(t),Object(y["t"])(n))}function j(t,n,e){++r,a+=(t-a)/r,c+=(n-c)/r,u+=(e-u)/r}function O(){m.point=N}function N(t,n){t*=y["r"],n*=y["r"];var e=Object(y["g"])(n);_=e*Object(y["g"])(t),v=e*Object(y["t"])(t),g=Object(y["t"])(n),m.point=T,j(_,v,g)}function T(t,n){t*=y["r"],n*=y["r"];var e=Object(y["g"])(n),r=e*Object(y["g"])(t),a=e*Object(y["t"])(t),c=Object(y["t"])(n),u=Object(y["e"])(Object(y["u"])((u=v*c-g*a)*u+(u=g*r-_*c)*u+(u=_*a-v*r)*u),_*r+v*a+g*c);i+=u,f+=u*(_+(_=r)),o+=u*(v+(v=a)),s+=u*(g+(g=c)),j(_,v,g)}function k(){m.point=M}function A(){m.point=E}function C(){S(b,p),m.point=M}function E(t,n){b=t,p=n,t*=y["r"],n*=y["r"],m.point=S;var e=Object(y["g"])(n);_=e*Object(y["g"])(t),v=e*Object(y["t"])(t),g=Object(y["t"])(n),j(_,v,g)}function S(t,n){t*=y["r"],n*=y["r"];var e=Object(y["g"])(n),r=e*Object(y["g"])(t),a=e*Object(y["t"])(t),c=Object(y["t"])(n),u=v*c-g*a,b=g*r-_*c,p=_*a-v*r,x=Object(y["u"])(u*u+b*b+p*p),w=Object(y["c"])(x),m=x&&-w/x;h+=m*u,l+=m*b,d+=m*p,i+=w,f+=w*(_+(_=r)),o+=w*(v+(v=a)),s+=w*(g+(g=c)),j(_,v,g)}n["a"]=function(t){r=i=a=c=u=f=o=s=h=l=d=0,Object(w["a"])(t,m);var n=h,e=l,b=d,p=n*n+e*e+b*b;return p<y["j"]&&(n=f,e=o,b=s,i<y["i"]&&(n=a,e=c,b=u),p=n*n+e*e+b*b,p<y["j"])?[NaN,NaN]:[Object(y["e"])(e,n)*y["h"],Object(y["c"])(b/Object(y["u"])(p))*y["h"]]}},a7fd:function(t,n,e){"use strict";var r=e("aa74");n["a"]=function(t){return t=Object(r["b"])(Math.abs(t)),t?t[1]:NaN}},a84d:function(t,n,e){"use strict";function r(t){this._context=t}function i(t){var n,e,r=t.length-1,i=new Array(r),a=new Array(r),c=new Array(r);for(i[0]=0,a[0]=2,c[0]=t[0]+2*t[1],n=1;n<r-1;++n)i[n]=1,a[n]=4,c[n]=4*t[n]+2*t[n+1];for(i[r-1]=2,a[r-1]=7,c[r-1]=8*t[r-1]+t[r],n=1;n<r;++n)e=i[n]/a[n-1],a[n]-=e,c[n]-=e*c[n-1];for(i[r-1]=c[r-1]/a[r-1],n=r-2;n>=0;--n)i[n]=(c[n]-i[n+1])/a[n];for(a[r-1]=(t[r]+i[r-1])/2,n=0;n<r-1;++n)a[n]=2*t[n+1]-i[n+1];return[i,a]}r.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=[],this._y=[]},lineEnd:function(){var t=this._x,n=this._y,e=t.length;if(e)if(this._line?this._context.lineTo(t[0],n[0]):this._context.moveTo(t[0],n[0]),2===e)this._context.lineTo(t[1],n[1]);else for(var r=i(t),a=i(n),c=0,u=1;u<e;++c,++u)this._context.bezierCurveTo(r[0][c],a[0][c],r[1][c],a[1][c],t[u],n[u]);(this._line||0!==this._line&&1===e)&&this._context.closePath(),this._line=1-this._line,this._x=this._y=null},point:function(t,n){this._x.push(+t),this._y.push(+n)}},n["a"]=function(t){return new r(t)}},a968:function(t,n,e){"use strict";var r=e("66d1");n["a"]=Object(r["a"])("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf")},aa74:function(t,n,e){"use strict";function r(t,n){if((e=(t=n?t.toExponential(n-1):t.toExponential()).indexOf("e"))<0)return null;var e,r=t.slice(0,e);return[r.length>1?r[0]+r.slice(2):r,+t.slice(e+1)]}e.d(n,"b",(function(){return r})),n["a"]=function(t){return Math.abs(t=Math.round(t))>=1e21?t.toLocaleString("en").replace(/,/g,""):t.toString(10)}},ab25:function(t,n,e){"use strict";var r=e("66d1");n["a"]=Object(r["a"])("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2")},adda:function(t,n,e){"use strict";e.d(n,"a",(function(){return u})),e.d(n,"b",(function(){return f}));var r=e("e3b0"),i=e("474c");function a(t,n,e){var a=Object(r["b"])(t,n-i["i"],e).concat(n);return function(t){return a.map((function(n){return[t,n]}))}}function c(t,n,e){var a=Object(r["b"])(t,n-i["i"],e).concat(n);return function(t){return a.map((function(n){return[n,t]}))}}function u(){var t,n,e,u,f,o,s,h,l,d,b,p,_=10,v=_,g=90,y=360,x=2.5;function w(){return{type:"MultiLineString",coordinates:m()}}function m(){return Object(r["b"])(Object(i["f"])(u/g)*g,e,g).map(b).concat(Object(r["b"])(Object(i["f"])(h/y)*y,s,y).map(p)).concat(Object(r["b"])(Object(i["f"])(n/_)*_,t,_).filter((function(t){return Object(i["a"])(t%g)>i["i"]})).map(l)).concat(Object(r["b"])(Object(i["f"])(o/v)*v,f,v).filter((function(t){return Object(i["a"])(t%y)>i["i"]})).map(d))}return w.lines=function(){return m().map((function(t){return{type:"LineString",coordinates:t}}))},w.outline=function(){return{type:"Polygon",coordinates:[b(u).concat(p(s).slice(1),b(e).reverse().slice(1),p(h).reverse().slice(1))]}},w.extent=function(t){return arguments.length?w.extentMajor(t).extentMinor(t):w.extentMinor()},w.extentMajor=function(t){return arguments.length?(u=+t[0][0],e=+t[1][0],h=+t[0][1],s=+t[1][1],u>e&&(t=u,u=e,e=t),h>s&&(t=h,h=s,s=t),w.precision(x)):[[u,h],[e,s]]},w.extentMinor=function(e){return arguments.length?(n=+e[0][0],t=+e[1][0],o=+e[0][1],f=+e[1][1],n>t&&(e=n,n=t,t=e),o>f&&(e=o,o=f,f=e),w.precision(x)):[[n,o],[t,f]]},w.step=function(t){return arguments.length?w.stepMajor(t).stepMinor(t):w.stepMinor()},w.stepMajor=function(t){return arguments.length?(g=+t[0],y=+t[1],w):[g,y]},w.stepMinor=function(t){return arguments.length?(_=+t[0],v=+t[1],w):[_,v]},w.precision=function(r){return arguments.length?(x=+r,l=a(o,f,90),d=c(n,t,x),b=a(h,s,90),p=c(u,e,x),w):x},w.extentMajor([[-180,-90+i["i"]],[180,90-i["i"]]]).extentMinor([[-180,-80-i["i"]],[180,80+i["i"]]])}function f(){return u()()}},ae402:function(t,n,e){"use strict";var r=Math.sqrt(3);n["a"]={draw:function(t,n){var e=-Math.sqrt(n/(3*r));t.moveTo(0,2*e),t.lineTo(-r*e,-e),t.lineTo(r*e,-e),t.closePath()}}},b055:function(t,n,e){"use strict";e.d(n,"c",(function(){return c})),e.d(n,"b",(function(){return u})),e.d(n,"a",(function(){return f}));var r=e("c698");function i(t,n){return function(e){return t+e*n}}function a(t,n,e){return t=Math.pow(t,e),n=Math.pow(n,e)-t,e=1/e,function(r){return Math.pow(t+r*n,e)}}function c(t,n){var e=n-t;return e?i(t,e>180||e<-180?e-360*Math.round(e/360):e):Object(r["a"])(isNaN(t)?n:t)}function u(t){return 1===(t=+t)?f:function(n,e){return e-n?a(n,e,t):Object(r["a"])(isNaN(n)?e:n)}}function f(t,n){var e=n-t;return e?i(t,e):Object(r["a"])(isNaN(t)?n:t)}},b0ad:function(t,n,e){"use strict";e.d(n,"a",(function(){return i}));var r=e("7792");function i(t,n){this._context=t,this._k=(1-n)/6}i.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:Object(r["c"])(this,t,n);break}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}},n["b"]=function t(n){function e(t){return new i(t,n)}return e.tension=function(n){return t(+n)},e}(0)},b14c:function(t,n,e){"use strict";e.d(n,"g",(function(){return c})),e.d(n,"c",(function(){return u})),e.d(n,"k",(function(){return f})),e.d(n,"m",(function(){return o})),e.d(n,"i",(function(){return s})),e.d(n,"a",(function(){return h})),e.d(n,"e",(function(){return l})),e.d(n,"h",(function(){return d})),e.d(n,"d",(function(){return b})),e.d(n,"l",(function(){return p})),e.d(n,"n",(function(){return _})),e.d(n,"j",(function(){return v})),e.d(n,"b",(function(){return g})),e.d(n,"f",(function(){return y}));var r=e("18e2"),i=e("1738");function a(t){return Object(r["a"])((function(n){n.setDate(n.getDate()-(n.getDay()+7-t)%7),n.setHours(0,0,0,0)}),(function(t,n){t.setDate(t.getDate()+7*n)}),(function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*i["c"])/i["e"]}))}var c=a(0),u=a(1),f=a(2),o=a(3),s=a(4),h=a(5),l=a(6),d=c.range,b=u.range,p=f.range,_=o.range,v=s.range,g=h.range,y=l.range},b170:function(t,n,e){"use strict";var r,i=e("a7fd"),a=function(t,n){return function(e,r){var i=e.length,a=[],c=0,u=t[0],f=0;while(i>0&&u>0){if(f+u+1>r&&(u=Math.max(1,r-f)),a.push(e.substring(i-=u,i+u)),(f+=u+1)>r)break;u=t[c=(c+1)%t.length]}return a.reverse().join(n)}},c=function(t){return function(n){return n.replace(/[0-9]/g,(function(n){return t[+n]}))}},u=e("09b8"),f=function(t){t:for(var n,e=t.length,r=1,i=-1;r<e;++r)switch(t[r]){case".":i=n=r;break;case"0":0===i&&(i=r),n=r;break;default:if(!+t[r])break t;i>0&&(i=0);break}return i>0?t.slice(0,i)+t.slice(n+1):t},o=e("aa74"),s=function(t,n){var e=Object(o["b"])(t,n);if(!e)return t+"";var i=e[0],a=e[1],c=a-(r=3*Math.max(-8,Math.min(8,Math.floor(a/3))))+1,u=i.length;return c===u?i:c>u?i+new Array(c-u+1).join("0"):c>0?i.slice(0,c)+"."+i.slice(c):"0."+new Array(1-c).join("0")+Object(o["b"])(t,Math.max(0,n+c-1))[0]},h=function(t,n){var e=Object(o["b"])(t,n);if(!e)return t+"";var r=e[0],i=e[1];return i<0?"0."+new Array(-i).join("0")+r:r.length>i+1?r.slice(0,i+1)+"."+r.slice(i+1):r+new Array(i-r.length+2).join("0")},l={"%":function(t,n){return(100*t).toFixed(n)},b:function(t){return Math.round(t).toString(2)},c:function(t){return t+""},d:o["a"],e:function(t,n){return t.toExponential(n)},f:function(t,n){return t.toFixed(n)},g:function(t,n){return t.toPrecision(n)},o:function(t){return Math.round(t).toString(8)},p:function(t,n){return h(100*t,n)},r:h,s:s,X:function(t){return Math.round(t).toString(16).toUpperCase()},x:function(t){return Math.round(t).toString(16)}},d=function(t){return t},b=Array.prototype.map,p=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];n["a"]=function(t){var n=void 0===t.grouping||void 0===t.thousands?d:a(b.call(t.grouping,Number),t.thousands+""),e=void 0===t.currency?"":t.currency[0]+"",o=void 0===t.currency?"":t.currency[1]+"",s=void 0===t.decimal?".":t.decimal+"",h=void 0===t.numerals?d:c(b.call(t.numerals,String)),_=void 0===t.percent?"%":t.percent+"",v=void 0===t.minus?"-":t.minus+"",g=void 0===t.nan?"NaN":t.nan+"";function y(t){t=Object(u["b"])(t);var i=t.fill,a=t.align,c=t.sign,d=t.symbol,b=t.zero,y=t.width,x=t.comma,w=t.precision,m=t.trim,M=t.type;"n"===M?(x=!0,M="g"):l[M]||(void 0===w&&(w=12),m=!0,M="g"),(b||"0"===i&&"="===a)&&(b=!0,i="0",a="=");var j="$"===d?e:"#"===d&&/[boxX]/.test(M)?"0"+M.toLowerCase():"",O="$"===d?o:/[%p]/.test(M)?_:"",N=l[M],T=/[defgprs%]/.test(M);function k(t){var e,u,o,l=j,d=O;if("c"===M)d=N(t)+d,t="";else{t=+t;var _=t<0||1/t<0;if(t=isNaN(t)?g:N(Math.abs(t),w),m&&(t=f(t)),_&&0===+t&&"+"!==c&&(_=!1),l=(_?"("===c?c:v:"-"===c||"("===c?"":c)+l,d=("s"===M?p[8+r/3]:"")+d+(_&&"("===c?")":""),T){e=-1,u=t.length;while(++e<u)if(o=t.charCodeAt(e),48>o||o>57){d=(46===o?s+t.slice(e+1):t.slice(e))+d,t=t.slice(0,e);break}}}x&&!b&&(t=n(t,1/0));var k=l.length+t.length+d.length,A=k<y?new Array(y-k+1).join(i):"";switch(x&&b&&(t=n(A+t,A.length?y-d.length:1/0),A=""),a){case"<":t=l+t+d+A;break;case"=":t=l+A+t+d;break;case"^":t=A.slice(0,k=A.length>>1)+l+t+d+A.slice(k);break;default:t=A+l+t+d;break}return h(t)}return w=void 0===w?6:/[gprs]/.test(M)?Math.max(1,Math.min(21,w)):Math.max(0,Math.min(20,w)),k.toString=function(){return t+""},k}function x(t,n){var e=y((t=Object(u["b"])(t),t.type="f",t)),r=3*Math.max(-8,Math.min(8,Math.floor(Object(i["a"])(n)/3))),a=Math.pow(10,-r),c=p[8+r/3];return function(t){return e(a*t)+c}}return{format:y,formatPrefix:x}}},b245:function(t,n,e){"use strict";var r=e("66d1");n["a"]=Object(r["a"])("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc")},b3c3:function(t,n,e){"use strict";e.d(n,"b",(function(){return c}));var r=e("18e2"),i=e("1738"),a=Object(r["a"])((function(t){t.setTime(t-t.getMilliseconds()-t.getSeconds()*i["d"]-t.getMinutes()*i["c"])}),(function(t,n){t.setTime(+t+n*i["b"])}),(function(t,n){return(n-t)/i["b"]}),(function(t){return t.getHours()}));n["a"]=a;var c=a.range},b5ea:function(t,n,e){"use strict";function r(t,n){t&&a.hasOwnProperty(t.type)&&a[t.type](t,n)}var i={Feature:function(t,n){r(t.geometry,n)},FeatureCollection:function(t,n){var e=t.features,i=-1,a=e.length;while(++i<a)r(e[i].geometry,n)}},a={Sphere:function(t,n){n.sphere()},Point:function(t,n){t=t.coordinates,n.point(t[0],t[1],t[2])},MultiPoint:function(t,n){var e=t.coordinates,r=-1,i=e.length;while(++r<i)t=e[r],n.point(t[0],t[1],t[2])},LineString:function(t,n){c(t.coordinates,n,0)},MultiLineString:function(t,n){var e=t.coordinates,r=-1,i=e.length;while(++r<i)c(e[r],n,0)},Polygon:function(t,n){u(t.coordinates,n)},MultiPolygon:function(t,n){var e=t.coordinates,r=-1,i=e.length;while(++r<i)u(e[r],n)},GeometryCollection:function(t,n){var e=t.geometries,i=-1,a=e.length;while(++i<a)r(e[i],n)}};function c(t,n,e){var r,i=-1,a=t.length-e;n.lineStart();while(++i<a)r=t[i],n.point(r[0],r[1],r[2]);n.lineEnd()}function u(t,n){var e=-1,r=t.length;n.polygonStart();while(++e<r)c(t[e],n,1);n.polygonEnd()}n["a"]=function(t,n){t&&i.hasOwnProperty(t.type)?i[t.type](t,n):r(t,n)}},b6f4:function(t,n,e){"use strict";var r=e("0dd4"),i=e("2388"),a=e("21e5"),c=e("092b");n["a"]=function(){var t=i["a"],n=!1,e=1,u=1,f=[0],o=c["a"],s=c["a"],h=c["a"],l=c["a"],d=c["a"];function b(t){return t.x0=t.y0=0,t.x1=e,t.y1=u,t.eachBefore(p),f=[0],n&&t.eachBefore(r["a"]),t}function p(n){var e=f[n.depth],r=n.x0+e,i=n.y0+e,a=n.x1-e,c=n.y1-e;a<r&&(r=a=(r+a)/2),c<i&&(i=c=(i+c)/2),n.x0=r,n.y0=i,n.x1=a,n.y1=c,n.children&&(e=f[n.depth+1]=o(n)/2,r+=d(n)-e,i+=s(n)-e,a-=h(n)-e,c-=l(n)-e,a<r&&(r=a=(r+a)/2),c<i&&(i=c=(i+c)/2),t(n,r,i,a,c))}return b.round=function(t){return arguments.length?(n=!!t,b):n},b.size=function(t){return arguments.length?(e=+t[0],u=+t[1],b):[e,u]},b.tile=function(n){return arguments.length?(t=Object(a["b"])(n),b):t},b.padding=function(t){return arguments.length?b.paddingInner(t).paddingOuter(t):b.paddingInner()},b.paddingInner=function(t){return arguments.length?(o="function"===typeof t?t:Object(c["b"])(+t),b):o},b.paddingOuter=function(t){return arguments.length?b.paddingTop(t).paddingRight(t).paddingBottom(t).paddingLeft(t):b.paddingTop()},b.paddingTop=function(t){return arguments.length?(s="function"===typeof t?t:Object(c["b"])(+t),b):s},b.paddingRight=function(t){return arguments.length?(h="function"===typeof t?t:Object(c["b"])(+t),b):h},b.paddingBottom=function(t){return arguments.length?(l="function"===typeof t?t:Object(c["b"])(+t),b):l},b.paddingLeft=function(t){return arguments.length?(d="function"===typeof t?t:Object(c["b"])(+t),b):d},b}},b82a:function(t,n,e){"use strict";function r(){this.reset()}n["a"]=function(){return new r},r.prototype={constructor:r,reset:function(){this.s=this.t=0},add:function(t){a(i,t,this.t),a(this,i.s,this.s),this.s?this.t+=i.t:this.s=i.t},valueOf:function(){return this.s}};var i=new r;function a(t,n,e){var r=t.s=n+e,i=r-n,a=r-i;t.t=n-a+(e-i)}},c39b:function(t,n,e){"use strict";var r=e("66d1");n["a"]=Object(r["a"])("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928")},c494:function(t,n,e){"use strict";var r=-.5,i=Math.sqrt(3)/2,a=1/Math.sqrt(12),c=3*(a/2+1);n["a"]={draw:function(t,n){var e=Math.sqrt(n/c),u=e/2,f=e*a,o=u,s=e*a+e,h=-o,l=s;t.moveTo(u,f),t.lineTo(o,s),t.lineTo(h,l),t.lineTo(r*u-i*f,i*u+r*f),t.lineTo(r*o-i*s,i*o+r*s),t.lineTo(r*h-i*l,i*h+r*l),t.lineTo(r*u+i*f,r*f-i*u),t.lineTo(r*o+i*s,r*s-i*o),t.lineTo(r*h+i*l,r*l-i*h),t.closePath()}}},c68f:function(t,n,e){"use strict";var r={value:function(){}};function i(){for(var t,n=0,e=arguments.length,r={};n<e;++n){if(!(t=arguments[n]+"")||t in r||/[\s.]/.test(t))throw new Error("illegal type: "+t);r[t]=[]}return new a(r)}function a(t){this._=t}function c(t,n){return t.trim().split(/^|\s+/).map((function(t){var e="",r=t.indexOf(".");if(r>=0&&(e=t.slice(r+1),t=t.slice(0,r)),t&&!n.hasOwnProperty(t))throw new Error("unknown type: "+t);return{type:t,name:e}}))}function u(t,n){for(var e,r=0,i=t.length;r<i;++r)if((e=t[r]).name===n)return e.value}function f(t,n,e){for(var i=0,a=t.length;i<a;++i)if(t[i].name===n){t[i]=r,t=t.slice(0,i).concat(t.slice(i+1));break}return null!=e&&t.push({name:n,value:e}),t}a.prototype=i.prototype={constructor:a,on:function(t,n){var e,r=this._,i=c(t+"",r),a=-1,o=i.length;if(!(arguments.length<2)){if(null!=n&&"function"!==typeof n)throw new Error("invalid callback: "+n);while(++a<o)if(e=(t=i[a]).type)r[e]=f(r[e],t.name,n);else if(null==n)for(e in r)r[e]=f(r[e],t.name,null);return this}while(++a<o)if((e=(t=i[a]).type)&&(e=u(r[e],t.name)))return e},copy:function(){var t={},n=this._;for(var e in n)t[e]=n[e].slice();return new a(t)},call:function(t,n){if((e=arguments.length-2)>0)for(var e,r,i=new Array(e),a=0;a<e;++a)i[a]=arguments[a+2];if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(r=this._[t],a=0,e=r.length;a<e;++a)r[a].value.apply(n,i)},apply:function(t,n,e){if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(var r=this._[t],i=0,a=r.length;i<a;++i)r[i].value.apply(n,e)}},n["a"]=i},c698:function(t,n,e){"use strict";n["a"]=function(t){return function(){return t}}},c84a:function(t,n,e){"use strict";function r(t,n,e,r,i){var a=t*t,c=a*t;return((1-3*t+3*a-c)*n+(4-6*a+3*c)*e+(1+3*t+3*a-3*c)*r+c*i)/6}e.d(n,"a",(function(){return r})),n["b"]=function(t){var n=t.length-1;return function(e){var i=e<=0?e=0:e>=1?(e=1,n-1):Math.floor(e*n),a=t[i],c=t[i+1],u=i>0?t[i-1]:2*a-c,f=i<n-1?t[i+2]:2*c-a;return r((e-i/n)*n,u,a,c,f)}}},cc3e:function(t,n,e){"use strict";var r=e("d0ae");function i(t){this._context=t}i.prototype={areaStart:r["a"],areaEnd:r["a"],lineStart:function(){this._point=0},lineEnd:function(){this._point&&this._context.closePath()},point:function(t,n){t=+t,n=+n,this._point?this._context.lineTo(t,n):(this._point=1,this._context.moveTo(t,n))}},n["a"]=function(t){return new i(t)}},ccc7:function(t,n,e){"use strict";e.d(n,"b",(function(){return k})),e.d(n,"a",(function(){return P}));var r=function(t,n){return t<n?-1:t>n?1:t>=n?0:NaN},i=function(t){return 1===t.length&&(t=a(t)),{left:function(n,e,r,i){null==r&&(r=0),null==i&&(i=n.length);while(r<i){var a=r+i>>>1;t(n[a],e)<0?r=a+1:i=a}return r},right:function(n,e,r,i){null==r&&(r=0),null==i&&(i=n.length);while(r<i){var a=r+i>>>1;t(n[a],e)>0?i=a:r=a+1}return r}}};function a(t){return function(n,e){return r(t(n),e)}}var c=i(r);c.right,c.left;var u=function(t,n){var e,r,i,a=t.length,c=-1;if(null==n){while(++c<a)if(null!=(e=t[c])&&e>=e){r=i=e;while(++c<a)null!=(e=t[c])&&(r>e&&(r=e),i<e&&(i=e))}}else while(++c<a)if(null!=(e=n(t[c],c,t))&&e>=e){r=i=e;while(++c<a)null!=(e=n(t[c],c,t))&&(r>e&&(r=e),i<e&&(i=e))}return[r,i]},f=Array.prototype,o=(f.slice,f.map,function(t,n,e){t=+t,n=+n,e=(i=arguments.length)<2?(n=t,t=0,1):i<3?1:+e;var r=-1,i=0|Math.max(0,Math.ceil((n-t)/e)),a=new Array(i);while(++r<i)a[r]=t+r*e;return a}),s=Math.sqrt(50),h=Math.sqrt(10),l=Math.sqrt(2);function d(t,n,e){var r=Math.abs(n-t)/Math.max(0,e),i=Math.pow(10,Math.floor(Math.log(r)/Math.LN10)),a=r/i;return a>=s?i*=10:a>=h?i*=5:a>=l&&(i*=2),n<t?-i:i}var b=function(t){return Math.ceil(Math.log(t.length)/Math.LN2)+1},p=function(t,n){var e,r,i=t.length,a=-1;if(null==n){while(++a<i)if(null!=(e=t[a])&&e>=e){r=e;while(++a<i)null!=(e=t[a])&&e>r&&(r=e)}}else while(++a<i)if(null!=(e=n(t[a],a,t))&&e>=e){r=e;while(++a<i)null!=(e=n(t[a],a,t))&&e>r&&(r=e)}return r};var _=Array.prototype,v=_.slice,g=function(t,n){return t-n},y=function(t){var n=0,e=t.length,r=t[e-1][1]*t[0][0]-t[e-1][0]*t[0][1];while(++n<e)r+=t[n-1][1]*t[n][0]-t[n-1][0]*t[n][1];return r},x=function(t){return function(){return t}},w=function(t,n){var e,r=-1,i=n.length;while(++r<i)if(e=m(t,n[r]))return e;return 0};function m(t,n){for(var e=n[0],r=n[1],i=-1,a=0,c=t.length,u=c-1;a<c;u=a++){var f=t[a],o=f[0],s=f[1],h=t[u],l=h[0],d=h[1];if(M(f,h,n))return 0;s>r!==d>r&&e<(l-o)*(r-s)/(d-s)+o&&(i=-i)}return i}function M(t,n,e){var r;return j(t,n,e)&&O(t[r=+(t[0]===n[0])],e[r],n[r])}function j(t,n,e){return(n[0]-t[0])*(e[1]-t[1])===(e[0]-t[0])*(n[1]-t[1])}function O(t,n,e){return t<=n&&n<=e||e<=n&&n<=t}var N=function(){},T=[[],[[[1,1.5],[.5,1]]],[[[1.5,1],[1,1.5]]],[[[1.5,1],[.5,1]]],[[[1,.5],[1.5,1]]],[[[1,1.5],[.5,1]],[[1,.5],[1.5,1]]],[[[1,.5],[1,1.5]]],[[[1,.5],[.5,1]]],[[[.5,1],[1,.5]]],[[[1,1.5],[1,.5]]],[[[.5,1],[1,.5]],[[1.5,1],[1,1.5]]],[[[1.5,1],[1,.5]]],[[[.5,1],[1.5,1]]],[[[1,1.5],[1.5,1]]],[[[.5,1],[1,1.5]]],[]],k=function(){var t=1,n=1,e=b,r=s;function i(t){var n=e(t);if(Array.isArray(n))n=n.slice().sort(g);else{var r=u(t),i=r[0],c=r[1];n=d(i,c,n),n=o(Math.floor(i/n)*n,Math.floor(c/n)*n,n)}return n.map((function(n){return a(t,n)}))}function a(t,n){var e=[],i=[];return c(t,n,(function(a){r(a,t,n),y(a)>0?e.push([a]):i.push(a)})),i.forEach((function(t){for(var n,r=0,i=e.length;r<i;++r)if(-1!==w((n=e[r])[0],t))return void n.push(t)})),{type:"MultiPolygon",value:n,coordinates:e}}function c(e,r,i){var a,c,u,o,s,h,l=new Array,d=new Array;a=c=-1,o=e[0]>=r,T[o<<1].forEach(b);while(++a<t-1)u=o,o=e[a+1]>=r,T[u|o<<1].forEach(b);T[o<<0].forEach(b);while(++c<n-1){a=-1,o=e[c*t+t]>=r,s=e[c*t]>=r,T[o<<1|s<<2].forEach(b);while(++a<t-1)u=o,o=e[c*t+t+a+1]>=r,h=s,s=e[c*t+a+1]>=r,T[u|o<<1|s<<2|h<<3].forEach(b);T[o|s<<3].forEach(b)}a=-1,s=e[c*t]>=r,T[s<<2].forEach(b);while(++a<t-1)h=s,s=e[c*t+a+1]>=r,T[s<<2|h<<3].forEach(b);function b(t){var n,e,r=[t[0][0]+a,t[0][1]+c],u=[t[1][0]+a,t[1][1]+c],o=f(r),s=f(u);(n=d[o])?(e=l[s])?(delete d[n.end],delete l[e.start],n===e?(n.ring.push(u),i(n.ring)):l[n.start]=d[e.end]={start:n.start,end:e.end,ring:n.ring.concat(e.ring)}):(delete d[n.end],n.ring.push(u),d[n.end=s]=n):(n=l[s])?(e=d[o])?(delete l[n.start],delete d[e.end],n===e?(n.ring.push(u),i(n.ring)):l[e.start]=d[n.end]={start:e.start,end:n.end,ring:e.ring.concat(n.ring)}):(delete l[n.start],n.ring.unshift(r),l[n.start=o]=n):l[o]=d[s]={start:o,end:s,ring:[r,u]}}T[s<<3].forEach(b)}function f(n){return 2*n[0]+n[1]*(t+1)*4}function s(e,r,i){e.forEach((function(e){var a,c=e[0],u=e[1],f=0|c,o=0|u,s=r[o*t+f];c>0&&c<t&&f===c&&(a=r[o*t+f-1],e[0]=c+(i-a)/(s-a)-.5),u>0&&u<n&&o===u&&(a=r[(o-1)*t+f],e[1]=u+(i-a)/(s-a)-.5)}))}return i.contour=a,i.size=function(e){if(!arguments.length)return[t,n];var r=Math.ceil(e[0]),a=Math.ceil(e[1]);if(!(r>0)||!(a>0))throw new Error("invalid size");return t=r,n=a,i},i.thresholds=function(t){return arguments.length?(e="function"===typeof t?t:Array.isArray(t)?x(v.call(t)):x(t),i):e},i.smooth=function(t){return arguments.length?(r=t?s:N,i):r===s},i};function A(t,n,e){for(var r=t.width,i=t.height,a=1+(e<<1),c=0;c<i;++c)for(var u=0,f=0;u<r+e;++u)u<r&&(f+=t.data[u+c*r]),u>=e&&(u>=a&&(f-=t.data[u-a+c*r]),n.data[u-e+c*r]=f/Math.min(u+1,r-1+a-u,a))}function C(t,n,e){for(var r=t.width,i=t.height,a=1+(e<<1),c=0;c<r;++c)for(var u=0,f=0;u<i+e;++u)u<i&&(f+=t.data[c+u*r]),u>=e&&(u>=a&&(f-=t.data[c+(u-a)*r]),n.data[c+(u-e)*r]=f/Math.min(u+1,i-1+a-u,a))}function E(t){return t[0]}function S(t){return t[1]}function U(){return 1}var P=function(){var t=E,n=S,e=U,r=960,i=500,a=20,c=2,u=3*a,f=r+2*u>>c,s=i+2*u>>c,h=x(20);function l(r){var i=new Float32Array(f*s),l=new Float32Array(f*s);r.forEach((function(r,a,o){var h=+t(r,a,o)+u>>c,l=+n(r,a,o)+u>>c,d=+e(r,a,o);h>=0&&h<f&&l>=0&&l<s&&(i[h+l*f]+=d)})),A({width:f,height:s,data:i},{width:f,height:s,data:l},a>>c),C({width:f,height:s,data:l},{width:f,height:s,data:i},a>>c),A({width:f,height:s,data:i},{width:f,height:s,data:l},a>>c),C({width:f,height:s,data:l},{width:f,height:s,data:i},a>>c),A({width:f,height:s,data:i},{width:f,height:s,data:l},a>>c),C({width:f,height:s,data:l},{width:f,height:s,data:i},a>>c);var _=h(i);if(!Array.isArray(_)){var v=p(i);_=d(0,v,_),_=o(0,Math.floor(v/_)*_,_),_.shift()}return k().thresholds(_).size([f,s])(i).map(b)}function b(t){return t.value*=Math.pow(2,-2*c),t.coordinates.forEach(_),t}function _(t){t.forEach(g)}function g(t){t.forEach(y)}function y(t){t[0]=t[0]*Math.pow(2,c)-u,t[1]=t[1]*Math.pow(2,c)-u}function w(){return u=3*a,f=r+2*u>>c,s=i+2*u>>c,l}return l.x=function(n){return arguments.length?(t="function"===typeof n?n:x(+n),l):t},l.y=function(t){return arguments.length?(n="function"===typeof t?t:x(+t),l):n},l.weight=function(t){return arguments.length?(e="function"===typeof t?t:x(+t),l):e},l.size=function(t){if(!arguments.length)return[r,i];var n=Math.ceil(t[0]),e=Math.ceil(t[1]);if(!(n>=0)&&!(n>=0))throw new Error("invalid size");return r=n,i=e,w()},l.cellSize=function(t){if(!arguments.length)return 1<<c;if(!((t=+t)>=1))throw new Error("invalid cell size");return c=Math.floor(Math.log(t)/Math.LN2),w()},l.thresholds=function(t){return arguments.length?(h="function"===typeof t?t:Array.isArray(t)?x(v.call(t)):x(t),l):h},l.bandwidth=function(t){if(!arguments.length)return Math.sqrt(a*(a+1));if(!((t=+t)>=0))throw new Error("invalid bandwidth");return a=Math.round((Math.sqrt(4*t*t+1)-1)/2),w()},l}},ce24:function(t,n,e){"use strict";e.d(n,"a",(function(){return T})),e.d(n,"l",(function(){return A})),e.d(n,"g",(function(){return Q})),e.d(n,"i",(function(){return J})),e.d(n,"j",(function(){return ot})),e.d(n,"w",(function(){return dt})),e.d(n,"k",(function(){return N})),e.d(n,"h",(function(){return O})),e.d(n,"m",(function(){return gt})),e.d(n,"v",(function(){return yt})),e.d(n,"n",(function(){return xt})),e.d(n,"o",(function(){return wt})),e.d(n,"x",(function(){return mt})),e.d(n,"y",(function(){return Ft})),e.d(n,"z",(function(){return $t})),e.d(n,"p",(function(){return Qt})),e.d(n,"q",(function(){return Kt})),e.d(n,"r",(function(){return nn})),e.d(n,"t",(function(){return en})),e.d(n,"u",(function(){return tn})),e.d(n,"s",(function(){return rn})),e.d(n,"b",(function(){return cn})),e.d(n,"c",(function(){return un})),e.d(n,"d",(function(){return on})),e.d(n,"e",(function(){return sn})),e.d(n,"f",(function(){return fn})),e.d(n,"A",(function(){return $}));var r=function(t,n){return t<n?-1:t>n?1:t>=n?0:NaN},i=function(t){return 1===t.length&&(t=a(t)),{left:function(n,e,r,i){null==r&&(r=0),null==i&&(i=n.length);while(r<i){var a=r+i>>>1;t(n[a],e)<0?r=a+1:i=a}return r},right:function(n,e,r,i){null==r&&(r=0),null==i&&(i=n.length);while(r<i){var a=r+i>>>1;t(n[a],e)>0?i=a:r=a+1}return r}}};function a(t){return function(n,e){return r(t(n),e)}}var c=i(r),u=c.right,f=(c.left,u);var o=function(t){return null===t?NaN:+t},s=Array.prototype,h=(s.slice,s.map,function(t,n,e){t=+t,n=+n,e=(i=arguments.length)<2?(n=t,t=0,1):i<3?1:+e;var r=-1,i=0|Math.max(0,Math.ceil((n-t)/e)),a=new Array(i);while(++r<i)a[r]=t+r*e;return a}),l=Math.sqrt(50),d=Math.sqrt(10),b=Math.sqrt(2),p=function(t,n,e){var r,i,a,c,u=-1;if(n=+n,t=+t,e=+e,t===n&&e>0)return[t];if((r=n<t)&&(i=t,t=n,n=i),0===(c=_(t,n,e))||!isFinite(c))return[];if(c>0){t=Math.ceil(t/c),n=Math.floor(n/c),a=new Array(i=Math.ceil(n-t+1));while(++u<i)a[u]=(t+u)*c}else{t=Math.floor(t*c),n=Math.ceil(n*c),a=new Array(i=Math.ceil(t-n+1));while(++u<i)a[u]=(t-u)/c}return r&&a.reverse(),a};function _(t,n,e){var r=(n-t)/Math.max(0,e),i=Math.floor(Math.log(r)/Math.LN10),a=r/Math.pow(10,i);return i>=0?(a>=l?10:a>=d?5:a>=b?2:1)*Math.pow(10,i):-Math.pow(10,-i)/(a>=l?10:a>=d?5:a>=b?2:1)}function v(t,n,e){var r=Math.abs(n-t)/Math.max(0,e),i=Math.pow(10,Math.floor(Math.log(r)/Math.LN10)),a=r/i;return a>=l?i*=10:a>=d?i*=5:a>=b&&(i*=2),n<t?-i:i}var g=function(t,n,e){if(null==e&&(e=o),r=t.length){if((n=+n)<=0||r<2)return+e(t[0],0,t);if(n>=1)return+e(t[r-1],r-1,t);var r,i=(r-1)*n,a=Math.floor(i),c=+e(t[a],a,t),u=+e(t[a+1],a+1,t);return c+(u-c)*(i-a)}};function y(t,n){switch(arguments.length){case 0:break;case 1:this.range(t);break;default:this.range(n).domain(t);break}return this}function x(t,n){switch(arguments.length){case 0:break;case 1:this.interpolator(t);break;default:this.interpolator(n).domain(t);break}return this}var w=e("6f04"),m=Array.prototype,M=m.map,j=m.slice,O={name:"implicit"};function N(){var t=Object(w["c"])(),n=[],e=[],r=O;function i(i){var a=i+"",c=t.get(a);if(!c){if(r!==O)return r;t.set(a,c=n.push(i))}return e[(c-1)%e.length]}return i.domain=function(e){if(!arguments.length)return n.slice();n=[],t=Object(w["c"])();var r,a,c=-1,u=e.length;while(++c<u)t.has(a=(r=e[c])+"")||t.set(a,n.push(r));return i},i.range=function(t){return arguments.length?(e=j.call(t),i):e.slice()},i.unknown=function(t){return arguments.length?(r=t,i):r},i.copy=function(){return N(n,e).unknown(r)},y.apply(i,arguments),i}function T(){var t,n,e=N().unknown(void 0),r=e.domain,i=e.range,a=[0,1],c=!1,u=0,f=0,o=.5;function s(){var e=r().length,s=a[1]<a[0],l=a[s-0],d=a[1-s];t=(d-l)/Math.max(1,e-u+2*f),c&&(t=Math.floor(t)),l+=(d-l-t*(e-u))*o,n=t*(1-u),c&&(l=Math.round(l),n=Math.round(n));var b=h(e).map((function(n){return l+t*n}));return i(s?b.reverse():b)}return delete e.unknown,e.domain=function(t){return arguments.length?(r(t),s()):r()},e.range=function(t){return arguments.length?(a=[+t[0],+t[1]],s()):a.slice()},e.rangeRound=function(t){return a=[+t[0],+t[1]],c=!0,s()},e.bandwidth=function(){return n},e.step=function(){return t},e.round=function(t){return arguments.length?(c=!!t,s()):c},e.padding=function(t){return arguments.length?(u=Math.min(1,f=+t),s()):u},e.paddingInner=function(t){return arguments.length?(u=Math.min(1,t),s()):u},e.paddingOuter=function(t){return arguments.length?(f=+t,s()):f},e.align=function(t){return arguments.length?(o=Math.max(0,Math.min(1,t)),s()):o},e.copy=function(){return T(r(),a).round(c).paddingInner(u).paddingOuter(f).align(o)},y.apply(s(),arguments)}function k(t){var n=t.copy;return t.padding=t.paddingOuter,delete t.paddingInner,delete t.paddingOuter,t.copy=function(){return k(n())},t}function A(){return k(T.apply(null,arguments).paddingInner(1))}var C=e("ea1d"),E=e("e317"),S=e("5857"),U=function(t){return function(){return t}},P=function(t){return+t},D=[0,1];function L(t){return t}function q(t,n){return(n-=t=+t)?function(e){return(e-t)/n}:U(isNaN(n)?NaN:.5)}function R(t){var n,e=t[0],r=t[t.length-1];return e>r&&(n=e,e=r,r=n),function(t){return Math.max(e,Math.min(r,t))}}function z(t,n,e){var r=t[0],i=t[1],a=n[0],c=n[1];return i<r?(r=q(i,r),a=e(c,a)):(r=q(r,i),a=e(a,c)),function(t){return a(r(t))}}function Y(t,n,e){var r=Math.min(t.length,n.length)-1,i=new Array(r),a=new Array(r),c=-1;t[r]<t[0]&&(t=t.slice().reverse(),n=n.slice().reverse());while(++c<r)i[c]=q(t[c],t[c+1]),a[c]=e(n[c],n[c+1]);return function(n){var e=f(t,n,1,r)-1;return a[e](i[e](n))}}function B(t,n){return n.domain(t.domain()).range(t.range()).interpolate(t.interpolate()).clamp(t.clamp()).unknown(t.unknown())}function F(){var t,n,e,r,i,a,c=D,u=D,f=C["a"],o=L;function s(){return r=Math.min(c.length,u.length)>2?Y:z,i=a=null,h}function h(n){return isNaN(n=+n)?e:(i||(i=r(c.map(t),u,f)))(t(o(n)))}return h.invert=function(e){return o(n((a||(a=r(u,c.map(t),E["a"])))(e)))},h.domain=function(t){return arguments.length?(c=M.call(t,P),o===L||(o=R(c)),s()):c.slice()},h.range=function(t){return arguments.length?(u=j.call(t),s()):u.slice()},h.rangeRound=function(t){return u=j.call(t),f=S["a"],s()},h.clamp=function(t){return arguments.length?(o=t?R(c):L,h):o!==L},h.interpolate=function(t){return arguments.length?(f=t,s()):f},h.unknown=function(t){return arguments.length?(e=t,h):e},function(e,r){return t=e,n=r,s()}}function H(t,n){return F()(t,n)}var I=e("09b8"),G=e("d933"),X=e("1231"),V=e("d989"),Z=e("dad1"),$=function(t,n,e,r){var i,a=v(t,n,e);switch(r=Object(I["b"])(null==r?",f":r),r.type){case"s":var c=Math.max(Math.abs(t),Math.abs(n));return null!=r.precision||isNaN(i=Object(G["a"])(a,c))||(r.precision=i),Object(X["c"])(r,c);case"":case"e":case"g":case"p":case"r":null!=r.precision||isNaN(i=Object(V["a"])(a,Math.max(Math.abs(t),Math.abs(n))))||(r.precision=i-("e"===r.type));break;case"f":case"%":null!=r.precision||isNaN(i=Object(Z["a"])(a))||(r.precision=i-2*("%"===r.type));break}return Object(X["b"])(r)};function W(t){var n=t.domain;return t.ticks=function(t){var e=n();return p(e[0],e[e.length-1],null==t?10:t)},t.tickFormat=function(t,e){var r=n();return $(r[0],r[r.length-1],null==t?10:t,e)},t.nice=function(e){null==e&&(e=10);var r,i=n(),a=0,c=i.length-1,u=i[a],f=i[c];return f<u&&(r=u,u=f,f=r,r=a,a=c,c=r),r=_(u,f,e),r>0?(u=Math.floor(u/r)*r,f=Math.ceil(f/r)*r,r=_(u,f,e)):r<0&&(u=Math.ceil(u*r)/r,f=Math.floor(f*r)/r,r=_(u,f,e)),r>0?(i[a]=Math.floor(u/r)*r,i[c]=Math.ceil(f/r)*r,n(i)):r<0&&(i[a]=Math.ceil(u*r)/r,i[c]=Math.floor(f*r)/r,n(i)),t},t}function J(){var t=H(L,L);return t.copy=function(){return B(t,J())},y.apply(t,arguments),W(t)}function Q(t){var n;function e(t){return isNaN(t=+t)?n:t}return e.invert=e,e.domain=e.range=function(n){return arguments.length?(t=M.call(n,P),e):t.slice()},e.unknown=function(t){return arguments.length?(n=t,e):n},e.copy=function(){return Q(t).unknown(n)},t=arguments.length?M.call(t,P):[0,1],W(e)}var K=function(t,n){t=t.slice();var e,r=0,i=t.length-1,a=t[r],c=t[i];return c<a&&(e=r,r=i,i=e,e=a,a=c,c=e),t[r]=n.floor(a),t[i]=n.ceil(c),t};function tt(t){return Math.log(t)}function nt(t){return Math.exp(t)}function et(t){return-Math.log(-t)}function rt(t){return-Math.exp(-t)}function it(t){return isFinite(t)?+("1e"+t):t<0?0:t}function at(t){return 10===t?it:t===Math.E?Math.exp:function(n){return Math.pow(t,n)}}function ct(t){return t===Math.E?Math.log:10===t&&Math.log10||2===t&&Math.log2||(t=Math.log(t),function(n){return Math.log(n)/t})}function ut(t){return function(n){return-t(-n)}}function ft(t){var n,e,r=t(tt,nt),i=r.domain,a=10;function c(){return n=ct(a),e=at(a),i()[0]<0?(n=ut(n),e=ut(e),t(et,rt)):t(tt,nt),r}return r.base=function(t){return arguments.length?(a=+t,c()):a},r.domain=function(t){return arguments.length?(i(t),c()):i()},r.ticks=function(t){var r,c=i(),u=c[0],f=c[c.length-1];(r=f<u)&&(l=u,u=f,f=l);var o,s,h,l=n(u),d=n(f),b=null==t?10:+t,_=[];if(!(a%1)&&d-l<b){if(l=Math.round(l)-1,d=Math.round(d)+1,u>0){for(;l<d;++l)for(s=1,o=e(l);s<a;++s)if(h=o*s,!(h<u)){if(h>f)break;_.push(h)}}else for(;l<d;++l)for(s=a-1,o=e(l);s>=1;--s)if(h=o*s,!(h<u)){if(h>f)break;_.push(h)}}else _=p(l,d,Math.min(d-l,b)).map(e);return r?_.reverse():_},r.tickFormat=function(t,i){if(null==i&&(i=10===a?".0e":","),"function"!==typeof i&&(i=Object(X["b"])(i)),t===1/0)return i;null==t&&(t=10);var c=Math.max(1,a*t/r.ticks().length);return function(t){var r=t/e(Math.round(n(t)));return r*a<a-.5&&(r*=a),r<=c?i(t):""}},r.nice=function(){return i(K(i(),{floor:function(t){return e(Math.floor(n(t)))},ceil:function(t){return e(Math.ceil(n(t)))}}))},r}function ot(){var t=ft(F()).domain([1,10]);return t.copy=function(){return B(t,ot()).base(t.base())},y.apply(t,arguments),t}function st(t){return function(n){return Math.sign(n)*Math.log1p(Math.abs(n/t))}}function ht(t){return function(n){return Math.sign(n)*Math.expm1(Math.abs(n))*t}}function lt(t){var n=1,e=t(st(n),ht(n));return e.constant=function(e){return arguments.length?t(st(n=+e),ht(n)):n},W(e)}function dt(){var t=lt(F());return t.copy=function(){return B(t,dt()).constant(t.constant())},y.apply(t,arguments)}function bt(t){return function(n){return n<0?-Math.pow(-n,t):Math.pow(n,t)}}function pt(t){return t<0?-Math.sqrt(-t):Math.sqrt(t)}function _t(t){return t<0?-t*t:t*t}function vt(t){var n=t(L,L),e=1;function r(){return 1===e?t(L,L):.5===e?t(pt,_t):t(bt(e),bt(1/e))}return n.exponent=function(t){return arguments.length?(e=+t,r()):e},W(n)}function gt(){var t=vt(F());return t.copy=function(){return B(t,gt()).exponent(t.exponent())},y.apply(t,arguments),t}function yt(){return gt.apply(null,arguments).exponent(.5)}function xt(){var t,n=[],e=[],i=[];function a(){var t=0,r=Math.max(1,e.length);i=new Array(r-1);while(++t<r)i[t-1]=g(n,t/r);return c}function c(n){return isNaN(n=+n)?t:e[f(i,n)]}return c.invertExtent=function(t){var r=e.indexOf(t);return r<0?[NaN,NaN]:[r>0?i[r-1]:n[0],r<i.length?i[r]:n[n.length-1]]},c.domain=function(t){if(!arguments.length)return n.slice();n=[];for(var e,i=0,c=t.length;i<c;++i)e=t[i],null==e||isNaN(e=+e)||n.push(e);return n.sort(r),a()},c.range=function(t){return arguments.length?(e=j.call(t),a()):e.slice()},c.unknown=function(n){return arguments.length?(t=n,c):t},c.quantiles=function(){return i.slice()},c.copy=function(){return xt().domain(n).range(e).unknown(t)},y.apply(c,arguments)}function wt(){var t,n=0,e=1,r=1,i=[.5],a=[0,1];function c(n){return n<=n?a[f(i,n,0,r)]:t}function u(){var t=-1;i=new Array(r);while(++t<r)i[t]=((t+1)*e-(t-r)*n)/(r+1);return c}return c.domain=function(t){return arguments.length?(n=+t[0],e=+t[1],u()):[n,e]},c.range=function(t){return arguments.length?(r=(a=j.call(t)).length-1,u()):a.slice()},c.invertExtent=function(t){var c=a.indexOf(t);return c<0?[NaN,NaN]:c<1?[n,i[0]]:c>=r?[i[r-1],e]:[i[c-1],i[c]]},c.unknown=function(n){return arguments.length?(t=n,c):c},c.thresholds=function(){return i.slice()},c.copy=function(){return wt().domain([n,e]).range(a).unknown(t)},y.apply(W(c),arguments)}function mt(){var t,n=[.5],e=[0,1],r=1;function i(i){return i<=i?e[f(n,i,0,r)]:t}return i.domain=function(t){return arguments.length?(n=j.call(t),r=Math.min(n.length,e.length-1),i):n.slice()},i.range=function(t){return arguments.length?(e=j.call(t),r=Math.min(n.length,e.length-1),i):e.slice()},i.invertExtent=function(t){var r=e.indexOf(t);return[n[r-1],n[r]]},i.unknown=function(n){return arguments.length?(t=n,i):t},i.copy=function(){return mt().domain(n).range(e).unknown(t)},y.apply(i,arguments)}var Mt=e("a15a"),jt=e("9603"),Ot=e("b14c"),Nt=e("742c"),Tt=e("b3c3"),kt=e("2c38"),At=e("5edf"),Ct=e("1809"),Et=e("4c23"),St=1e3,Ut=60*St,Pt=60*Ut,Dt=24*Pt,Lt=7*Dt,qt=30*Dt,Rt=365*Dt;function zt(t){return new Date(t)}function Yt(t){return t instanceof Date?+t:+new Date(+t)}function Bt(t,n,e,r,a,c,u,f,o){var s=H(L,L),h=s.invert,l=s.domain,d=o(".%L"),b=o(":%S"),p=o("%I:%M"),_=o("%I %p"),g=o("%a %d"),y=o("%b %d"),x=o("%B"),w=o("%Y"),m=[[u,1,St],[u,5,5*St],[u,15,15*St],[u,30,30*St],[c,1,Ut],[c,5,5*Ut],[c,15,15*Ut],[c,30,30*Ut],[a,1,Pt],[a,3,3*Pt],[a,6,6*Pt],[a,12,12*Pt],[r,1,Dt],[r,2,2*Dt],[e,1,Lt],[n,1,qt],[n,3,3*qt],[t,1,Rt]];function j(i){return(u(i)<i?d:c(i)<i?b:a(i)<i?p:r(i)<i?_:n(i)<i?e(i)<i?g:y:t(i)<i?x:w)(i)}function O(n,e,r,a){if(null==n&&(n=10),"number"===typeof n){var c=Math.abs(r-e)/n,u=i((function(t){return t[2]})).right(m,c);u===m.length?(a=v(e/Rt,r/Rt,n),n=t):u?(u=m[c/m[u-1][2]<m[u][2]/c?u-1:u],a=u[1],n=u[0]):(a=Math.max(v(e,r,n),1),n=f)}return null==a?n:n.every(a)}return s.invert=function(t){return new Date(h(t))},s.domain=function(t){return arguments.length?l(M.call(t,Yt)):l().map(zt)},s.ticks=function(t,n){var e,r=l(),i=r[0],a=r[r.length-1],c=a<i;return c&&(e=i,i=a,a=e),e=O(t,i,a,n),e=e?e.range(i,a+1):[],c?e.reverse():e},s.tickFormat=function(t,n){return null==n?j:o(n)},s.nice=function(t,n){var e=l();return(t=O(t,e[0],e[e.length-1],n))?l(K(e,t)):s},s.copy=function(){return B(s,Bt(t,n,e,r,a,c,u,f,o))},s}var Ft=function(){return y.apply(Bt(Mt["a"],jt["a"],Ot["g"],Nt["b"],Tt["a"],kt["a"],At["a"],Ct["a"],Et["b"]).domain([new Date(2e3,0,1),new Date(2e3,0,2)]),arguments)},Ht=e("77ae"),It=e("55f8"),Gt=e("2739"),Xt=e("6eb2"),Vt=e("f623"),Zt=e("f8ee"),$t=function(){return y.apply(Bt(Ht["a"],It["a"],Gt["g"],Xt["a"],Vt["a"],Zt["a"],At["a"],Ct["a"],Et["d"]).domain([Date.UTC(2e3,0,1),Date.UTC(2e3,0,2)]),arguments)};function Wt(){var t,n,e,r,i,a=0,c=1,u=L,f=!1;function o(n){return isNaN(n=+n)?i:u(0===e?.5:(n=(r(n)-t)*e,f?Math.max(0,Math.min(1,n)):n))}return o.domain=function(i){return arguments.length?(t=r(a=+i[0]),n=r(c=+i[1]),e=t===n?0:1/(n-t),o):[a,c]},o.clamp=function(t){return arguments.length?(f=!!t,o):f},o.interpolator=function(t){return arguments.length?(u=t,o):u},o.unknown=function(t){return arguments.length?(i=t,o):i},function(i){return r=i,t=i(a),n=i(c),e=t===n?0:1/(n-t),o}}function Jt(t,n){return n.domain(t.domain()).interpolator(t.interpolator()).clamp(t.clamp()).unknown(t.unknown())}function Qt(){var t=W(Wt()(L));return t.copy=function(){return Jt(t,Qt())},x.apply(t,arguments)}function Kt(){var t=ft(Wt()).domain([1,10]);return t.copy=function(){return Jt(t,Kt()).base(t.base())},x.apply(t,arguments)}function tn(){var t=lt(Wt());return t.copy=function(){return Jt(t,tn()).constant(t.constant())},x.apply(t,arguments)}function nn(){var t=vt(Wt());return t.copy=function(){return Jt(t,nn()).exponent(t.exponent())},x.apply(t,arguments)}function en(){return nn.apply(null,arguments).exponent(.5)}function rn(){var t=[],n=L;function e(e){if(!isNaN(e=+e))return n((f(t,e)-1)/(t.length-1))}return e.domain=function(n){if(!arguments.length)return t.slice();t=[];for(var i,a=0,c=n.length;a<c;++a)i=n[a],null==i||isNaN(i=+i)||t.push(i);return t.sort(r),e},e.interpolator=function(t){return arguments.length?(n=t,e):n},e.copy=function(){return rn(n).domain(t)},x.apply(e,arguments)}function an(){var t,n,e,r,i,a,c,u=0,f=.5,o=1,s=L,h=!1;function l(t){return isNaN(t=+t)?c:(t=.5+((t=+a(t))-n)*(t<n?r:i),s(h?Math.max(0,Math.min(1,t)):t))}return l.domain=function(c){return arguments.length?(t=a(u=+c[0]),n=a(f=+c[1]),e=a(o=+c[2]),r=t===n?0:.5/(n-t),i=n===e?0:.5/(e-n),l):[u,f,o]},l.clamp=function(t){return arguments.length?(h=!!t,l):h},l.interpolator=function(t){return arguments.length?(s=t,l):s},l.unknown=function(t){return arguments.length?(c=t,l):c},function(c){return a=c,t=c(u),n=c(f),e=c(o),r=t===n?0:.5/(n-t),i=n===e?0:.5/(e-n),l}}function cn(){var t=W(an()(L));return t.copy=function(){return Jt(t,cn())},x.apply(t,arguments)}function un(){var t=ft(an()).domain([.1,1,10]);return t.copy=function(){return Jt(t,un()).base(t.base())},x.apply(t,arguments)}function fn(){var t=lt(an());return t.copy=function(){return Jt(t,fn()).constant(t.constant())},x.apply(t,arguments)}function on(){var t=vt(an());return t.copy=function(){return Jt(t,on()).exponent(t.exponent())},x.apply(t,arguments)}function sn(){return on.apply(null,arguments).exponent(.5)}},ce75:function(t,n,e){"use strict";var r=Math.SQRT2,i=2,a=4,c=1e-12;function u(t){return((t=Math.exp(t))+1/t)/2}function f(t){return((t=Math.exp(t))-1/t)/2}function o(t){return((t=Math.exp(2*t))-1)/(t+1)}n["a"]=function(t,n){var e,s,h=t[0],l=t[1],d=t[2],b=n[0],p=n[1],_=n[2],v=b-h,g=p-l,y=v*v+g*g;if(y<c)s=Math.log(_/d)/r,e=function(t){return[h+t*v,l+t*g,d*Math.exp(r*t*s)]};else{var x=Math.sqrt(y),w=(_*_-d*d+a*y)/(2*d*i*x),m=(_*_-d*d-a*y)/(2*_*i*x),M=Math.log(Math.sqrt(w*w+1)-w),j=Math.log(Math.sqrt(m*m+1)-m);s=(j-M)/r,e=function(t){var n=t*s,e=u(M),a=d/(i*x)*(e*o(r*n+M)-f(M));return[h+a*v,l+a*g,d*e/u(r*n+M)]}}return e.duration=1e3*s,e}},ce97:function(t,n,e){"use strict";function r(t,n){return t.parent===n.parent?1:2}function i(t){return t.reduce(a,0)/t.length}function a(t,n){return t+n.x}function c(t){return 1+t.reduce(u,0)}function u(t,n){return Math.max(t,n.y)}function f(t){var n;while(n=t.children)t=n[0];return t}function o(t){var n;while(n=t.children)t=n[n.length-1];return t}n["a"]=function(){var t=r,n=1,e=1,a=!1;function u(r){var u,s=0;r.eachAfter((function(n){var e=n.children;e?(n.x=i(e),n.y=c(e)):(n.x=u?s+=t(n,u):0,n.y=0,u=n)}));var h=f(r),l=o(r),d=h.x-t(h,l)/2,b=l.x+t(l,h)/2;return r.eachAfter(a?function(t){t.x=(t.x-r.x)*n,t.y=(r.y-t.y)*e}:function(t){t.x=(t.x-d)/(b-d)*n,t.y=(1-(r.y?t.y/r.y:1))*e})}return u.separation=function(n){return arguments.length?(t=n,u):t},u.size=function(t){return arguments.length?(a=!1,n=+t[0],e=+t[1],u):a?null:[n,e]},u.nodeSize=function(t){return arguments.length?(a=!0,n=+t[0],e=+t[1],u):a?[n,e]:null},u}},cfa1:function(t,n,e){"use strict";e.d(n,"a",(function(){return w}));var r=function(t){var n=+this._x.call(null,t),e=+this._y.call(null,t);return i(this.cover(n,e),n,e,t)};function i(t,n,e,r){if(isNaN(n)||isNaN(e))return t;var i,a,c,u,f,o,s,h,l,d=t._root,b={data:r},p=t._x0,_=t._y0,v=t._x1,g=t._y1;if(!d)return t._root=b,t;while(d.length)if((o=n>=(a=(p+v)/2))?p=a:v=a,(s=e>=(c=(_+g)/2))?_=c:g=c,i=d,!(d=d[h=s<<1|o]))return i[h]=b,t;if(u=+t._x.call(null,d.data),f=+t._y.call(null,d.data),n===u&&e===f)return b.next=d,i?i[h]=b:t._root=b,t;do{i=i?i[h]=new Array(4):t._root=new Array(4),(o=n>=(a=(p+v)/2))?p=a:v=a,(s=e>=(c=(_+g)/2))?_=c:g=c}while((h=s<<1|o)===(l=(f>=c)<<1|u>=a));return i[l]=d,i[h]=b,t}function a(t){var n,e,r,a,c=t.length,u=new Array(c),f=new Array(c),o=1/0,s=1/0,h=-1/0,l=-1/0;for(e=0;e<c;++e)isNaN(r=+this._x.call(null,n=t[e]))||isNaN(a=+this._y.call(null,n))||(u[e]=r,f[e]=a,r<o&&(o=r),r>h&&(h=r),a<s&&(s=a),a>l&&(l=a));if(o>h||s>l)return this;for(this.cover(o,s).cover(h,l),e=0;e<c;++e)i(this,u[e],f[e],t[e]);return this}var c=function(t,n){if(isNaN(t=+t)||isNaN(n=+n))return this;var e=this._x0,r=this._y0,i=this._x1,a=this._y1;if(isNaN(e))i=(e=Math.floor(t))+1,a=(r=Math.floor(n))+1;else{var c,u,f=i-e,o=this._root;while(e>t||t>=i||r>n||n>=a)switch(u=(n<r)<<1|t<e,c=new Array(4),c[u]=o,o=c,f*=2,u){case 0:i=e+f,a=r+f;break;case 1:e=i-f,a=r+f;break;case 2:i=e+f,r=a-f;break;case 3:e=i-f,r=a-f;break}this._root&&this._root.length&&(this._root=o)}return this._x0=e,this._y0=r,this._x1=i,this._y1=a,this},u=function(){var t=[];return this.visit((function(n){if(!n.length)do{t.push(n.data)}while(n=n.next)})),t},f=function(t){return arguments.length?this.cover(+t[0][0],+t[0][1]).cover(+t[1][0],+t[1][1]):isNaN(this._x0)?void 0:[[this._x0,this._y0],[this._x1,this._y1]]},o=function(t,n,e,r,i){this.node=t,this.x0=n,this.y0=e,this.x1=r,this.y1=i},s=function(t,n,e){var r,i,a,c,u,f,s,h=this._x0,l=this._y0,d=this._x1,b=this._y1,p=[],_=this._root;_&&p.push(new o(_,h,l,d,b)),null==e?e=1/0:(h=t-e,l=n-e,d=t+e,b=n+e,e*=e);while(f=p.pop())if(!(!(_=f.node)||(i=f.x0)>d||(a=f.y0)>b||(c=f.x1)<h||(u=f.y1)<l))if(_.length){var v=(i+c)/2,g=(a+u)/2;p.push(new o(_[3],v,g,c,u),new o(_[2],i,g,v,u),new o(_[1],v,a,c,g),new o(_[0],i,a,v,g)),(s=(n>=g)<<1|t>=v)&&(f=p[p.length-1],p[p.length-1]=p[p.length-1-s],p[p.length-1-s]=f)}else{var y=t-+this._x.call(null,_.data),x=n-+this._y.call(null,_.data),w=y*y+x*x;if(w<e){var m=Math.sqrt(e=w);h=t-m,l=n-m,d=t+m,b=n+m,r=_.data}}return r},h=function(t){if(isNaN(a=+this._x.call(null,t))||isNaN(c=+this._y.call(null,t)))return this;var n,e,r,i,a,c,u,f,o,s,h,l,d=this._root,b=this._x0,p=this._y0,_=this._x1,v=this._y1;if(!d)return this;if(d.length)while(1){if((o=a>=(u=(b+_)/2))?b=u:_=u,(s=c>=(f=(p+v)/2))?p=f:v=f,n=d,!(d=d[h=s<<1|o]))return this;if(!d.length)break;(n[h+1&3]||n[h+2&3]||n[h+3&3])&&(e=n,l=h)}while(d.data!==t)if(r=d,!(d=d.next))return this;return(i=d.next)&&delete d.next,r?(i?r.next=i:delete r.next,this):n?(i?n[h]=i:delete n[h],(d=n[0]||n[1]||n[2]||n[3])&&d===(n[3]||n[2]||n[1]||n[0])&&!d.length&&(e?e[l]=d:this._root=d),this):(this._root=i,this)};function l(t){for(var n=0,e=t.length;n<e;++n)this.remove(t[n]);return this}var d=function(){return this._root},b=function(){var t=0;return this.visit((function(n){if(!n.length)do{++t}while(n=n.next)})),t},p=function(t){var n,e,r,i,a,c,u=[],f=this._root;f&&u.push(new o(f,this._x0,this._y0,this._x1,this._y1));while(n=u.pop())if(!t(f=n.node,r=n.x0,i=n.y0,a=n.x1,c=n.y1)&&f.length){var s=(r+a)/2,h=(i+c)/2;(e=f[3])&&u.push(new o(e,s,h,a,c)),(e=f[2])&&u.push(new o(e,r,h,s,c)),(e=f[1])&&u.push(new o(e,s,i,a,h)),(e=f[0])&&u.push(new o(e,r,i,s,h))}return this},_=function(t){var n,e=[],r=[];this._root&&e.push(new o(this._root,this._x0,this._y0,this._x1,this._y1));while(n=e.pop()){var i=n.node;if(i.length){var a,c=n.x0,u=n.y0,f=n.x1,s=n.y1,h=(c+f)/2,l=(u+s)/2;(a=i[0])&&e.push(new o(a,c,u,h,l)),(a=i[1])&&e.push(new o(a,h,u,f,l)),(a=i[2])&&e.push(new o(a,c,l,h,s)),(a=i[3])&&e.push(new o(a,h,l,f,s))}r.push(n)}while(n=r.pop())t(n.node,n.x0,n.y0,n.x1,n.y1);return this};function v(t){return t[0]}var g=function(t){return arguments.length?(this._x=t,this):this._x};function y(t){return t[1]}var x=function(t){return arguments.length?(this._y=t,this):this._y};function w(t,n,e){var r=new m(null==n?v:n,null==e?y:e,NaN,NaN,NaN,NaN);return null==t?r:r.addAll(t)}function m(t,n,e,r,i,a){this._x=t,this._y=n,this._x0=e,this._y0=r,this._x1=i,this._y1=a,this._root=void 0}function M(t){var n={data:t.data},e=n;while(t=t.next)e=e.next={data:t.data};return n}var j=w.prototype=m.prototype;j.copy=function(){var t,n,e=new m(this._x,this._y,this._x0,this._y0,this._x1,this._y1),r=this._root;if(!r)return e;if(!r.length)return e._root=M(r),e;t=[{source:r,target:e._root=new Array(4)}];while(r=t.pop())for(var i=0;i<4;++i)(n=r.source[i])&&(n.length?t.push({source:n,target:r.target[i]=new Array(4)}):r.target[i]=M(n));return e},j.add=r,j.addAll=a,j.cover=c,j.data=u,j.extent=f,j.find=s,j.remove=h,j.removeAll=l,j.root=d,j.size=b,j.visit=p,j.visitAfter=_,j.x=g,j.y=x},d0ae:function(t,n,e){"use strict";n["a"]=function(){}},d426:function(t,n,e){"use strict";var r=e("14f3"),i=e("ec83"),a=e("2388");n["a"]=function t(n){function e(t,e,c,u,f){if((o=t._squarify)&&o.ratio===n){var o,s,h,l,d,b=-1,p=o.length,_=t.value;while(++b<p){for(s=o[b],h=s.children,l=s.value=0,d=h.length;l<d;++l)s.value+=h[l].value;s.dice?Object(r["a"])(s,e,c,u,c+=(f-c)*s.value/_):Object(i["a"])(s,e,c,e+=(u-e)*s.value/_,f),_-=s.value}}else t._squarify=o=Object(a["c"])(n,t,e,c,u,f),o.ratio=n}return e.ratio=function(n){return t((n=+n)>1?n:1)},e}(a["b"])},d5a7:function(t,n,e){"use strict";n["a"]={draw:function(t,n){var e=Math.sqrt(n),r=-e/2;t.rect(r,r,e,e)}}},d5bc:function(t,n,e){"use strict";var r=e("74f4");n["a"]=function(t,n,e){var i=new r["a"],a=n;return null==n?(i.restart(t,n,e),i):(n=+n,e=null==e?Object(r["b"])():+e,i.restart((function r(c){c+=a,i.restart(r,a+=n,e),t(c)}),n,e),i)}},d63b:function(t,n,e){"use strict";var r=e("66d1");n["a"]=Object(r["a"])("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999")},d675:function(t,n,e){"use strict";var r=e("8c80");function i(t){this._context=t}i.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3;var e=(this._x0+4*this._x1+t)/6,i=(this._y0+4*this._y1+n)/6;this._line?this._context.lineTo(e,i):this._context.moveTo(e,i);break;case 3:this._point=4;default:Object(r["c"])(this,t,n);break}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}},n["a"]=function(t){return new i(t)}},d8ad:function(t,n,e){"use strict";n["a"]=function(t){return function(){return t}}},d933:function(t,n,e){"use strict";var r=e("a7fd");n["a"]=function(t,n){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(Object(r["a"])(n)/3)))-Object(r["a"])(Math.abs(t)))}},d989:function(t,n,e){"use strict";var r=e("a7fd");n["a"]=function(t,n){return t=Math.abs(t),n=Math.abs(n)-t,Math.max(0,Object(r["a"])(n)-Object(r["a"])(t))+1}},dad1:function(t,n,e){"use strict";var r=e("a7fd");n["a"]=function(t){return Math.max(0,-Object(r["a"])(Math.abs(t)))}},e311:function(t,n,e){"use strict";e.d(n,"b",(function(){return r}));var r="http://www.w3.org/1999/xhtml";n["a"]={svg:"http://www.w3.org/2000/svg",xhtml:r,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"}},e317:function(t,n,e){"use strict";n["a"]=function(t,n){return t=+t,n=+n,function(e){return t*(1-e)+n*e}}},e360:function(t,n,e){"use strict";e.d(n,"b",(function(){return f})),e.d(n,"c",(function(){return o}));var r=e("166a"),i=e("c84a"),a=e("4bcd"),c=e("b055");function u(t){return function(n){var e,i,a=n.length,c=new Array(a),u=new Array(a),f=new Array(a);for(e=0;e<a;++e)i=Object(r["g"])(n[e]),c[e]=i.r||0,u[e]=i.g||0,f[e]=i.b||0;return c=t(c),u=t(u),f=t(f),i.opacity=1,function(t){return i.r=c(t),i.g=u(t),i.b=f(t),i+""}}}n["a"]=function t(n){var e=Object(c["b"])(n);function i(t,n){var i=e((t=Object(r["g"])(t)).r,(n=Object(r["g"])(n)).r),a=e(t.g,n.g),u=e(t.b,n.b),f=Object(c["a"])(t.opacity,n.opacity);return function(n){return t.r=i(n),t.g=a(n),t.b=u(n),t.opacity=f(n),t+""}}return i.gamma=t,i}(1);var f=u(i["b"]),o=u(a["a"])},e38c:function(t,n,e){"use strict";var r=e("eadc"),i=e("d8ad"),a=e("4830"),c=e("fae8"),u=e("fda4");n["a"]=function(){var t=u["a"],n=null,e=Object(i["a"])(0),f=u["b"],o=Object(i["a"])(!0),s=null,h=a["a"],l=null;function d(i){var a,c,u,d,b,p=i.length,_=!1,v=new Array(p),g=new Array(p);for(null==s&&(l=h(b=Object(r["a"])())),a=0;a<=p;++a){if(!(a<p&&o(d=i[a],a,i))===_)if(_=!_)c=a,l.areaStart(),l.lineStart();else{for(l.lineEnd(),l.lineStart(),u=a-1;u>=c;--u)l.point(v[u],g[u]);l.lineEnd(),l.areaEnd()}_&&(v[a]=+t(d,a,i),g[a]=+e(d,a,i),l.point(n?+n(d,a,i):v[a],f?+f(d,a,i):g[a]))}if(b)return l=null,b+""||null}function b(){return Object(c["a"])().defined(o).curve(h).context(s)}return d.x=function(e){return arguments.length?(t="function"===typeof e?e:Object(i["a"])(+e),n=null,d):t},d.x0=function(n){return arguments.length?(t="function"===typeof n?n:Object(i["a"])(+n),d):t},d.x1=function(t){return arguments.length?(n=null==t?null:"function"===typeof t?t:Object(i["a"])(+t),d):n},d.y=function(t){return arguments.length?(e="function"===typeof t?t:Object(i["a"])(+t),f=null,d):e},d.y0=function(t){return arguments.length?(e="function"===typeof t?t:Object(i["a"])(+t),d):e},d.y1=function(t){return arguments.length?(f=null==t?null:"function"===typeof t?t:Object(i["a"])(+t),d):f},d.lineX0=d.lineY0=function(){return b().x(t).y(e)},d.lineY1=function(){return b().x(t).y(f)},d.lineX1=function(){return b().x(n).y(e)},d.defined=function(t){return arguments.length?(o="function"===typeof t?t:Object(i["a"])(!!t),d):o},d.curve=function(t){return arguments.length?(h=t,null!=s&&(l=h(s)),d):h},d.context=function(t){return arguments.length?(null==t?s=l=null:l=h(s=t),d):s},d}},e3b0:function(t,n,e){"use strict";e.d(n,"a",(function(){return o})),e.d(n,"b",(function(){return f}));var r=function(t,n){return t<n?-1:t>n?1:t>=n?0:NaN},i=function(t){return 1===t.length&&(t=a(t)),{left:function(n,e,r,i){null==r&&(r=0),null==i&&(i=n.length);while(r<i){var a=r+i>>>1;t(n[a],e)<0?r=a+1:i=a}return r},right:function(n,e,r,i){null==r&&(r=0),null==i&&(i=n.length);while(r<i){var a=r+i>>>1;t(n[a],e)>0?i=a:r=a+1}return r}}};function a(t){return function(n,e){return r(t(n),e)}}var c=i(r);c.right,c.left;var u=Array.prototype,f=(u.slice,u.map,function(t,n,e){t=+t,n=+n,e=(i=arguments.length)<2?(n=t,t=0,1):i<3?1:+e;var r=-1,i=0|Math.max(0,Math.ceil((n-t)/e)),a=new Array(i);while(++r<i)a[r]=t+r*e;return a});Math.sqrt(50),Math.sqrt(10),Math.sqrt(2);var o=function(t){var n,e,r,i=t.length,a=-1,c=0;while(++a<i)c+=t[a].length;e=new Array(c);while(--i>=0){r=t[i],n=r.length;while(--n>=0)e[--c]=r[n]}return e}},e48b:function(t,n,e){"use strict";e.d(n,"c",(function(){return Ot})),e.d(n,"a",(function(){return Nt}));var r=e("6fd3"),i=function(t){"function"!==typeof t&&(t=Object(r["a"])(t));for(var n=this._groups,e=n.length,i=new Array(e),a=0;a<e;++a)for(var c,u,f=n[a],o=f.length,s=i[a]=new Array(o),h=0;h<o;++h)(c=f[h])&&(u=t.call(c,c.__data__,h,f))&&("__data__"in c&&(u.__data__=c.__data__),s[h]=u);return new Nt(i,this._parents)},a=e("4230"),c=function(t){"function"!==typeof t&&(t=Object(a["a"])(t));for(var n=this._groups,e=n.length,r=[],i=[],c=0;c<e;++c)for(var u,f=n[c],o=f.length,s=0;s<o;++s)(u=f[s])&&(r.push(t.call(u,u.__data__,s,f)),i.push(u));return new Nt(r,i)},u=e("0a78"),f=function(t){"function"!==typeof t&&(t=Object(u["a"])(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var a,c=n[i],f=c.length,o=r[i]=[],s=0;s<f;++s)(a=c[s])&&t.call(a,a.__data__,s,c)&&o.push(a);return new Nt(r,this._parents)},o=function(t){return new Array(t.length)},s=function(){return new Nt(this._enter||this._groups.map(o),this._parents)};function h(t,n){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=n}h.prototype={constructor:h,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,n){return this._parent.insertBefore(t,n)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}};var l=function(t){return function(){return t}},d="$";function b(t,n,e,r,i,a){for(var c,u=0,f=n.length,o=a.length;u<o;++u)(c=n[u])?(c.__data__=a[u],r[u]=c):e[u]=new h(t,a[u]);for(;u<f;++u)(c=n[u])&&(i[u]=c)}function p(t,n,e,r,i,a,c){var u,f,o,s={},l=n.length,b=a.length,p=new Array(l);for(u=0;u<l;++u)(f=n[u])&&(p[u]=o=d+c.call(f,f.__data__,u,n),o in s?i[u]=f:s[o]=f);for(u=0;u<b;++u)o=d+c.call(t,a[u],u,a),(f=s[o])?(r[u]=f,f.__data__=a[u],s[o]=null):e[u]=new h(t,a[u]);for(u=0;u<l;++u)(f=n[u])&&s[p[u]]===f&&(i[u]=f)}var _=function(t,n){if(!t)return _=new Array(this.size()),o=-1,this.each((function(t){_[++o]=t})),_;var e=n?p:b,r=this._parents,i=this._groups;"function"!==typeof t&&(t=l(t));for(var a=i.length,c=new Array(a),u=new Array(a),f=new Array(a),o=0;o<a;++o){var s=r[o],h=i[o],d=h.length,_=t.call(s,s&&s.__data__,o,r),v=_.length,g=u[o]=new Array(v),y=c[o]=new Array(v),x=f[o]=new Array(d);e(s,h,g,y,x,_,n);for(var w,m,M=0,j=0;M<v;++M)if(w=g[M]){M>=j&&(j=M+1);while(!(m=y[j])&&++j<v);w._next=m||null}}return c=new Nt(c,r),c._enter=u,c._exit=f,c},v=function(){return new Nt(this._exit||this._groups.map(o),this._parents)},g=function(t,n,e){var r=this.enter(),i=this,a=this.exit();return r="function"===typeof t?t(r):r.append(t+""),null!=n&&(i=n(i)),null==e?a.remove():e(a),r&&i?r.merge(i).order():i},y=function(t){for(var n=this._groups,e=t._groups,r=n.length,i=e.length,a=Math.min(r,i),c=new Array(r),u=0;u<a;++u)for(var f,o=n[u],s=e[u],h=o.length,l=c[u]=new Array(h),d=0;d<h;++d)(f=o[d]||s[d])&&(l[d]=f);for(;u<r;++u)c[u]=n[u];return new Nt(c,this._parents)},x=function(){for(var t=this._groups,n=-1,e=t.length;++n<e;)for(var r,i=t[n],a=i.length-1,c=i[a];--a>=0;)(r=i[a])&&(c&&4^r.compareDocumentPosition(c)&&c.parentNode.insertBefore(r,c),c=r);return this},w=function(t){function n(n,e){return n&&e?t(n.__data__,e.__data__):!n-!e}t||(t=m);for(var e=this._groups,r=e.length,i=new Array(r),a=0;a<r;++a){for(var c,u=e[a],f=u.length,o=i[a]=new Array(f),s=0;s<f;++s)(c=u[s])&&(o[s]=c);o.sort(n)}return new Nt(i,this._parents).order()};function m(t,n){return t<n?-1:t>n?1:t>=n?0:NaN}var M=function(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this},j=function(){var t=new Array(this.size()),n=-1;return this.each((function(){t[++n]=this})),t},O=function(){for(var t=this._groups,n=0,e=t.length;n<e;++n)for(var r=t[n],i=0,a=r.length;i<a;++i){var c=r[i];if(c)return c}return null},N=function(){var t=0;return this.each((function(){++t})),t},T=function(){return!this.node()},k=function(t){for(var n=this._groups,e=0,r=n.length;e<r;++e)for(var i,a=n[e],c=0,u=a.length;c<u;++c)(i=a[c])&&t.call(i,i.__data__,c,a);return this},A=e("6cd4");function C(t){return function(){this.removeAttribute(t)}}function E(t){return function(){this.removeAttributeNS(t.space,t.local)}}function S(t,n){return function(){this.setAttribute(t,n)}}function U(t,n){return function(){this.setAttributeNS(t.space,t.local,n)}}function P(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttribute(t):this.setAttribute(t,e)}}function D(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,e)}}var L=function(t,n){var e=Object(A["a"])(t);if(arguments.length<2){var r=this.node();return e.local?r.getAttributeNS(e.space,e.local):r.getAttribute(e)}return this.each((null==n?e.local?E:C:"function"===typeof n?e.local?D:P:e.local?U:S)(e,n))},q=e("364b");function R(t){return function(){delete this[t]}}function z(t,n){return function(){this[t]=n}}function Y(t,n){return function(){var e=n.apply(this,arguments);null==e?delete this[t]:this[t]=e}}var B=function(t,n){return arguments.length>1?this.each((null==n?R:"function"===typeof n?Y:z)(t,n)):this.node()[t]};function F(t){return t.trim().split(/^|\s+/)}function H(t){return t.classList||new I(t)}function I(t){this._node=t,this._names=F(t.getAttribute("class")||"")}function G(t,n){var e=H(t),r=-1,i=n.length;while(++r<i)e.add(n[r])}function X(t,n){var e=H(t),r=-1,i=n.length;while(++r<i)e.remove(n[r])}function V(t){return function(){G(this,t)}}function Z(t){return function(){X(this,t)}}function $(t,n){return function(){(n.apply(this,arguments)?G:X)(this,t)}}I.prototype={add:function(t){var n=this._names.indexOf(t);n<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var n=this._names.indexOf(t);n>=0&&(this._names.splice(n,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}};var W=function(t,n){var e=F(t+"");if(arguments.length<2){var r=H(this.node()),i=-1,a=e.length;while(++i<a)if(!r.contains(e[i]))return!1;return!0}return this.each(("function"===typeof n?$:n?V:Z)(e,n))};function J(){this.textContent=""}function Q(t){return function(){this.textContent=t}}function K(t){return function(){var n=t.apply(this,arguments);this.textContent=null==n?"":n}}var tt=function(t){return arguments.length?this.each(null==t?J:("function"===typeof t?K:Q)(t)):this.node().textContent};function nt(){this.innerHTML=""}function et(t){return function(){this.innerHTML=t}}function rt(t){return function(){var n=t.apply(this,arguments);this.innerHTML=null==n?"":n}}var it=function(t){return arguments.length?this.each(null==t?nt:("function"===typeof t?rt:et)(t)):this.node().innerHTML};function at(){this.nextSibling&&this.parentNode.appendChild(this)}var ct=function(){return this.each(at)};function ut(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}var ft=function(){return this.each(ut)},ot=e("57f5"),st=function(t){var n="function"===typeof t?t:Object(ot["a"])(t);return this.select((function(){return this.appendChild(n.apply(this,arguments))}))};function ht(){return null}var lt=function(t,n){var e="function"===typeof t?t:Object(ot["a"])(t),i=null==n?ht:"function"===typeof n?n:Object(r["a"])(n);return this.select((function(){return this.insertBefore(e.apply(this,arguments),i.apply(this,arguments)||null)}))};function dt(){var t=this.parentNode;t&&t.removeChild(this)}var bt=function(){return this.each(dt)};function pt(){var t=this.cloneNode(!1),n=this.parentNode;return n?n.insertBefore(t,this.nextSibling):t}function _t(){var t=this.cloneNode(!0),n=this.parentNode;return n?n.insertBefore(t,this.nextSibling):t}var vt=function(t){return this.select(t?_t:pt)},gt=function(t){return arguments.length?this.property("__data__",t):this.node().__data__},yt=e("0165"),xt=e("a317");function wt(t,n,e){var r=Object(xt["a"])(t),i=r.CustomEvent;"function"===typeof i?i=new i(n,e):(i=r.document.createEvent("Event"),e?(i.initEvent(n,e.bubbles,e.cancelable),i.detail=e.detail):i.initEvent(n,!1,!1)),t.dispatchEvent(i)}function mt(t,n){return function(){return wt(this,t,n)}}function Mt(t,n){return function(){return wt(this,t,n.apply(this,arguments))}}var jt=function(t,n){return this.each(("function"===typeof n?Mt:mt)(t,n))},Ot=[null];function Nt(t,n){this._groups=t,this._parents=n}function Tt(){return new Nt([[document.documentElement]],Ot)}Nt.prototype=Tt.prototype={constructor:Nt,select:i,selectAll:c,filter:f,data:_,enter:s,exit:v,join:g,merge:y,order:x,sort:w,call:M,nodes:j,node:O,size:N,empty:T,each:k,attr:L,style:q["a"],property:B,classed:W,text:tt,html:it,raise:ct,lower:ft,append:st,insert:lt,remove:bt,clone:vt,datum:gt,on:yt["b"],dispatch:jt};n["b"]=Tt},ea1d:function(t,n,e){"use strict";var r=e("166a"),i=e("e360"),a=e("6730"),c=e("1b6d"),u=e("e317"),f=e("71bd"),o=e("90ef"),s=e("c698"),h=e("51de");n["a"]=function(t,n){var e,l=typeof n;return null==n||"boolean"===l?Object(s["a"])(n):("number"===l?u["a"]:"string"===l?(e=Object(r["e"])(n))?(n=e,i["a"]):o["a"]:n instanceof r["e"]?i["a"]:n instanceof Date?c["a"]:Object(h["b"])(n)?h["a"]:Array.isArray(n)?a["b"]:"function"!==typeof n.valueOf&&"function"!==typeof n.toString||isNaN(n)?f["a"]:u["a"])(t,n)}},eadc:function(t,n,e){"use strict";var r=Math.PI,i=2*r,a=1e-6,c=i-a;function u(){this._x0=this._y0=this._x1=this._y1=null,this._=""}function f(){return new u}u.prototype=f.prototype={constructor:u,moveTo:function(t,n){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+n)},closePath:function(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._+="Z")},lineTo:function(t,n){this._+="L"+(this._x1=+t)+","+(this._y1=+n)},quadraticCurveTo:function(t,n,e,r){this._+="Q"+ +t+","+ +n+","+(this._x1=+e)+","+(this._y1=+r)},bezierCurveTo:function(t,n,e,r,i,a){this._+="C"+ +t+","+ +n+","+ +e+","+ +r+","+(this._x1=+i)+","+(this._y1=+a)},arcTo:function(t,n,e,i,c){t=+t,n=+n,e=+e,i=+i,c=+c;var u=this._x1,f=this._y1,o=e-t,s=i-n,h=u-t,l=f-n,d=h*h+l*l;if(c<0)throw new Error("negative radius: "+c);if(null===this._x1)this._+="M"+(this._x1=t)+","+(this._y1=n);else if(d>a)if(Math.abs(l*o-s*h)>a&&c){var b=e-u,p=i-f,_=o*o+s*s,v=b*b+p*p,g=Math.sqrt(_),y=Math.sqrt(d),x=c*Math.tan((r-Math.acos((_+d-v)/(2*g*y)))/2),w=x/y,m=x/g;Math.abs(w-1)>a&&(this._+="L"+(t+w*h)+","+(n+w*l)),this._+="A"+c+","+c+",0,0,"+ +(l*b>h*p)+","+(this._x1=t+m*o)+","+(this._y1=n+m*s)}else this._+="L"+(this._x1=t)+","+(this._y1=n);else;},arc:function(t,n,e,u,f,o){t=+t,n=+n,e=+e,o=!!o;var s=e*Math.cos(u),h=e*Math.sin(u),l=t+s,d=n+h,b=1^o,p=o?u-f:f-u;if(e<0)throw new Error("negative radius: "+e);null===this._x1?this._+="M"+l+","+d:(Math.abs(this._x1-l)>a||Math.abs(this._y1-d)>a)&&(this._+="L"+l+","+d),e&&(p<0&&(p=p%i+i),p>c?this._+="A"+e+","+e+",0,1,"+b+","+(t-s)+","+(n-h)+"A"+e+","+e+",0,1,"+b+","+(this._x1=l)+","+(this._y1=d):p>a&&(this._+="A"+e+","+e+",0,"+ +(p>=r)+","+b+","+(this._x1=t+e*Math.cos(f))+","+(this._y1=n+e*Math.sin(f))))},rect:function(t,n,e,r){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+n)+"h"+ +e+"v"+ +r+"h"+-e+"Z"},toString:function(){return this._}},n["a"]=f},ec83:function(t,n,e){"use strict";n["a"]=function(t,n,e,r,i){var a,c=t.children,u=-1,f=c.length,o=t.value&&(i-e)/t.value;while(++u<f)a=c[u],a.x0=n,a.x1=r,a.y0=e,a.y1=e+=a.value*o}},eccb:function(t,n,e){"use strict";var r=Array.prototype.slice;function i(t){var n,e,r=t.length;while(r)e=Math.random()*r--|0,n=t[r],t[r]=t[e],t[e]=n;return t}n["a"]=function(t){var n,e,c=0,f=(t=i(r.call(t))).length,s=[];while(c<f)n=t[c],e&&u(e,n)?++c:(e=o(s=a(s,n)),c=0);return e};function a(t,n){var e,r;if(f(n,t))return[n];for(e=0;e<t.length;++e)if(c(n,t[e])&&f(h(t[e],n),t))return[t[e],n];for(e=0;e<t.length-1;++e)for(r=e+1;r<t.length;++r)if(c(h(t[e],t[r]),n)&&c(h(t[e],n),t[r])&&c(h(t[r],n),t[e])&&f(l(t[e],t[r],n),t))return[t[e],t[r],n];throw new Error}function c(t,n){var e=t.r-n.r,r=n.x-t.x,i=n.y-t.y;return e<0||e*e<r*r+i*i}function u(t,n){var e=t.r-n.r+1e-6,r=n.x-t.x,i=n.y-t.y;return e>0&&e*e>r*r+i*i}function f(t,n){for(var e=0;e<n.length;++e)if(!u(t,n[e]))return!1;return!0}function o(t){switch(t.length){case 1:return s(t[0]);case 2:return h(t[0],t[1]);case 3:return l(t[0],t[1],t[2])}}function s(t){return{x:t.x,y:t.y,r:t.r}}function h(t,n){var e=t.x,r=t.y,i=t.r,a=n.x,c=n.y,u=n.r,f=a-e,o=c-r,s=u-i,h=Math.sqrt(f*f+o*o);return{x:(e+a+f/h*s)/2,y:(r+c+o/h*s)/2,r:(h+i+u)/2}}function l(t,n,e){var r=t.x,i=t.y,a=t.r,c=n.x,u=n.y,f=n.r,o=e.x,s=e.y,h=e.r,l=r-c,d=r-o,b=i-u,p=i-s,_=f-a,v=h-a,g=r*r+i*i-a*a,y=g-c*c-u*u+f*f,x=g-o*o-s*s+h*h,w=d*b-l*p,m=(b*x-p*y)/(2*w)-r,M=(p*_-b*v)/w,j=(d*y-l*x)/(2*w)-i,O=(l*v-d*_)/w,N=M*M+O*O-1,T=2*(a+m*M+j*O),k=m*m+j*j-a*a,A=-(N?(T+Math.sqrt(T*T-4*N*k))/(2*N):k/T);return{x:r+m+M*A,y:i+j+O*A,r:A}}},f623:function(t,n,e){"use strict";e.d(n,"b",(function(){return c}));var r=e("18e2"),i=e("1738"),a=Object(r["a"])((function(t){t.setUTCMinutes(0,0,0)}),(function(t,n){t.setTime(+t+n*i["b"])}),(function(t,n){return(n-t)/i["b"]}),(function(t){return t.getUTCHours()}));n["a"]=a;var c=a.range},f8d7:function(t,n,e){"use strict";var r=e("0dd4"),i=e("14f3");n["a"]=function(){var t=1,n=1,e=0,a=!1;function c(i){var c=i.height+1;return i.x0=i.y0=e,i.x1=t,i.y1=n/c,i.eachBefore(u(n,c)),a&&i.eachBefore(r["a"]),i}function u(t,n){return function(r){r.children&&Object(i["a"])(r,r.x0,t*(r.depth+1)/n,r.x1,t*(r.depth+2)/n);var a=r.x0,c=r.y0,u=r.x1-e,f=r.y1-e;u<a&&(a=u=(a+u)/2),f<c&&(c=f=(c+f)/2),r.x0=a,r.y0=c,r.x1=u,r.y1=f}}return c.round=function(t){return arguments.length?(a=!!t,c):a},c.size=function(e){return arguments.length?(t=+e[0],n=+e[1],c):[t,n]},c.padding=function(t){return arguments.length?(e=+t,c):e},c}},f8ee:function(t,n,e){"use strict";e.d(n,"b",(function(){return c}));var r=e("18e2"),i=e("1738"),a=Object(r["a"])((function(t){t.setUTCSeconds(0,0)}),(function(t,n){t.setTime(+t+n*i["c"])}),(function(t,n){return(n-t)/i["c"]}),(function(t){return t.getUTCMinutes()}));n["a"]=a;var c=a.range},fae8:function(t,n,e){"use strict";var r=e("eadc"),i=e("d8ad"),a=e("4830"),c=e("fda4");n["a"]=function(){var t=c["a"],n=c["b"],e=Object(i["a"])(!0),u=null,f=a["a"],o=null;function s(i){var a,c,s,h=i.length,l=!1;for(null==u&&(o=f(s=Object(r["a"])())),a=0;a<=h;++a)!(a<h&&e(c=i[a],a,i))===l&&((l=!l)?o.lineStart():o.lineEnd()),l&&o.point(+t(c,a,i),+n(c,a,i));if(s)return o=null,s+""||null}return s.x=function(n){return arguments.length?(t="function"===typeof n?n:Object(i["a"])(+n),s):t},s.y=function(t){return arguments.length?(n="function"===typeof t?t:Object(i["a"])(+t),s):n},s.defined=function(t){return arguments.length?(e="function"===typeof t?t:Object(i["a"])(!!t),s):e},s.curve=function(t){return arguments.length?(f=t,null!=u&&(o=f(u)),s):f},s.context=function(t){return arguments.length?(null==t?u=o=null:o=f(u=t),s):u},s}},fda4:function(t,n,e){"use strict";function r(t){return t[0]}function i(t){return t[1]}e.d(n,"a",(function(){return r})),e.d(n,"b",(function(){return i}))}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,